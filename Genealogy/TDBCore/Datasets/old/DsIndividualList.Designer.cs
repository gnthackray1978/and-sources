//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GedcomDatasets
{


    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DsIndividualList")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DsIndividualList : global::System.Data.DataSet
    {

        private dtGeneralIndividualsDataTable tabledtGeneralIndividuals;

        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DsIndividualList()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DsIndividualList(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
            base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtGeneralIndividuals"] != null))
                {
                    base.Tables.Add(new dtGeneralIndividualsDataTable(ds.Tables["dtGeneralIndividuals"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtGeneralIndividualsDataTable dtGeneralIndividuals
        {
            get
            {
                return this.tabledtGeneralIndividuals;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone()
        {
            DsIndividualList cln = ((DsIndividualList)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtGeneralIndividuals"] != null))
                {
                    base.Tables.Add(new dtGeneralIndividualsDataTable(ds.Tables["dtGeneralIndividuals"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable)
        {
            this.tabledtGeneralIndividuals = ((dtGeneralIndividualsDataTable)(base.Tables["dtGeneralIndividuals"]));
            if ((initTable == true))
            {
                if ((this.tabledtGeneralIndividuals != null))
                {
                    this.tabledtGeneralIndividuals.InitVars();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.DataSetName = "DsIndividualList";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DsIndividualList.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtGeneralIndividuals = new dtGeneralIndividualsDataTable();
            base.Tables.Add(this.tabledtGeneralIndividuals);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtGeneralIndividuals()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            DsIndividualList ds = new DsIndividualList();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        public delegate void dtGeneralIndividualsRowChangeEventHandler(object sender, dtGeneralIndividualsRowChangeEvent e);

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtGeneralIndividualsDataTable : global::System.Data.TypedTableBase<dtGeneralIndividualsRow>
        {

            private global::System.Data.DataColumn columnIndRef;

            private global::System.Data.DataColumn columnChristianNames;

            private global::System.Data.DataColumn columnSurname;

            private global::System.Data.DataColumn columnBirthLocation;

            private global::System.Data.DataColumn columnBirthUpper;

            private global::System.Data.DataColumn columnBirthLower;

            private global::System.Data.DataColumn columnBirthMonthUpper;

            private global::System.Data.DataColumn columnBirthMonthLower;

            private global::System.Data.DataColumn columnBirthYearUpper;

            private global::System.Data.DataColumn columnBirthYearLower;

            private global::System.Data.DataColumn columnMarriageLocation;

            private global::System.Data.DataColumn columnMarriageUpper;

            private global::System.Data.DataColumn columnMarriageLower;

            private global::System.Data.DataColumn columnMarriageMonthUpper;

            private global::System.Data.DataColumn columnMarriageMonthLower;

            private global::System.Data.DataColumn columnMarriageYearUpper;

            private global::System.Data.DataColumn columnMarriageYearLower;

            private global::System.Data.DataColumn columnDeathLocation;

            private global::System.Data.DataColumn columnDeathUpper;

            private global::System.Data.DataColumn columnDeathLower;

            private global::System.Data.DataColumn columnDeathMonthUpper;

            private global::System.Data.DataColumn columnDeathMonthLower;

            private global::System.Data.DataColumn columnDeathYearUpper;

            private global::System.Data.DataColumn columnDeathYearLower;

            private global::System.Data.DataColumn columnResidenceFirst;

            private global::System.Data.DataColumn columnResidenceSecond;

            private global::System.Data.DataColumn columnResidenceThird;

            private global::System.Data.DataColumn columnSp1Ref;

            private global::System.Data.DataColumn columnSp1CName;

            private global::System.Data.DataColumn columnSp1SName;

            private global::System.Data.DataColumn columnSp2Ref;

            private global::System.Data.DataColumn columnSp2CName;

            private global::System.Data.DataColumn columnSp2SName;

            private global::System.Data.DataColumn columnSp3Ref;

            private global::System.Data.DataColumn columnSp3CName;

            private global::System.Data.DataColumn columnSp3SName;

            private global::System.Data.DataColumn columnResidenceFirstDate;

            private global::System.Data.DataColumn columnResidenceSecondDate;

            private global::System.Data.DataColumn columnResidenceThirdDate;

            private global::System.Data.DataColumn columnChildInfo;

            private global::System.Data.DataColumn columnMaidenName;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGeneralIndividualsDataTable()
            {
                this.TableName = "dtGeneralIndividuals";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtGeneralIndividualsDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtGeneralIndividualsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndRefColumn
            {
                get
                {
                    return this.columnIndRef;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChristianNamesColumn
            {
                get
                {
                    return this.columnChristianNames;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SurnameColumn
            {
                get
                {
                    return this.columnSurname;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthLocationColumn
            {
                get
                {
                    return this.columnBirthLocation;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthUpperColumn
            {
                get
                {
                    return this.columnBirthUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthLowerColumn
            {
                get
                {
                    return this.columnBirthLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthMonthUpperColumn
            {
                get
                {
                    return this.columnBirthMonthUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthMonthLowerColumn
            {
                get
                {
                    return this.columnBirthMonthLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthYearUpperColumn
            {
                get
                {
                    return this.columnBirthYearUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BirthYearLowerColumn
            {
                get
                {
                    return this.columnBirthYearLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageLocationColumn
            {
                get
                {
                    return this.columnMarriageLocation;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageUpperColumn
            {
                get
                {
                    return this.columnMarriageUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageLowerColumn
            {
                get
                {
                    return this.columnMarriageLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageMonthUpperColumn
            {
                get
                {
                    return this.columnMarriageMonthUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageMonthLowerColumn
            {
                get
                {
                    return this.columnMarriageMonthLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageYearUpperColumn
            {
                get
                {
                    return this.columnMarriageYearUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MarriageYearLowerColumn
            {
                get
                {
                    return this.columnMarriageYearLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathLocationColumn
            {
                get
                {
                    return this.columnDeathLocation;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathUpperColumn
            {
                get
                {
                    return this.columnDeathUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathLowerColumn
            {
                get
                {
                    return this.columnDeathLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathMonthUpperColumn
            {
                get
                {
                    return this.columnDeathMonthUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathMonthLowerColumn
            {
                get
                {
                    return this.columnDeathMonthLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathYearUpperColumn
            {
                get
                {
                    return this.columnDeathYearUpper;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeathYearLowerColumn
            {
                get
                {
                    return this.columnDeathYearLower;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidenceFirstColumn
            {
                get
                {
                    return this.columnResidenceFirst;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidenceSecondColumn
            {
                get
                {
                    return this.columnResidenceSecond;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidenceThirdColumn
            {
                get
                {
                    return this.columnResidenceThird;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp1RefColumn
            {
                get
                {
                    return this.columnSp1Ref;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp1CNameColumn
            {
                get
                {
                    return this.columnSp1CName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp1SNameColumn
            {
                get
                {
                    return this.columnSp1SName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp2RefColumn
            {
                get
                {
                    return this.columnSp2Ref;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp2CNameColumn
            {
                get
                {
                    return this.columnSp2CName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp2SNameColumn
            {
                get
                {
                    return this.columnSp2SName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp3RefColumn
            {
                get
                {
                    return this.columnSp3Ref;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp3CNameColumn
            {
                get
                {
                    return this.columnSp3CName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sp3SNameColumn
            {
                get
                {
                    return this.columnSp3SName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidenceFirstDateColumn
            {
                get
                {
                    return this.columnResidenceFirstDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidenceSecondDateColumn
            {
                get
                {
                    return this.columnResidenceSecondDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ResidenceThirdDateColumn
            {
                get
                {
                    return this.columnResidenceThirdDate;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChildInfoColumn
            {
                get
                {
                    return this.columnChildInfo;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaidenNameColumn
            {
                get
                {
                    return this.columnMaidenName;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGeneralIndividualsRow this[int index]
            {
                get
                {
                    return ((dtGeneralIndividualsRow)(this.Rows[index]));
                }
            }

            public event dtGeneralIndividualsRowChangeEventHandler dtGeneralIndividualsRowChanging;

            public event dtGeneralIndividualsRowChangeEventHandler dtGeneralIndividualsRowChanged;

            public event dtGeneralIndividualsRowChangeEventHandler dtGeneralIndividualsRowDeleting;

            public event dtGeneralIndividualsRowChangeEventHandler dtGeneralIndividualsRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtGeneralIndividualsRow(dtGeneralIndividualsRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGeneralIndividualsRow AdddtGeneralIndividualsRow(
                        string IndRef,
                        string ChristianNames,
                        string Surname,
                        string BirthLocation,
                        System.DateTime BirthUpper,
                        System.DateTime BirthLower,
                        int BirthMonthUpper,
                        int BirthMonthLower,
                        int BirthYearUpper,
                        int BirthYearLower,
                        string MarriageLocation,
                        System.DateTime MarriageUpper,
                        System.DateTime MarriageLower,
                        int MarriageMonthUpper,
                        int MarriageMonthLower,
                        int MarriageYearUpper,
                        int MarriageYearLower,
                        string DeathLocation,
                        System.DateTime DeathUpper,
                        System.DateTime DeathLower,
                        int DeathMonthUpper,
                        int DeathMonthLower,
                        int DeathYearUpper,
                        int DeathYearLower,
                        string ResidenceFirst,
                        string ResidenceSecond,
                        string ResidenceThird,
                        string Sp1Ref,
                        string Sp1CName,
                        string Sp1SName,
                        string Sp2Ref,
                        string Sp2CName,
                        string Sp2SName,
                        string Sp3Ref,
                        string Sp3CName,
                        string Sp3SName,
                        System.DateTime ResidenceFirstDate,
                        System.DateTime ResidenceSecondDate,
                        System.DateTime ResidenceThirdDate,
                        string ChildInfo,
                        string MaidenName)
            {
                dtGeneralIndividualsRow rowdtGeneralIndividualsRow = ((dtGeneralIndividualsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IndRef,
                        ChristianNames,
                        Surname,
                        BirthLocation,
                        BirthUpper,
                        BirthLower,
                        BirthMonthUpper,
                        BirthMonthLower,
                        BirthYearUpper,
                        BirthYearLower,
                        MarriageLocation,
                        MarriageUpper,
                        MarriageLower,
                        MarriageMonthUpper,
                        MarriageMonthLower,
                        MarriageYearUpper,
                        MarriageYearLower,
                        DeathLocation,
                        DeathUpper,
                        DeathLower,
                        DeathMonthUpper,
                        DeathMonthLower,
                        DeathYearUpper,
                        DeathYearLower,
                        ResidenceFirst,
                        ResidenceSecond,
                        ResidenceThird,
                        Sp1Ref,
                        Sp1CName,
                        Sp1SName,
                        Sp2Ref,
                        Sp2CName,
                        Sp2SName,
                        Sp3Ref,
                        Sp3CName,
                        Sp3SName,
                        ResidenceFirstDate,
                        ResidenceSecondDate,
                        ResidenceThirdDate,
                        ChildInfo,
                        MaidenName};
                rowdtGeneralIndividualsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtGeneralIndividualsRow);
                return rowdtGeneralIndividualsRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                dtGeneralIndividualsDataTable cln = ((dtGeneralIndividualsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new dtGeneralIndividualsDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnIndRef = base.Columns["IndRef"];
                this.columnChristianNames = base.Columns["ChristianNames"];
                this.columnSurname = base.Columns["Surname"];
                this.columnBirthLocation = base.Columns["BirthLocation"];
                this.columnBirthUpper = base.Columns["BirthUpper"];
                this.columnBirthLower = base.Columns["BirthLower"];
                this.columnBirthMonthUpper = base.Columns["BirthMonthUpper"];
                this.columnBirthMonthLower = base.Columns["BirthMonthLower"];
                this.columnBirthYearUpper = base.Columns["BirthYearUpper"];
                this.columnBirthYearLower = base.Columns["BirthYearLower"];
                this.columnMarriageLocation = base.Columns["MarriageLocation"];
                this.columnMarriageUpper = base.Columns["MarriageUpper"];
                this.columnMarriageLower = base.Columns["MarriageLower"];
                this.columnMarriageMonthUpper = base.Columns["MarriageMonthUpper"];
                this.columnMarriageMonthLower = base.Columns["MarriageMonthLower"];
                this.columnMarriageYearUpper = base.Columns["MarriageYearUpper"];
                this.columnMarriageYearLower = base.Columns["MarriageYearLower"];
                this.columnDeathLocation = base.Columns["DeathLocation"];
                this.columnDeathUpper = base.Columns["DeathUpper"];
                this.columnDeathLower = base.Columns["DeathLower"];
                this.columnDeathMonthUpper = base.Columns["DeathMonthUpper"];
                this.columnDeathMonthLower = base.Columns["DeathMonthLower"];
                this.columnDeathYearUpper = base.Columns["DeathYearUpper"];
                this.columnDeathYearLower = base.Columns["DeathYearLower"];
                this.columnResidenceFirst = base.Columns["ResidenceFirst"];
                this.columnResidenceSecond = base.Columns["ResidenceSecond"];
                this.columnResidenceThird = base.Columns["ResidenceThird"];
                this.columnSp1Ref = base.Columns["Sp1Ref"];
                this.columnSp1CName = base.Columns["Sp1CName"];
                this.columnSp1SName = base.Columns["Sp1SName"];
                this.columnSp2Ref = base.Columns["Sp2Ref"];
                this.columnSp2CName = base.Columns["Sp2CName"];
                this.columnSp2SName = base.Columns["Sp2SName"];
                this.columnSp3Ref = base.Columns["Sp3Ref"];
                this.columnSp3CName = base.Columns["Sp3CName"];
                this.columnSp3SName = base.Columns["Sp3SName"];
                this.columnResidenceFirstDate = base.Columns["ResidenceFirstDate"];
                this.columnResidenceSecondDate = base.Columns["ResidenceSecondDate"];
                this.columnResidenceThirdDate = base.Columns["ResidenceThirdDate"];
                this.columnChildInfo = base.Columns["ChildInfo"];
                this.columnMaidenName = base.Columns["MaidenName"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnIndRef = new global::System.Data.DataColumn("IndRef", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndRef);
                this.columnChristianNames = new global::System.Data.DataColumn("ChristianNames", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChristianNames);
                this.columnSurname = new global::System.Data.DataColumn("Surname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurname);
                this.columnBirthLocation = new global::System.Data.DataColumn("BirthLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthLocation);
                this.columnBirthUpper = new global::System.Data.DataColumn("BirthUpper", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthUpper);
                this.columnBirthLower = new global::System.Data.DataColumn("BirthLower", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthLower);
                this.columnBirthMonthUpper = new global::System.Data.DataColumn("BirthMonthUpper", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthMonthUpper);
                this.columnBirthMonthLower = new global::System.Data.DataColumn("BirthMonthLower", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthMonthLower);
                this.columnBirthYearUpper = new global::System.Data.DataColumn("BirthYearUpper", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthYearUpper);
                this.columnBirthYearLower = new global::System.Data.DataColumn("BirthYearLower", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBirthYearLower);
                this.columnMarriageLocation = new global::System.Data.DataColumn("MarriageLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriageLocation);
                this.columnMarriageUpper = new global::System.Data.DataColumn("MarriageUpper", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriageUpper);
                this.columnMarriageLower = new global::System.Data.DataColumn("MarriageLower", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriageLower);
                this.columnMarriageMonthUpper = new global::System.Data.DataColumn("MarriageMonthUpper", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriageMonthUpper);
                this.columnMarriageMonthLower = new global::System.Data.DataColumn("MarriageMonthLower", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriageMonthLower);
                this.columnMarriageYearUpper = new global::System.Data.DataColumn("MarriageYearUpper", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriageYearUpper);
                this.columnMarriageYearLower = new global::System.Data.DataColumn("MarriageYearLower", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarriageYearLower);
                this.columnDeathLocation = new global::System.Data.DataColumn("DeathLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathLocation);
                this.columnDeathUpper = new global::System.Data.DataColumn("DeathUpper", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathUpper);
                this.columnDeathLower = new global::System.Data.DataColumn("DeathLower", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathLower);
                this.columnDeathMonthUpper = new global::System.Data.DataColumn("DeathMonthUpper", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathMonthUpper);
                this.columnDeathMonthLower = new global::System.Data.DataColumn("DeathMonthLower", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathMonthLower);
                this.columnDeathYearUpper = new global::System.Data.DataColumn("DeathYearUpper", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathYearUpper);
                this.columnDeathYearLower = new global::System.Data.DataColumn("DeathYearLower", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeathYearLower);
                this.columnResidenceFirst = new global::System.Data.DataColumn("ResidenceFirst", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidenceFirst);
                this.columnResidenceSecond = new global::System.Data.DataColumn("ResidenceSecond", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidenceSecond);
                this.columnResidenceThird = new global::System.Data.DataColumn("ResidenceThird", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidenceThird);
                this.columnSp1Ref = new global::System.Data.DataColumn("Sp1Ref", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp1Ref);
                this.columnSp1CName = new global::System.Data.DataColumn("Sp1CName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp1CName);
                this.columnSp1SName = new global::System.Data.DataColumn("Sp1SName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp1SName);
                this.columnSp2Ref = new global::System.Data.DataColumn("Sp2Ref", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp2Ref);
                this.columnSp2CName = new global::System.Data.DataColumn("Sp2CName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp2CName);
                this.columnSp2SName = new global::System.Data.DataColumn("Sp2SName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp2SName);
                this.columnSp3Ref = new global::System.Data.DataColumn("Sp3Ref", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp3Ref);
                this.columnSp3CName = new global::System.Data.DataColumn("Sp3CName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp3CName);
                this.columnSp3SName = new global::System.Data.DataColumn("Sp3SName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSp3SName);
                this.columnResidenceFirstDate = new global::System.Data.DataColumn("ResidenceFirstDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidenceFirstDate);
                this.columnResidenceSecondDate = new global::System.Data.DataColumn("ResidenceSecondDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidenceSecondDate);
                this.columnResidenceThirdDate = new global::System.Data.DataColumn("ResidenceThirdDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResidenceThirdDate);
                this.columnChildInfo = new global::System.Data.DataColumn("ChildInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChildInfo);
                this.columnMaidenName = new global::System.Data.DataColumn("MaidenName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaidenName);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGeneralIndividualsRow NewdtGeneralIndividualsRow()
            {
                return ((dtGeneralIndividualsRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new dtGeneralIndividualsRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(dtGeneralIndividualsRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.dtGeneralIndividualsRowChanged != null))
                {
                    this.dtGeneralIndividualsRowChanged(this, new dtGeneralIndividualsRowChangeEvent(((dtGeneralIndividualsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.dtGeneralIndividualsRowChanging != null))
                {
                    this.dtGeneralIndividualsRowChanging(this, new dtGeneralIndividualsRowChangeEvent(((dtGeneralIndividualsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.dtGeneralIndividualsRowDeleted != null))
                {
                    this.dtGeneralIndividualsRowDeleted(this, new dtGeneralIndividualsRowChangeEvent(((dtGeneralIndividualsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.dtGeneralIndividualsRowDeleting != null))
                {
                    this.dtGeneralIndividualsRowDeleting(this, new dtGeneralIndividualsRowChangeEvent(((dtGeneralIndividualsRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtGeneralIndividualsRow(dtGeneralIndividualsRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DsIndividualList ds = new DsIndividualList();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtGeneralIndividualsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtGeneralIndividualsRow : global::System.Data.DataRow
        {

            private dtGeneralIndividualsDataTable tabledtGeneralIndividuals;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtGeneralIndividualsRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tabledtGeneralIndividuals = ((dtGeneralIndividualsDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IndRef
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.IndRefColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'IndRef\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.IndRefColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChristianNames
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.ChristianNamesColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChristianNames\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.ChristianNamesColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Surname
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.SurnameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Surname\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.SurnameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BirthLocation
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.BirthLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthLocation\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.BirthLocationColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BirthUpper
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.BirthUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthUpper\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.BirthUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BirthLower
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.BirthLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthLower\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.BirthLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BirthMonthUpper
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.BirthMonthUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthMonthUpper\' in table \'dtGeneralIndividuals\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.BirthMonthUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BirthMonthLower
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.BirthMonthLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthMonthLower\' in table \'dtGeneralIndividuals\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.BirthMonthLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BirthYearUpper
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.BirthYearUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthYearUpper\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.BirthYearUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int BirthYearLower
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.BirthYearLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'BirthYearLower\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.BirthYearLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MarriageLocation
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.MarriageLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarriageLocation\' in table \'dtGeneralIndividuals\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.MarriageLocationColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MarriageUpper
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.MarriageUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarriageUpper\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.MarriageUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MarriageLower
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.MarriageLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarriageLower\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.MarriageLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MarriageMonthUpper
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.MarriageMonthUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarriageMonthUpper\' in table \'dtGeneralIndividuals\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.MarriageMonthUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MarriageMonthLower
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.MarriageMonthLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarriageMonthLower\' in table \'dtGeneralIndividuals\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.MarriageMonthLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MarriageYearUpper
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.MarriageYearUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarriageYearUpper\' in table \'dtGeneralIndividuals\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.MarriageYearUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MarriageYearLower
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.MarriageYearLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarriageYearLower\' in table \'dtGeneralIndividuals\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.MarriageYearLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeathLocation
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.DeathLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathLocation\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.DeathLocationColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeathUpper
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.DeathUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathUpper\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.DeathUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeathLower
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.DeathLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathLower\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.DeathLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeathMonthUpper
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.DeathMonthUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathMonthUpper\' in table \'dtGeneralIndividuals\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.DeathMonthUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeathMonthLower
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.DeathMonthLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathMonthLower\' in table \'dtGeneralIndividuals\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.DeathMonthLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeathYearUpper
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.DeathYearUpperColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathYearUpper\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.DeathYearUpperColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeathYearLower
            {
                get
                {
                    try
                    {
                        return ((int)(this[this.tabledtGeneralIndividuals.DeathYearLowerColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeathYearLower\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.DeathYearLowerColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResidenceFirst
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.ResidenceFirstColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidenceFirst\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.ResidenceFirstColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResidenceSecond
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.ResidenceSecondColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidenceSecond\' in table \'dtGeneralIndividuals\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.ResidenceSecondColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ResidenceThird
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.ResidenceThirdColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidenceThird\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.ResidenceThirdColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp1Ref
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp1RefColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp1Ref\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp1RefColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp1CName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp1CNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp1CName\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp1CNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp1SName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp1SNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp1SName\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp1SNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp2Ref
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp2RefColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp2Ref\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp2RefColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp2CName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp2CNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp2CName\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp2CNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp2SName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp2SNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp2SName\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp2SNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp3Ref
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp3RefColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp3Ref\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp3RefColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp3CName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp3CNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp3CName\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp3CNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sp3SName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.Sp3SNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sp3SName\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.Sp3SNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ResidenceFirstDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.ResidenceFirstDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidenceFirstDate\' in table \'dtGeneralIndividuals\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.ResidenceFirstDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ResidenceSecondDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.ResidenceSecondDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidenceSecondDate\' in table \'dtGeneralIndividuals\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.ResidenceSecondDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ResidenceThirdDate
            {
                get
                {
                    try
                    {
                        return ((global::System.DateTime)(this[this.tabledtGeneralIndividuals.ResidenceThirdDateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ResidenceThirdDate\' in table \'dtGeneralIndividuals\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.ResidenceThirdDateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChildInfo
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.ChildInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChildInfo\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.ChildInfoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaidenName
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tabledtGeneralIndividuals.MaidenNameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaidenName\' in table \'dtGeneralIndividuals\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tabledtGeneralIndividuals.MaidenNameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndRefNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.IndRefColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndRefNull()
            {
                this[this.tabledtGeneralIndividuals.IndRefColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChristianNamesNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.ChristianNamesColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChristianNamesNull()
            {
                this[this.tabledtGeneralIndividuals.ChristianNamesColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSurnameNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.SurnameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSurnameNull()
            {
                this[this.tabledtGeneralIndividuals.SurnameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthLocationNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.BirthLocationColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthLocationNull()
            {
                this[this.tabledtGeneralIndividuals.BirthLocationColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.BirthUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthUpperNull()
            {
                this[this.tabledtGeneralIndividuals.BirthUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.BirthLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthLowerNull()
            {
                this[this.tabledtGeneralIndividuals.BirthLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthMonthUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.BirthMonthUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthMonthUpperNull()
            {
                this[this.tabledtGeneralIndividuals.BirthMonthUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthMonthLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.BirthMonthLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthMonthLowerNull()
            {
                this[this.tabledtGeneralIndividuals.BirthMonthLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthYearUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.BirthYearUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthYearUpperNull()
            {
                this[this.tabledtGeneralIndividuals.BirthYearUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBirthYearLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.BirthYearLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBirthYearLowerNull()
            {
                this[this.tabledtGeneralIndividuals.BirthYearLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageLocationNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.MarriageLocationColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageLocationNull()
            {
                this[this.tabledtGeneralIndividuals.MarriageLocationColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.MarriageUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageUpperNull()
            {
                this[this.tabledtGeneralIndividuals.MarriageUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.MarriageLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageLowerNull()
            {
                this[this.tabledtGeneralIndividuals.MarriageLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageMonthUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.MarriageMonthUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageMonthUpperNull()
            {
                this[this.tabledtGeneralIndividuals.MarriageMonthUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageMonthLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.MarriageMonthLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageMonthLowerNull()
            {
                this[this.tabledtGeneralIndividuals.MarriageMonthLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageYearUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.MarriageYearUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageYearUpperNull()
            {
                this[this.tabledtGeneralIndividuals.MarriageYearUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarriageYearLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.MarriageYearLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarriageYearLowerNull()
            {
                this[this.tabledtGeneralIndividuals.MarriageYearLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathLocationNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.DeathLocationColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathLocationNull()
            {
                this[this.tabledtGeneralIndividuals.DeathLocationColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.DeathUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathUpperNull()
            {
                this[this.tabledtGeneralIndividuals.DeathUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.DeathLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathLowerNull()
            {
                this[this.tabledtGeneralIndividuals.DeathLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathMonthUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.DeathMonthUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathMonthUpperNull()
            {
                this[this.tabledtGeneralIndividuals.DeathMonthUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathMonthLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.DeathMonthLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathMonthLowerNull()
            {
                this[this.tabledtGeneralIndividuals.DeathMonthLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathYearUpperNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.DeathYearUpperColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathYearUpperNull()
            {
                this[this.tabledtGeneralIndividuals.DeathYearUpperColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeathYearLowerNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.DeathYearLowerColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeathYearLowerNull()
            {
                this[this.tabledtGeneralIndividuals.DeathYearLowerColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidenceFirstNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.ResidenceFirstColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidenceFirstNull()
            {
                this[this.tabledtGeneralIndividuals.ResidenceFirstColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidenceSecondNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.ResidenceSecondColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidenceSecondNull()
            {
                this[this.tabledtGeneralIndividuals.ResidenceSecondColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidenceThirdNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.ResidenceThirdColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidenceThirdNull()
            {
                this[this.tabledtGeneralIndividuals.ResidenceThirdColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp1RefNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp1RefColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp1RefNull()
            {
                this[this.tabledtGeneralIndividuals.Sp1RefColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp1CNameNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp1CNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp1CNameNull()
            {
                this[this.tabledtGeneralIndividuals.Sp1CNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp1SNameNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp1SNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp1SNameNull()
            {
                this[this.tabledtGeneralIndividuals.Sp1SNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp2RefNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp2RefColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp2RefNull()
            {
                this[this.tabledtGeneralIndividuals.Sp2RefColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp2CNameNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp2CNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp2CNameNull()
            {
                this[this.tabledtGeneralIndividuals.Sp2CNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp2SNameNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp2SNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp2SNameNull()
            {
                this[this.tabledtGeneralIndividuals.Sp2SNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp3RefNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp3RefColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp3RefNull()
            {
                this[this.tabledtGeneralIndividuals.Sp3RefColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp3CNameNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp3CNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp3CNameNull()
            {
                this[this.tabledtGeneralIndividuals.Sp3CNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSp3SNameNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.Sp3SNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSp3SNameNull()
            {
                this[this.tabledtGeneralIndividuals.Sp3SNameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidenceFirstDateNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.ResidenceFirstDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidenceFirstDateNull()
            {
                this[this.tabledtGeneralIndividuals.ResidenceFirstDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidenceSecondDateNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.ResidenceSecondDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidenceSecondDateNull()
            {
                this[this.tabledtGeneralIndividuals.ResidenceSecondDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsResidenceThirdDateNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.ResidenceThirdDateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetResidenceThirdDateNull()
            {
                this[this.tabledtGeneralIndividuals.ResidenceThirdDateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChildInfoNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.ChildInfoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChildInfoNull()
            {
                this[this.tabledtGeneralIndividuals.ChildInfoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaidenNameNull()
            {
                return this.IsNull(this.tabledtGeneralIndividuals.MaidenNameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaidenNameNull()
            {
                this[this.tabledtGeneralIndividuals.MaidenNameColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtGeneralIndividualsRowChangeEvent : global::System.EventArgs
        {

            private dtGeneralIndividualsRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGeneralIndividualsRowChangeEvent(dtGeneralIndividualsRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtGeneralIndividualsRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591