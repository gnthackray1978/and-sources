//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TDBCore.EntityModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GeneralModelContainer : DbContext
    {
        public GeneralModelContainer()
            : base("name=GeneralModelContainer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Marriage> Marriages { get; set; }
        public virtual DbSet<Parish> Parishs { get; set; }
        public virtual DbSet<SourceMappingParish> SourceMappingParishs { get; set; }
        public virtual DbSet<SourceMapping> SourceMappings { get; set; }
        public virtual DbSet<Source> Sources { get; set; }
        public virtual DbSet<SourceType> SourceTypes { get; set; }
        public virtual DbSet<File> Files { get; set; }
        public virtual DbSet<ParishTranscriptionDetail> ParishTranscriptionDetails { get; set; }
        public virtual DbSet<ParishRecord> ParishRecords { get; set; }
        public virtual DbSet<ParishRecordSource> ParishRecordSources { get; set; }
        public virtual DbSet<LocationDictionary> LocationDictionaries { get; set; }
        public virtual DbSet<CountyDictionary> CountyDictionaries { get; set; }
        public virtual DbSet<MissingRecord> MissingRecords { get; set; }
        public virtual DbSet<Person> Persons { get; set; }
        public virtual DbSet<ParishCounter> ParishCounter { get; set; }
        public virtual DbSet<uvw_1841Census> uvw_1841Census { get; set; }
        public virtual DbSet<Log> Log { get; set; }
        public virtual DbSet<BatchLog> BatchLog { get; set; }
        public virtual DbSet<MarriageMapWitness> MarriageMapWitness { get; set; }
        public virtual DbSet<Relations> Relations { get; set; }
        public virtual DbSet<RelationTypes> RelationTypes { get; set; }
        public virtual DbSet<SourceMappingTypes> SourceMappingTypes { get; set; }
    
        public virtual ObjectResult<Source> GetSourcesBySourceTypes(string sourceRef, Nullable<int> sourceDateToUpper, Nullable<int> sourceDateLower, Nullable<int> sourceDateToLower, Nullable<int> sourceDateUpper, Nullable<int> userID, string originalLocation, Nullable<System.DateTime> dateAddedUpper, Nullable<System.DateTime> dateAddedLower, Nullable<bool> isThackrayFound, Nullable<bool> isThackrayFoundInverted, Nullable<bool> isViewedInvert, Nullable<bool> isViewed, Nullable<bool> isCopyHeldInverted, Nullable<bool> isCopyHeld, string types, Nullable<int> sourceMarriageCount, Nullable<int> sourcePersonCount)
        {
            var sourceRefParameter = sourceRef != null ?
                new ObjectParameter("SourceRef", sourceRef) :
                new ObjectParameter("SourceRef", typeof(string));
    
            var sourceDateToUpperParameter = sourceDateToUpper.HasValue ?
                new ObjectParameter("SourceDateToUpper", sourceDateToUpper) :
                new ObjectParameter("SourceDateToUpper", typeof(int));
    
            var sourceDateLowerParameter = sourceDateLower.HasValue ?
                new ObjectParameter("SourceDateLower", sourceDateLower) :
                new ObjectParameter("SourceDateLower", typeof(int));
    
            var sourceDateToLowerParameter = sourceDateToLower.HasValue ?
                new ObjectParameter("SourceDateToLower", sourceDateToLower) :
                new ObjectParameter("SourceDateToLower", typeof(int));
    
            var sourceDateUpperParameter = sourceDateUpper.HasValue ?
                new ObjectParameter("SourceDateUpper", sourceDateUpper) :
                new ObjectParameter("SourceDateUpper", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var originalLocationParameter = originalLocation != null ?
                new ObjectParameter("OriginalLocation", originalLocation) :
                new ObjectParameter("OriginalLocation", typeof(string));
    
            var dateAddedUpperParameter = dateAddedUpper.HasValue ?
                new ObjectParameter("DateAddedUpper", dateAddedUpper) :
                new ObjectParameter("DateAddedUpper", typeof(System.DateTime));
    
            var dateAddedLowerParameter = dateAddedLower.HasValue ?
                new ObjectParameter("DateAddedLower", dateAddedLower) :
                new ObjectParameter("DateAddedLower", typeof(System.DateTime));
    
            var isThackrayFoundParameter = isThackrayFound.HasValue ?
                new ObjectParameter("IsThackrayFound", isThackrayFound) :
                new ObjectParameter("IsThackrayFound", typeof(bool));
    
            var isThackrayFoundInvertedParameter = isThackrayFoundInverted.HasValue ?
                new ObjectParameter("IsThackrayFoundInverted", isThackrayFoundInverted) :
                new ObjectParameter("IsThackrayFoundInverted", typeof(bool));
    
            var isViewedInvertParameter = isViewedInvert.HasValue ?
                new ObjectParameter("IsViewedInvert", isViewedInvert) :
                new ObjectParameter("IsViewedInvert", typeof(bool));
    
            var isViewedParameter = isViewed.HasValue ?
                new ObjectParameter("IsViewed", isViewed) :
                new ObjectParameter("IsViewed", typeof(bool));
    
            var isCopyHeldInvertedParameter = isCopyHeldInverted.HasValue ?
                new ObjectParameter("IsCopyHeldInverted", isCopyHeldInverted) :
                new ObjectParameter("IsCopyHeldInverted", typeof(bool));
    
            var isCopyHeldParameter = isCopyHeld.HasValue ?
                new ObjectParameter("IsCopyHeld", isCopyHeld) :
                new ObjectParameter("IsCopyHeld", typeof(bool));
    
            var typesParameter = types != null ?
                new ObjectParameter("types", types) :
                new ObjectParameter("types", typeof(string));
    
            var sourceMarriageCountParameter = sourceMarriageCount.HasValue ?
                new ObjectParameter("SourceMarriageCount", sourceMarriageCount) :
                new ObjectParameter("SourceMarriageCount", typeof(int));
    
            var sourcePersonCountParameter = sourcePersonCount.HasValue ?
                new ObjectParameter("SourcePersonCount", sourcePersonCount) :
                new ObjectParameter("SourcePersonCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Source>("GetSourcesBySourceTypes", sourceRefParameter, sourceDateToUpperParameter, sourceDateLowerParameter, sourceDateToLowerParameter, sourceDateUpperParameter, userIDParameter, originalLocationParameter, dateAddedUpperParameter, dateAddedLowerParameter, isThackrayFoundParameter, isThackrayFoundInvertedParameter, isViewedInvertParameter, isViewedParameter, isCopyHeldInvertedParameter, isCopyHeldParameter, typesParameter, sourceMarriageCountParameter, sourcePersonCountParameter);
        }
    
        public virtual ObjectResult<Source> GetSourcesBySourceTypes(string sourceRef, Nullable<int> sourceDateToUpper, Nullable<int> sourceDateLower, Nullable<int> sourceDateToLower, Nullable<int> sourceDateUpper, Nullable<int> userID, string originalLocation, Nullable<System.DateTime> dateAddedUpper, Nullable<System.DateTime> dateAddedLower, Nullable<bool> isThackrayFound, Nullable<bool> isThackrayFoundInverted, Nullable<bool> isViewedInvert, Nullable<bool> isViewed, Nullable<bool> isCopyHeldInverted, Nullable<bool> isCopyHeld, string types, Nullable<int> sourceMarriageCount, Nullable<int> sourcePersonCount, MergeOption mergeOption)
        {
            var sourceRefParameter = sourceRef != null ?
                new ObjectParameter("SourceRef", sourceRef) :
                new ObjectParameter("SourceRef", typeof(string));
    
            var sourceDateToUpperParameter = sourceDateToUpper.HasValue ?
                new ObjectParameter("SourceDateToUpper", sourceDateToUpper) :
                new ObjectParameter("SourceDateToUpper", typeof(int));
    
            var sourceDateLowerParameter = sourceDateLower.HasValue ?
                new ObjectParameter("SourceDateLower", sourceDateLower) :
                new ObjectParameter("SourceDateLower", typeof(int));
    
            var sourceDateToLowerParameter = sourceDateToLower.HasValue ?
                new ObjectParameter("SourceDateToLower", sourceDateToLower) :
                new ObjectParameter("SourceDateToLower", typeof(int));
    
            var sourceDateUpperParameter = sourceDateUpper.HasValue ?
                new ObjectParameter("SourceDateUpper", sourceDateUpper) :
                new ObjectParameter("SourceDateUpper", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var originalLocationParameter = originalLocation != null ?
                new ObjectParameter("OriginalLocation", originalLocation) :
                new ObjectParameter("OriginalLocation", typeof(string));
    
            var dateAddedUpperParameter = dateAddedUpper.HasValue ?
                new ObjectParameter("DateAddedUpper", dateAddedUpper) :
                new ObjectParameter("DateAddedUpper", typeof(System.DateTime));
    
            var dateAddedLowerParameter = dateAddedLower.HasValue ?
                new ObjectParameter("DateAddedLower", dateAddedLower) :
                new ObjectParameter("DateAddedLower", typeof(System.DateTime));
    
            var isThackrayFoundParameter = isThackrayFound.HasValue ?
                new ObjectParameter("IsThackrayFound", isThackrayFound) :
                new ObjectParameter("IsThackrayFound", typeof(bool));
    
            var isThackrayFoundInvertedParameter = isThackrayFoundInverted.HasValue ?
                new ObjectParameter("IsThackrayFoundInverted", isThackrayFoundInverted) :
                new ObjectParameter("IsThackrayFoundInverted", typeof(bool));
    
            var isViewedInvertParameter = isViewedInvert.HasValue ?
                new ObjectParameter("IsViewedInvert", isViewedInvert) :
                new ObjectParameter("IsViewedInvert", typeof(bool));
    
            var isViewedParameter = isViewed.HasValue ?
                new ObjectParameter("IsViewed", isViewed) :
                new ObjectParameter("IsViewed", typeof(bool));
    
            var isCopyHeldInvertedParameter = isCopyHeldInverted.HasValue ?
                new ObjectParameter("IsCopyHeldInverted", isCopyHeldInverted) :
                new ObjectParameter("IsCopyHeldInverted", typeof(bool));
    
            var isCopyHeldParameter = isCopyHeld.HasValue ?
                new ObjectParameter("IsCopyHeld", isCopyHeld) :
                new ObjectParameter("IsCopyHeld", typeof(bool));
    
            var typesParameter = types != null ?
                new ObjectParameter("types", types) :
                new ObjectParameter("types", typeof(string));
    
            var sourceMarriageCountParameter = sourceMarriageCount.HasValue ?
                new ObjectParameter("SourceMarriageCount", sourceMarriageCount) :
                new ObjectParameter("SourceMarriageCount", typeof(int));
    
            var sourcePersonCountParameter = sourcePersonCount.HasValue ?
                new ObjectParameter("SourcePersonCount", sourcePersonCount) :
                new ObjectParameter("SourcePersonCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Source>("GetSourcesBySourceTypes", mergeOption, sourceRefParameter, sourceDateToUpperParameter, sourceDateLowerParameter, sourceDateToLowerParameter, sourceDateUpperParameter, userIDParameter, originalLocationParameter, dateAddedUpperParameter, dateAddedLowerParameter, isThackrayFoundParameter, isThackrayFoundInvertedParameter, isViewedInvertParameter, isViewedParameter, isCopyHeldInvertedParameter, isCopyHeldParameter, typesParameter, sourceMarriageCountParameter, sourcePersonCountParameter);
        }
    
        public virtual ObjectResult<Marriage> GetMarriagesBySourceList(string source)
        {
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Marriage>("GetMarriagesBySourceList", sourceParameter);
        }
    
        public virtual ObjectResult<Marriage> GetMarriagesBySourceList(string source, MergeOption mergeOption)
        {
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Marriage>("GetMarriagesBySourceList", mergeOption, sourceParameter);
        }
    
        public virtual int DeleteRelationOrphans()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRelationOrphans");
        }
    
        public virtual int DeletePersonsForSource(Nullable<System.Guid> sourceId)
        {
            var sourceIdParameter = sourceId.HasValue ?
                new ObjectParameter("sourceId", sourceId) :
                new ObjectParameter("sourceId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePersonsForSource", sourceIdParameter);
        }
    
        public virtual ObjectResult<Marriage> USPFilteredMarriagesWithSources(string maleCName, string maleSName, string maleLocation, string maleInfo, string femaleCName, string femaleSName, string femaleLocation, string femaleInfo, string marriageLocation, string marriageLocation2, string marriageLocation3, string marriageLocation4, string marriageLocation5, Nullable<int> yearLowerBound, Nullable<int> yearUpperBound, string marriageCounty, string source)
        {
            var maleCNameParameter = maleCName != null ?
                new ObjectParameter("maleCName", maleCName) :
                new ObjectParameter("maleCName", typeof(string));
    
            var maleSNameParameter = maleSName != null ?
                new ObjectParameter("maleSName", maleSName) :
                new ObjectParameter("maleSName", typeof(string));
    
            var maleLocationParameter = maleLocation != null ?
                new ObjectParameter("maleLocation", maleLocation) :
                new ObjectParameter("maleLocation", typeof(string));
    
            var maleInfoParameter = maleInfo != null ?
                new ObjectParameter("maleInfo", maleInfo) :
                new ObjectParameter("maleInfo", typeof(string));
    
            var femaleCNameParameter = femaleCName != null ?
                new ObjectParameter("femaleCName", femaleCName) :
                new ObjectParameter("femaleCName", typeof(string));
    
            var femaleSNameParameter = femaleSName != null ?
                new ObjectParameter("femaleSName", femaleSName) :
                new ObjectParameter("femaleSName", typeof(string));
    
            var femaleLocationParameter = femaleLocation != null ?
                new ObjectParameter("femaleLocation", femaleLocation) :
                new ObjectParameter("femaleLocation", typeof(string));
    
            var femaleInfoParameter = femaleInfo != null ?
                new ObjectParameter("femaleInfo", femaleInfo) :
                new ObjectParameter("femaleInfo", typeof(string));
    
            var marriageLocationParameter = marriageLocation != null ?
                new ObjectParameter("marriageLocation", marriageLocation) :
                new ObjectParameter("marriageLocation", typeof(string));
    
            var marriageLocation2Parameter = marriageLocation2 != null ?
                new ObjectParameter("marriageLocation2", marriageLocation2) :
                new ObjectParameter("marriageLocation2", typeof(string));
    
            var marriageLocation3Parameter = marriageLocation3 != null ?
                new ObjectParameter("marriageLocation3", marriageLocation3) :
                new ObjectParameter("marriageLocation3", typeof(string));
    
            var marriageLocation4Parameter = marriageLocation4 != null ?
                new ObjectParameter("marriageLocation4", marriageLocation4) :
                new ObjectParameter("marriageLocation4", typeof(string));
    
            var marriageLocation5Parameter = marriageLocation5 != null ?
                new ObjectParameter("marriageLocation5", marriageLocation5) :
                new ObjectParameter("marriageLocation5", typeof(string));
    
            var yearLowerBoundParameter = yearLowerBound.HasValue ?
                new ObjectParameter("yearLowerBound", yearLowerBound) :
                new ObjectParameter("yearLowerBound", typeof(int));
    
            var yearUpperBoundParameter = yearUpperBound.HasValue ?
                new ObjectParameter("yearUpperBound", yearUpperBound) :
                new ObjectParameter("yearUpperBound", typeof(int));
    
            var marriageCountyParameter = marriageCounty != null ?
                new ObjectParameter("marriageCounty", marriageCounty) :
                new ObjectParameter("marriageCounty", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Marriage>("USPFilteredMarriagesWithSources", maleCNameParameter, maleSNameParameter, maleLocationParameter, maleInfoParameter, femaleCNameParameter, femaleSNameParameter, femaleLocationParameter, femaleInfoParameter, marriageLocationParameter, marriageLocation2Parameter, marriageLocation3Parameter, marriageLocation4Parameter, marriageLocation5Parameter, yearLowerBoundParameter, yearUpperBoundParameter, marriageCountyParameter, sourceParameter);
        }
    
        public virtual ObjectResult<Marriage> USPFilteredMarriagesWithSources(string maleCName, string maleSName, string maleLocation, string maleInfo, string femaleCName, string femaleSName, string femaleLocation, string femaleInfo, string marriageLocation, string marriageLocation2, string marriageLocation3, string marriageLocation4, string marriageLocation5, Nullable<int> yearLowerBound, Nullable<int> yearUpperBound, string marriageCounty, string source, MergeOption mergeOption)
        {
            var maleCNameParameter = maleCName != null ?
                new ObjectParameter("maleCName", maleCName) :
                new ObjectParameter("maleCName", typeof(string));
    
            var maleSNameParameter = maleSName != null ?
                new ObjectParameter("maleSName", maleSName) :
                new ObjectParameter("maleSName", typeof(string));
    
            var maleLocationParameter = maleLocation != null ?
                new ObjectParameter("maleLocation", maleLocation) :
                new ObjectParameter("maleLocation", typeof(string));
    
            var maleInfoParameter = maleInfo != null ?
                new ObjectParameter("maleInfo", maleInfo) :
                new ObjectParameter("maleInfo", typeof(string));
    
            var femaleCNameParameter = femaleCName != null ?
                new ObjectParameter("femaleCName", femaleCName) :
                new ObjectParameter("femaleCName", typeof(string));
    
            var femaleSNameParameter = femaleSName != null ?
                new ObjectParameter("femaleSName", femaleSName) :
                new ObjectParameter("femaleSName", typeof(string));
    
            var femaleLocationParameter = femaleLocation != null ?
                new ObjectParameter("femaleLocation", femaleLocation) :
                new ObjectParameter("femaleLocation", typeof(string));
    
            var femaleInfoParameter = femaleInfo != null ?
                new ObjectParameter("femaleInfo", femaleInfo) :
                new ObjectParameter("femaleInfo", typeof(string));
    
            var marriageLocationParameter = marriageLocation != null ?
                new ObjectParameter("marriageLocation", marriageLocation) :
                new ObjectParameter("marriageLocation", typeof(string));
    
            var marriageLocation2Parameter = marriageLocation2 != null ?
                new ObjectParameter("marriageLocation2", marriageLocation2) :
                new ObjectParameter("marriageLocation2", typeof(string));
    
            var marriageLocation3Parameter = marriageLocation3 != null ?
                new ObjectParameter("marriageLocation3", marriageLocation3) :
                new ObjectParameter("marriageLocation3", typeof(string));
    
            var marriageLocation4Parameter = marriageLocation4 != null ?
                new ObjectParameter("marriageLocation4", marriageLocation4) :
                new ObjectParameter("marriageLocation4", typeof(string));
    
            var marriageLocation5Parameter = marriageLocation5 != null ?
                new ObjectParameter("marriageLocation5", marriageLocation5) :
                new ObjectParameter("marriageLocation5", typeof(string));
    
            var yearLowerBoundParameter = yearLowerBound.HasValue ?
                new ObjectParameter("yearLowerBound", yearLowerBound) :
                new ObjectParameter("yearLowerBound", typeof(int));
    
            var yearUpperBoundParameter = yearUpperBound.HasValue ?
                new ObjectParameter("yearUpperBound", yearUpperBound) :
                new ObjectParameter("yearUpperBound", typeof(int));
    
            var marriageCountyParameter = marriageCounty != null ?
                new ObjectParameter("marriageCounty", marriageCounty) :
                new ObjectParameter("marriageCounty", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Marriage>("USPFilteredMarriagesWithSources", mergeOption, maleCNameParameter, maleSNameParameter, maleLocationParameter, maleInfoParameter, femaleCNameParameter, femaleSNameParameter, femaleLocationParameter, femaleInfoParameter, marriageLocationParameter, marriageLocation2Parameter, marriageLocation3Parameter, marriageLocation4Parameter, marriageLocation5Parameter, yearLowerBoundParameter, yearUpperBoundParameter, marriageCountyParameter, sourceParameter);
        }
    
        public virtual ObjectResult<Person> GetSimPersonWithSources(string cName, string sName, string fatherCName, string fatherSName, string motherCName, string motherSName, string source, string bLocation, Nullable<int> lowerBound, Nullable<int> upperBound, string county, string spouse)
        {
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var fatherCNameParameter = fatherCName != null ?
                new ObjectParameter("fatherCName", fatherCName) :
                new ObjectParameter("fatherCName", typeof(string));
    
            var fatherSNameParameter = fatherSName != null ?
                new ObjectParameter("fatherSName", fatherSName) :
                new ObjectParameter("fatherSName", typeof(string));
    
            var motherCNameParameter = motherCName != null ?
                new ObjectParameter("motherCName", motherCName) :
                new ObjectParameter("motherCName", typeof(string));
    
            var motherSNameParameter = motherSName != null ?
                new ObjectParameter("motherSName", motherSName) :
                new ObjectParameter("motherSName", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var bLocationParameter = bLocation != null ?
                new ObjectParameter("bLocation", bLocation) :
                new ObjectParameter("bLocation", typeof(string));
    
            var lowerBoundParameter = lowerBound.HasValue ?
                new ObjectParameter("LowerBound", lowerBound) :
                new ObjectParameter("LowerBound", typeof(int));
    
            var upperBoundParameter = upperBound.HasValue ?
                new ObjectParameter("UpperBound", upperBound) :
                new ObjectParameter("UpperBound", typeof(int));
    
            var countyParameter = county != null ?
                new ObjectParameter("county", county) :
                new ObjectParameter("county", typeof(string));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Person>("GetSimPersonWithSources", cNameParameter, sNameParameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, lowerBoundParameter, upperBoundParameter, countyParameter, spouseParameter);
        }
    
        public virtual ObjectResult<Person> GetSimPersonWithSources(string cName, string sName, string fatherCName, string fatherSName, string motherCName, string motherSName, string source, string bLocation, Nullable<int> lowerBound, Nullable<int> upperBound, string county, string spouse, MergeOption mergeOption)
        {
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var fatherCNameParameter = fatherCName != null ?
                new ObjectParameter("fatherCName", fatherCName) :
                new ObjectParameter("fatherCName", typeof(string));
    
            var fatherSNameParameter = fatherSName != null ?
                new ObjectParameter("fatherSName", fatherSName) :
                new ObjectParameter("fatherSName", typeof(string));
    
            var motherCNameParameter = motherCName != null ?
                new ObjectParameter("motherCName", motherCName) :
                new ObjectParameter("motherCName", typeof(string));
    
            var motherSNameParameter = motherSName != null ?
                new ObjectParameter("motherSName", motherSName) :
                new ObjectParameter("motherSName", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var bLocationParameter = bLocation != null ?
                new ObjectParameter("bLocation", bLocation) :
                new ObjectParameter("bLocation", typeof(string));
    
            var lowerBoundParameter = lowerBound.HasValue ?
                new ObjectParameter("LowerBound", lowerBound) :
                new ObjectParameter("LowerBound", typeof(int));
    
            var upperBoundParameter = upperBound.HasValue ?
                new ObjectParameter("UpperBound", upperBound) :
                new ObjectParameter("UpperBound", typeof(int));
    
            var countyParameter = county != null ?
                new ObjectParameter("county", county) :
                new ObjectParameter("county", typeof(string));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Person>("GetSimPersonWithSources", mergeOption, cNameParameter, sNameParameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, lowerBoundParameter, upperBoundParameter, countyParameter, spouseParameter);
        }
    
        public virtual ObjectResult<Person> GetPersWithSources(Nullable<bool> isMaleId, string cName, string sName, string dLocation, string dLocation2, string dLocation3, string dLocation4, string dLocation5, string fatherCName, string fatherSName, string motherCName, string motherSName, string source, string bLocation, string bLocation2, string bLocation3, string bLocation4, string bLocation5, Nullable<int> birthLowerBound, Nullable<int> birthUpperBound, Nullable<int> bapLowerBound, Nullable<int> bapUpperBound, Nullable<int> detLowerBound, Nullable<int> detUpperBound, string bCounty, string dName, string spouseCName, string spouseSName, string fatherOccupation)
        {
            var isMaleIdParameter = isMaleId.HasValue ?
                new ObjectParameter("isMaleId", isMaleId) :
                new ObjectParameter("isMaleId", typeof(bool));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var dLocationParameter = dLocation != null ?
                new ObjectParameter("dLocation", dLocation) :
                new ObjectParameter("dLocation", typeof(string));
    
            var dLocation2Parameter = dLocation2 != null ?
                new ObjectParameter("dLocation2", dLocation2) :
                new ObjectParameter("dLocation2", typeof(string));
    
            var dLocation3Parameter = dLocation3 != null ?
                new ObjectParameter("dLocation3", dLocation3) :
                new ObjectParameter("dLocation3", typeof(string));
    
            var dLocation4Parameter = dLocation4 != null ?
                new ObjectParameter("dLocation4", dLocation4) :
                new ObjectParameter("dLocation4", typeof(string));
    
            var dLocation5Parameter = dLocation5 != null ?
                new ObjectParameter("dLocation5", dLocation5) :
                new ObjectParameter("dLocation5", typeof(string));
    
            var fatherCNameParameter = fatherCName != null ?
                new ObjectParameter("fatherCName", fatherCName) :
                new ObjectParameter("fatherCName", typeof(string));
    
            var fatherSNameParameter = fatherSName != null ?
                new ObjectParameter("fatherSName", fatherSName) :
                new ObjectParameter("fatherSName", typeof(string));
    
            var motherCNameParameter = motherCName != null ?
                new ObjectParameter("motherCName", motherCName) :
                new ObjectParameter("motherCName", typeof(string));
    
            var motherSNameParameter = motherSName != null ?
                new ObjectParameter("motherSName", motherSName) :
                new ObjectParameter("motherSName", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var bLocationParameter = bLocation != null ?
                new ObjectParameter("bLocation", bLocation) :
                new ObjectParameter("bLocation", typeof(string));
    
            var bLocation2Parameter = bLocation2 != null ?
                new ObjectParameter("bLocation2", bLocation2) :
                new ObjectParameter("bLocation2", typeof(string));
    
            var bLocation3Parameter = bLocation3 != null ?
                new ObjectParameter("bLocation3", bLocation3) :
                new ObjectParameter("bLocation3", typeof(string));
    
            var bLocation4Parameter = bLocation4 != null ?
                new ObjectParameter("bLocation4", bLocation4) :
                new ObjectParameter("bLocation4", typeof(string));
    
            var bLocation5Parameter = bLocation5 != null ?
                new ObjectParameter("bLocation5", bLocation5) :
                new ObjectParameter("bLocation5", typeof(string));
    
            var birthLowerBoundParameter = birthLowerBound.HasValue ?
                new ObjectParameter("birthLowerBound", birthLowerBound) :
                new ObjectParameter("birthLowerBound", typeof(int));
    
            var birthUpperBoundParameter = birthUpperBound.HasValue ?
                new ObjectParameter("birthUpperBound", birthUpperBound) :
                new ObjectParameter("birthUpperBound", typeof(int));
    
            var bapLowerBoundParameter = bapLowerBound.HasValue ?
                new ObjectParameter("bapLowerBound", bapLowerBound) :
                new ObjectParameter("bapLowerBound", typeof(int));
    
            var bapUpperBoundParameter = bapUpperBound.HasValue ?
                new ObjectParameter("bapUpperBound", bapUpperBound) :
                new ObjectParameter("bapUpperBound", typeof(int));
    
            var detLowerBoundParameter = detLowerBound.HasValue ?
                new ObjectParameter("detLowerBound", detLowerBound) :
                new ObjectParameter("detLowerBound", typeof(int));
    
            var detUpperBoundParameter = detUpperBound.HasValue ?
                new ObjectParameter("detUpperBound", detUpperBound) :
                new ObjectParameter("detUpperBound", typeof(int));
    
            var bCountyParameter = bCounty != null ?
                new ObjectParameter("bCounty", bCounty) :
                new ObjectParameter("bCounty", typeof(string));
    
            var dNameParameter = dName != null ?
                new ObjectParameter("dName", dName) :
                new ObjectParameter("dName", typeof(string));
    
            var spouseCNameParameter = spouseCName != null ?
                new ObjectParameter("spouseCName", spouseCName) :
                new ObjectParameter("spouseCName", typeof(string));
    
            var spouseSNameParameter = spouseSName != null ?
                new ObjectParameter("spouseSName", spouseSName) :
                new ObjectParameter("spouseSName", typeof(string));
    
            var fatherOccupationParameter = fatherOccupation != null ?
                new ObjectParameter("fatherOccupation", fatherOccupation) :
                new ObjectParameter("fatherOccupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Person>("GetPersWithSources", isMaleIdParameter, cNameParameter, sNameParameter, dLocationParameter, dLocation2Parameter, dLocation3Parameter, dLocation4Parameter, dLocation5Parameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, bLocation2Parameter, bLocation3Parameter, bLocation4Parameter, bLocation5Parameter, birthLowerBoundParameter, birthUpperBoundParameter, bapLowerBoundParameter, bapUpperBoundParameter, detLowerBoundParameter, detUpperBoundParameter, bCountyParameter, dNameParameter, spouseCNameParameter, spouseSNameParameter, fatherOccupationParameter);
        }
    
        public virtual ObjectResult<Person> GetPersWithSources(Nullable<bool> isMaleId, string cName, string sName, string dLocation, string dLocation2, string dLocation3, string dLocation4, string dLocation5, string fatherCName, string fatherSName, string motherCName, string motherSName, string source, string bLocation, string bLocation2, string bLocation3, string bLocation4, string bLocation5, Nullable<int> birthLowerBound, Nullable<int> birthUpperBound, Nullable<int> bapLowerBound, Nullable<int> bapUpperBound, Nullable<int> detLowerBound, Nullable<int> detUpperBound, string bCounty, string dName, string spouseCName, string spouseSName, string fatherOccupation, MergeOption mergeOption)
        {
            var isMaleIdParameter = isMaleId.HasValue ?
                new ObjectParameter("isMaleId", isMaleId) :
                new ObjectParameter("isMaleId", typeof(bool));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var dLocationParameter = dLocation != null ?
                new ObjectParameter("dLocation", dLocation) :
                new ObjectParameter("dLocation", typeof(string));
    
            var dLocation2Parameter = dLocation2 != null ?
                new ObjectParameter("dLocation2", dLocation2) :
                new ObjectParameter("dLocation2", typeof(string));
    
            var dLocation3Parameter = dLocation3 != null ?
                new ObjectParameter("dLocation3", dLocation3) :
                new ObjectParameter("dLocation3", typeof(string));
    
            var dLocation4Parameter = dLocation4 != null ?
                new ObjectParameter("dLocation4", dLocation4) :
                new ObjectParameter("dLocation4", typeof(string));
    
            var dLocation5Parameter = dLocation5 != null ?
                new ObjectParameter("dLocation5", dLocation5) :
                new ObjectParameter("dLocation5", typeof(string));
    
            var fatherCNameParameter = fatherCName != null ?
                new ObjectParameter("fatherCName", fatherCName) :
                new ObjectParameter("fatherCName", typeof(string));
    
            var fatherSNameParameter = fatherSName != null ?
                new ObjectParameter("fatherSName", fatherSName) :
                new ObjectParameter("fatherSName", typeof(string));
    
            var motherCNameParameter = motherCName != null ?
                new ObjectParameter("motherCName", motherCName) :
                new ObjectParameter("motherCName", typeof(string));
    
            var motherSNameParameter = motherSName != null ?
                new ObjectParameter("motherSName", motherSName) :
                new ObjectParameter("motherSName", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var bLocationParameter = bLocation != null ?
                new ObjectParameter("bLocation", bLocation) :
                new ObjectParameter("bLocation", typeof(string));
    
            var bLocation2Parameter = bLocation2 != null ?
                new ObjectParameter("bLocation2", bLocation2) :
                new ObjectParameter("bLocation2", typeof(string));
    
            var bLocation3Parameter = bLocation3 != null ?
                new ObjectParameter("bLocation3", bLocation3) :
                new ObjectParameter("bLocation3", typeof(string));
    
            var bLocation4Parameter = bLocation4 != null ?
                new ObjectParameter("bLocation4", bLocation4) :
                new ObjectParameter("bLocation4", typeof(string));
    
            var bLocation5Parameter = bLocation5 != null ?
                new ObjectParameter("bLocation5", bLocation5) :
                new ObjectParameter("bLocation5", typeof(string));
    
            var birthLowerBoundParameter = birthLowerBound.HasValue ?
                new ObjectParameter("birthLowerBound", birthLowerBound) :
                new ObjectParameter("birthLowerBound", typeof(int));
    
            var birthUpperBoundParameter = birthUpperBound.HasValue ?
                new ObjectParameter("birthUpperBound", birthUpperBound) :
                new ObjectParameter("birthUpperBound", typeof(int));
    
            var bapLowerBoundParameter = bapLowerBound.HasValue ?
                new ObjectParameter("bapLowerBound", bapLowerBound) :
                new ObjectParameter("bapLowerBound", typeof(int));
    
            var bapUpperBoundParameter = bapUpperBound.HasValue ?
                new ObjectParameter("bapUpperBound", bapUpperBound) :
                new ObjectParameter("bapUpperBound", typeof(int));
    
            var detLowerBoundParameter = detLowerBound.HasValue ?
                new ObjectParameter("detLowerBound", detLowerBound) :
                new ObjectParameter("detLowerBound", typeof(int));
    
            var detUpperBoundParameter = detUpperBound.HasValue ?
                new ObjectParameter("detUpperBound", detUpperBound) :
                new ObjectParameter("detUpperBound", typeof(int));
    
            var bCountyParameter = bCounty != null ?
                new ObjectParameter("bCounty", bCounty) :
                new ObjectParameter("bCounty", typeof(string));
    
            var dNameParameter = dName != null ?
                new ObjectParameter("dName", dName) :
                new ObjectParameter("dName", typeof(string));
    
            var spouseCNameParameter = spouseCName != null ?
                new ObjectParameter("spouseCName", spouseCName) :
                new ObjectParameter("spouseCName", typeof(string));
    
            var spouseSNameParameter = spouseSName != null ?
                new ObjectParameter("spouseSName", spouseSName) :
                new ObjectParameter("spouseSName", typeof(string));
    
            var fatherOccupationParameter = fatherOccupation != null ?
                new ObjectParameter("fatherOccupation", fatherOccupation) :
                new ObjectParameter("fatherOccupation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Person>("GetPersWithSources", mergeOption, isMaleIdParameter, cNameParameter, sNameParameter, dLocationParameter, dLocation2Parameter, dLocation3Parameter, dLocation4Parameter, dLocation5Parameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, bLocation2Parameter, bLocation3Parameter, bLocation4Parameter, bLocation5Parameter, birthLowerBoundParameter, birthUpperBoundParameter, bapLowerBoundParameter, bapUpperBoundParameter, detLowerBoundParameter, detUpperBoundParameter, bCountyParameter, dNameParameter, spouseCNameParameter, spouseSNameParameter, fatherOccupationParameter);
        }
    
        public virtual ObjectResult<PersonSources_Result> GetPersonSources(Nullable<System.Guid> personId)
        {
            var personIdParameter = personId.HasValue ?
                new ObjectParameter("personId", personId) :
                new ObjectParameter("personId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonSources_Result>("GetPersonSources", personIdParameter);
        }
    
        public virtual ObjectResult<MarriageSources_Result> GetMarriageSources(Nullable<System.Guid> marriageId)
        {
            var marriageIdParameter = marriageId.HasValue ?
                new ObjectParameter("marriageId", marriageId) :
                new ObjectParameter("marriageId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MarriageSources_Result>("GetMarriageSources", marriageIdParameter);
        }
    
        public virtual ObjectResult<GetMarriageByLocation_Result> GetMarriageByLocation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMarriageByLocation_Result>("GetMarriageByLocation");
        }
    
        public virtual ObjectResult<GetDescendants_Result> GetDescendants(Nullable<System.Guid> topPersonId)
        {
            var topPersonIdParameter = topPersonId.HasValue ?
                new ObjectParameter("topPersonId", topPersonId) :
                new ObjectParameter("topPersonId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDescendants_Result>("GetDescendants", topPersonIdParameter);
        }
    
        public virtual ObjectResult<GetDescendantSpouses_Result> GetDescendantSpouses(Nullable<System.Guid> topPersonId)
        {
            var topPersonIdParameter = topPersonId.HasValue ?
                new ObjectParameter("topPersonId", topPersonId) :
                new ObjectParameter("topPersonId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDescendantSpouses_Result>("GetDescendantSpouses", topPersonIdParameter);
        }
    
        public virtual ObjectResult<GetAncestors_Result> GetAncestors(Nullable<System.Guid> topPersonId)
        {
            var topPersonIdParameter = topPersonId.HasValue ?
                new ObjectParameter("topPersonId", topPersonId) :
                new ObjectParameter("topPersonId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAncestors_Result>("GetAncestors", topPersonIdParameter);
        }
    
        public virtual ObjectResult<uspGetParishSources_Result> uspGetParishSources(string source, Nullable<int> date, Nullable<int> dateTo)
        {
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(int));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("dateTo", dateTo) :
                new ObjectParameter("dateTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetParishSources_Result>("uspGetParishSources", sourceParameter, dateParameter, dateToParameter);
        }
    
        public virtual int DeleteTree(Nullable<System.Guid> sourceId)
        {
            var sourceIdParameter = sourceId.HasValue ?
                new ObjectParameter("sourceId", sourceId) :
                new ObjectParameter("sourceId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTree", sourceIdParameter);
        }
    
        public virtual ObjectResult<ReorderMarriages_Result> ReorderMarriages(Nullable<System.Guid> marriageId)
        {
            var marriageIdParameter = marriageId.HasValue ?
                new ObjectParameter("marriageId", marriageId) :
                new ObjectParameter("marriageId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReorderMarriages_Result>("ReorderMarriages", marriageIdParameter);
        }
    
        public virtual ObjectResult<USP_Marriages_Filtered_Result> USP_Marriages_Filtered(string witnessName, string sources, string femaleCName, string femaleSName, string maleCName, string maleSName, string marriageCounty, string marriageLocation, Nullable<int> yearIntLower, Nullable<int> yearIntUpper)
        {
            var witnessNameParameter = witnessName != null ?
                new ObjectParameter("witnessName", witnessName) :
                new ObjectParameter("witnessName", typeof(string));
    
            var sourcesParameter = sources != null ?
                new ObjectParameter("sources", sources) :
                new ObjectParameter("sources", typeof(string));
    
            var femaleCNameParameter = femaleCName != null ?
                new ObjectParameter("femaleCName", femaleCName) :
                new ObjectParameter("femaleCName", typeof(string));
    
            var femaleSNameParameter = femaleSName != null ?
                new ObjectParameter("femaleSName", femaleSName) :
                new ObjectParameter("femaleSName", typeof(string));
    
            var maleCNameParameter = maleCName != null ?
                new ObjectParameter("maleCName", maleCName) :
                new ObjectParameter("maleCName", typeof(string));
    
            var maleSNameParameter = maleSName != null ?
                new ObjectParameter("maleSName", maleSName) :
                new ObjectParameter("maleSName", typeof(string));
    
            var marriageCountyParameter = marriageCounty != null ?
                new ObjectParameter("marriageCounty", marriageCounty) :
                new ObjectParameter("marriageCounty", typeof(string));
    
            var marriageLocationParameter = marriageLocation != null ?
                new ObjectParameter("marriageLocation", marriageLocation) :
                new ObjectParameter("marriageLocation", typeof(string));
    
            var yearIntLowerParameter = yearIntLower.HasValue ?
                new ObjectParameter("yearIntLower", yearIntLower) :
                new ObjectParameter("yearIntLower", typeof(int));
    
            var yearIntUpperParameter = yearIntUpper.HasValue ?
                new ObjectParameter("yearIntUpper", yearIntUpper) :
                new ObjectParameter("yearIntUpper", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Marriages_Filtered_Result>("USP_Marriages_Filtered", witnessNameParameter, sourcesParameter, femaleCNameParameter, femaleSNameParameter, maleCNameParameter, maleSNameParameter, marriageCountyParameter, marriageLocationParameter, yearIntLowerParameter, yearIntUpperParameter);
        }
    
        public virtual ObjectResult<USP_Persons_Filtered_Result> USP_Persons_Filtered_1(string cName, string sName, string fatherCName, string fatherSName, string motherCName, string motherSName, string source, string bLocation, Nullable<int> lowerBound, Nullable<int> upperBound, string county, string spouse, string othersideCName, string othersideSName, string othersideRelationship, Nullable<bool> sourceSearch)
        {
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var fatherCNameParameter = fatherCName != null ?
                new ObjectParameter("fatherCName", fatherCName) :
                new ObjectParameter("fatherCName", typeof(string));
    
            var fatherSNameParameter = fatherSName != null ?
                new ObjectParameter("fatherSName", fatherSName) :
                new ObjectParameter("fatherSName", typeof(string));
    
            var motherCNameParameter = motherCName != null ?
                new ObjectParameter("motherCName", motherCName) :
                new ObjectParameter("motherCName", typeof(string));
    
            var motherSNameParameter = motherSName != null ?
                new ObjectParameter("motherSName", motherSName) :
                new ObjectParameter("motherSName", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var bLocationParameter = bLocation != null ?
                new ObjectParameter("bLocation", bLocation) :
                new ObjectParameter("bLocation", typeof(string));
    
            var lowerBoundParameter = lowerBound.HasValue ?
                new ObjectParameter("LowerBound", lowerBound) :
                new ObjectParameter("LowerBound", typeof(int));
    
            var upperBoundParameter = upperBound.HasValue ?
                new ObjectParameter("UpperBound", upperBound) :
                new ObjectParameter("UpperBound", typeof(int));
    
            var countyParameter = county != null ?
                new ObjectParameter("county", county) :
                new ObjectParameter("county", typeof(string));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var othersideCNameParameter = othersideCName != null ?
                new ObjectParameter("othersideCName", othersideCName) :
                new ObjectParameter("othersideCName", typeof(string));
    
            var othersideSNameParameter = othersideSName != null ?
                new ObjectParameter("othersideSName", othersideSName) :
                new ObjectParameter("othersideSName", typeof(string));
    
            var othersideRelationshipParameter = othersideRelationship != null ?
                new ObjectParameter("othersideRelationship", othersideRelationship) :
                new ObjectParameter("othersideRelationship", typeof(string));
    
            var sourceSearchParameter = sourceSearch.HasValue ?
                new ObjectParameter("sourceSearch", sourceSearch) :
                new ObjectParameter("sourceSearch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_Persons_Filtered_Result>("USP_Persons_Filtered_1", cNameParameter, sNameParameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, lowerBoundParameter, upperBoundParameter, countyParameter, spouseParameter, othersideCNameParameter, othersideSNameParameter, othersideRelationshipParameter, sourceSearchParameter);
        }
    
        public virtual int USP_UpdateSourceCounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_UpdateSourceCounts");
        }
    
        public virtual ObjectResult<PersonsFiltered2_Result> PersonsFiltered2(string cName, string sName, string fatherCName, string fatherSName, string motherCName, string motherSName, string source, string bLocation, Nullable<int> lowerBound, Nullable<int> upperBound, string county, string spouse, string othersideCName, string othersideSName, string othersideRelationship, Nullable<bool> sourceSearch)
        {
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var fatherCNameParameter = fatherCName != null ?
                new ObjectParameter("fatherCName", fatherCName) :
                new ObjectParameter("fatherCName", typeof(string));
    
            var fatherSNameParameter = fatherSName != null ?
                new ObjectParameter("fatherSName", fatherSName) :
                new ObjectParameter("fatherSName", typeof(string));
    
            var motherCNameParameter = motherCName != null ?
                new ObjectParameter("motherCName", motherCName) :
                new ObjectParameter("motherCName", typeof(string));
    
            var motherSNameParameter = motherSName != null ?
                new ObjectParameter("motherSName", motherSName) :
                new ObjectParameter("motherSName", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("source", source) :
                new ObjectParameter("source", typeof(string));
    
            var bLocationParameter = bLocation != null ?
                new ObjectParameter("bLocation", bLocation) :
                new ObjectParameter("bLocation", typeof(string));
    
            var lowerBoundParameter = lowerBound.HasValue ?
                new ObjectParameter("LowerBound", lowerBound) :
                new ObjectParameter("LowerBound", typeof(int));
    
            var upperBoundParameter = upperBound.HasValue ?
                new ObjectParameter("UpperBound", upperBound) :
                new ObjectParameter("UpperBound", typeof(int));
    
            var countyParameter = county != null ?
                new ObjectParameter("county", county) :
                new ObjectParameter("county", typeof(string));
    
            var spouseParameter = spouse != null ?
                new ObjectParameter("spouse", spouse) :
                new ObjectParameter("spouse", typeof(string));
    
            var othersideCNameParameter = othersideCName != null ?
                new ObjectParameter("othersideCName", othersideCName) :
                new ObjectParameter("othersideCName", typeof(string));
    
            var othersideSNameParameter = othersideSName != null ?
                new ObjectParameter("othersideSName", othersideSName) :
                new ObjectParameter("othersideSName", typeof(string));
    
            var othersideRelationshipParameter = othersideRelationship != null ?
                new ObjectParameter("othersideRelationship", othersideRelationship) :
                new ObjectParameter("othersideRelationship", typeof(string));
    
            var sourceSearchParameter = sourceSearch.HasValue ?
                new ObjectParameter("sourceSearch", sourceSearch) :
                new ObjectParameter("sourceSearch", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonsFiltered2_Result>("PersonsFiltered2", cNameParameter, sNameParameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, lowerBoundParameter, upperBoundParameter, countyParameter, spouseParameter, othersideCNameParameter, othersideSNameParameter, othersideRelationshipParameter, sourceSearchParameter);
        }
    }
}
