//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GeneralModel", "FK_SourceMappings_Marriages", "Marriage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Marriage), "SourceMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.SourceMapping))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_SourceMappingParishs_Parishs", "Parish", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Parish), "SourceMappingParish", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.SourceMappingParish))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_SourceMappingParishs_Sources", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Source), "SourceMappingParish", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.SourceMappingParish))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_SourceMappings_Sources", "Source", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Source), "SourceMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.SourceMapping))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_SourceMappings_SourceTypes", "SourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.SourceType), "SourceMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.SourceMapping))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_Relations_RelationTypes", "RelationType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.RelationType), "Relation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.Relation))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_SourceMappings_Files", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.File), "SourceMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.SourceMapping))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_ParishTranscriptionDetails_Parishs", "Parish", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Parish), "ParishTranscriptionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.ParishTranscriptionDetail))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_ParishRecords_ParishRecordSource", "ParishRecordSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.ParishRecordSource), "ParishRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.ParishRecord))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_ParishRecords_Parishs", "Parish", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Parish), "ParishRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.ParishRecord))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_MissingRecords_Parishs", "Parish", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Parish), "MissingRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.MissingRecord))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_Relations_Persons", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Person), "Relation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.Relation))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_Relations_Persons1", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Person), "Relation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.Relation))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_SourceMappings_Persons", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.Person), "SourceMapping", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.SourceMapping))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_MarriageRelations_Marriages", "Marriage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TDBCore.EntityModel.Marriage), "MarriageRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.MarriageRelation))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_MarriageRelations_Marriages1", "Marriage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TDBCore.EntityModel.Marriage), "MarriageRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.MarriageRelation))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_MarriageRelations_RelationTypes", "RelationType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TDBCore.EntityModel.RelationType), "MarriageRelation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.MarriageRelation))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_MarriageMapWitness_Marriages", "Marriage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TDBCore.EntityModel.Marriage), "MarriageMapWitness", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.MarriageMapWitness))]
[assembly: EdmRelationshipAttribute("GeneralModel", "FK_MarriageMapWitness_Persons", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TDBCore.EntityModel.Person), "MarriageMapWitness", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TDBCore.EntityModel.MarriageMapWitness))]

#endregion

namespace TDBCore.EntityModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GeneralModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GeneralModelContainer object using the connection string found in the 'GeneralModelContainer' section of the application configuration file.
        /// </summary>
        public GeneralModelContainer() : base("name=GeneralModelContainer", "GeneralModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GeneralModelContainer object.
        /// </summary>
        public GeneralModelContainer(string connectionString) : base(connectionString, "GeneralModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GeneralModelContainer object.
        /// </summary>
        public GeneralModelContainer(EntityConnection connection) : base(connection, "GeneralModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Marriage> Marriages
        {
            get
            {
                if ((_Marriages == null))
                {
                    _Marriages = base.CreateObjectSet<Marriage>("Marriages");
                }
                return _Marriages;
            }
        }
        private ObjectSet<Marriage> _Marriages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Parish> Parishs
        {
            get
            {
                if ((_Parishs == null))
                {
                    _Parishs = base.CreateObjectSet<Parish>("Parishs");
                }
                return _Parishs;
            }
        }
        private ObjectSet<Parish> _Parishs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SourceMappingParish> SourceMappingParishs
        {
            get
            {
                if ((_SourceMappingParishs == null))
                {
                    _SourceMappingParishs = base.CreateObjectSet<SourceMappingParish>("SourceMappingParishs");
                }
                return _SourceMappingParishs;
            }
        }
        private ObjectSet<SourceMappingParish> _SourceMappingParishs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SourceMapping> SourceMappings
        {
            get
            {
                if ((_SourceMappings == null))
                {
                    _SourceMappings = base.CreateObjectSet<SourceMapping>("SourceMappings");
                }
                return _SourceMappings;
            }
        }
        private ObjectSet<SourceMapping> _SourceMappings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Source> Sources
        {
            get
            {
                if ((_Sources == null))
                {
                    _Sources = base.CreateObjectSet<Source>("Sources");
                }
                return _Sources;
            }
        }
        private ObjectSet<Source> _Sources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SourceType> SourceTypes
        {
            get
            {
                if ((_SourceTypes == null))
                {
                    _SourceTypes = base.CreateObjectSet<SourceType>("SourceTypes");
                }
                return _SourceTypes;
            }
        }
        private ObjectSet<SourceType> _SourceTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Relation> Relations
        {
            get
            {
                if ((_Relations == null))
                {
                    _Relations = base.CreateObjectSet<Relation>("Relations");
                }
                return _Relations;
            }
        }
        private ObjectSet<Relation> _Relations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelationType> RelationTypes
        {
            get
            {
                if ((_RelationTypes == null))
                {
                    _RelationTypes = base.CreateObjectSet<RelationType>("RelationTypes");
                }
                return _RelationTypes;
            }
        }
        private ObjectSet<RelationType> _RelationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParishTranscriptionDetail> ParishTranscriptionDetails
        {
            get
            {
                if ((_ParishTranscriptionDetails == null))
                {
                    _ParishTranscriptionDetails = base.CreateObjectSet<ParishTranscriptionDetail>("ParishTranscriptionDetails");
                }
                return _ParishTranscriptionDetails;
            }
        }
        private ObjectSet<ParishTranscriptionDetail> _ParishTranscriptionDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParishRecord> ParishRecords
        {
            get
            {
                if ((_ParishRecords == null))
                {
                    _ParishRecords = base.CreateObjectSet<ParishRecord>("ParishRecords");
                }
                return _ParishRecords;
            }
        }
        private ObjectSet<ParishRecord> _ParishRecords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParishRecordSource> ParishRecordSources
        {
            get
            {
                if ((_ParishRecordSources == null))
                {
                    _ParishRecordSources = base.CreateObjectSet<ParishRecordSource>("ParishRecordSources");
                }
                return _ParishRecordSources;
            }
        }
        private ObjectSet<ParishRecordSource> _ParishRecordSources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LocationDictionary> LocationDictionaries
        {
            get
            {
                if ((_LocationDictionaries == null))
                {
                    _LocationDictionaries = base.CreateObjectSet<LocationDictionary>("LocationDictionaries");
                }
                return _LocationDictionaries;
            }
        }
        private ObjectSet<LocationDictionary> _LocationDictionaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountyDictionary> CountyDictionaries
        {
            get
            {
                if ((_CountyDictionaries == null))
                {
                    _CountyDictionaries = base.CreateObjectSet<CountyDictionary>("CountyDictionaries");
                }
                return _CountyDictionaries;
            }
        }
        private ObjectSet<CountyDictionary> _CountyDictionaries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MissingRecord> MissingRecords
        {
            get
            {
                if ((_MissingRecords == null))
                {
                    _MissingRecords = base.CreateObjectSet<MissingRecord>("MissingRecords");
                }
                return _MissingRecords;
            }
        }
        private ObjectSet<MissingRecord> _MissingRecords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarriageRelation> MarriageRelations
        {
            get
            {
                if ((_MarriageRelations == null))
                {
                    _MarriageRelations = base.CreateObjectSet<MarriageRelation>("MarriageRelations");
                }
                return _MarriageRelations;
            }
        }
        private ObjectSet<MarriageRelation> _MarriageRelations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MarriageMapWitness> MarriageMapWitnesses
        {
            get
            {
                if ((_MarriageMapWitnesses == null))
                {
                    _MarriageMapWitnesses = base.CreateObjectSet<MarriageMapWitness>("MarriageMapWitnesses");
                }
                return _MarriageMapWitnesses;
            }
        }
        private ObjectSet<MarriageMapWitness> _MarriageMapWitnesses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParishCounter> ParishCounter
        {
            get
            {
                if ((_ParishCounter == null))
                {
                    _ParishCounter = base.CreateObjectSet<ParishCounter>("ParishCounter");
                }
                return _ParishCounter;
            }
        }
        private ObjectSet<ParishCounter> _ParishCounter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<uvw_1841Census> uvw_1841Census
        {
            get
            {
                if ((_uvw_1841Census == null))
                {
                    _uvw_1841Census = base.CreateObjectSet<uvw_1841Census>("uvw_1841Census");
                }
                return _uvw_1841Census;
            }
        }
        private ObjectSet<uvw_1841Census> _uvw_1841Census;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Marriages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarriages(Marriage marriage)
        {
            base.AddObject("Marriages", marriage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Parishs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParishs(Parish parish)
        {
            base.AddObject("Parishs", parish);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SourceMappingParishs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSourceMappingParishs(SourceMappingParish sourceMappingParish)
        {
            base.AddObject("SourceMappingParishs", sourceMappingParish);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SourceMappings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSourceMappings(SourceMapping sourceMapping)
        {
            base.AddObject("SourceMappings", sourceMapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSources(Source source)
        {
            base.AddObject("Sources", source);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SourceTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSourceTypes(SourceType sourceType)
        {
            base.AddObject("SourceTypes", sourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Relations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelations(Relation relation)
        {
            base.AddObject("Relations", relation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelationTypes(RelationType relationType)
        {
            base.AddObject("RelationTypes", relationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParishTranscriptionDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParishTranscriptionDetails(ParishTranscriptionDetail parishTranscriptionDetail)
        {
            base.AddObject("ParishTranscriptionDetails", parishTranscriptionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParishRecords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParishRecords(ParishRecord parishRecord)
        {
            base.AddObject("ParishRecords", parishRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParishRecordSources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParishRecordSources(ParishRecordSource parishRecordSource)
        {
            base.AddObject("ParishRecordSources", parishRecordSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocationDictionaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocationDictionaries(LocationDictionary locationDictionary)
        {
            base.AddObject("LocationDictionaries", locationDictionary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountyDictionaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountyDictionaries(CountyDictionary countyDictionary)
        {
            base.AddObject("CountyDictionaries", countyDictionary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MissingRecords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMissingRecords(MissingRecord missingRecord)
        {
            base.AddObject("MissingRecords", missingRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarriageRelations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarriageRelations(MarriageRelation marriageRelation)
        {
            base.AddObject("MarriageRelations", marriageRelation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MarriageMapWitnesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMarriageMapWitnesses(MarriageMapWitness marriageMapWitness)
        {
            base.AddObject("MarriageMapWitnesses", marriageMapWitness);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParishCounter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParishCounter(ParishCounter parishCounter)
        {
            base.AddObject("ParishCounter", parishCounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the uvw_1841Census EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouvw_1841Census(uvw_1841Census uvw_1841Census)
        {
            base.AddObject("uvw_1841Census", uvw_1841Census);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sourceRef">No Metadata Documentation available.</param>
        /// <param name="sourceDateToUpper">No Metadata Documentation available.</param>
        /// <param name="sourceDateLower">No Metadata Documentation available.</param>
        /// <param name="sourceDateToLower">No Metadata Documentation available.</param>
        /// <param name="sourceDateUpper">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="originalLocation">No Metadata Documentation available.</param>
        /// <param name="dateAddedUpper">No Metadata Documentation available.</param>
        /// <param name="dateAddedLower">No Metadata Documentation available.</param>
        /// <param name="isThackrayFound">No Metadata Documentation available.</param>
        /// <param name="isThackrayFoundInverted">No Metadata Documentation available.</param>
        /// <param name="isViewedInvert">No Metadata Documentation available.</param>
        /// <param name="isViewed">No Metadata Documentation available.</param>
        /// <param name="isCopyHeldInverted">No Metadata Documentation available.</param>
        /// <param name="isCopyHeld">No Metadata Documentation available.</param>
        /// <param name="types">No Metadata Documentation available.</param>
        public ObjectResult<Source> GetSourcesBySourceTypes(global::System.String sourceRef, Nullable<global::System.Int32> sourceDateToUpper, Nullable<global::System.Int32> sourceDateLower, Nullable<global::System.Int32> sourceDateToLower, Nullable<global::System.Int32> sourceDateUpper, Nullable<global::System.Int32> userID, global::System.String originalLocation, Nullable<global::System.DateTime> dateAddedUpper, Nullable<global::System.DateTime> dateAddedLower, Nullable<global::System.Boolean> isThackrayFound, Nullable<global::System.Boolean> isThackrayFoundInverted, Nullable<global::System.Boolean> isViewedInvert, Nullable<global::System.Boolean> isViewed, Nullable<global::System.Boolean> isCopyHeldInverted, Nullable<global::System.Boolean> isCopyHeld, global::System.String types)
        {
            ObjectParameter sourceRefParameter;
            if (sourceRef != null)
            {
                sourceRefParameter = new ObjectParameter("SourceRef", sourceRef);
            }
            else
            {
                sourceRefParameter = new ObjectParameter("SourceRef", typeof(global::System.String));
            }
    
            ObjectParameter sourceDateToUpperParameter;
            if (sourceDateToUpper.HasValue)
            {
                sourceDateToUpperParameter = new ObjectParameter("SourceDateToUpper", sourceDateToUpper);
            }
            else
            {
                sourceDateToUpperParameter = new ObjectParameter("SourceDateToUpper", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceDateLowerParameter;
            if (sourceDateLower.HasValue)
            {
                sourceDateLowerParameter = new ObjectParameter("SourceDateLower", sourceDateLower);
            }
            else
            {
                sourceDateLowerParameter = new ObjectParameter("SourceDateLower", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceDateToLowerParameter;
            if (sourceDateToLower.HasValue)
            {
                sourceDateToLowerParameter = new ObjectParameter("SourceDateToLower", sourceDateToLower);
            }
            else
            {
                sourceDateToLowerParameter = new ObjectParameter("SourceDateToLower", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceDateUpperParameter;
            if (sourceDateUpper.HasValue)
            {
                sourceDateUpperParameter = new ObjectParameter("SourceDateUpper", sourceDateUpper);
            }
            else
            {
                sourceDateUpperParameter = new ObjectParameter("SourceDateUpper", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            ObjectParameter originalLocationParameter;
            if (originalLocation != null)
            {
                originalLocationParameter = new ObjectParameter("OriginalLocation", originalLocation);
            }
            else
            {
                originalLocationParameter = new ObjectParameter("OriginalLocation", typeof(global::System.String));
            }
    
            ObjectParameter dateAddedUpperParameter;
            if (dateAddedUpper.HasValue)
            {
                dateAddedUpperParameter = new ObjectParameter("DateAddedUpper", dateAddedUpper);
            }
            else
            {
                dateAddedUpperParameter = new ObjectParameter("DateAddedUpper", typeof(global::System.DateTime));
            }
    
            ObjectParameter dateAddedLowerParameter;
            if (dateAddedLower.HasValue)
            {
                dateAddedLowerParameter = new ObjectParameter("DateAddedLower", dateAddedLower);
            }
            else
            {
                dateAddedLowerParameter = new ObjectParameter("DateAddedLower", typeof(global::System.DateTime));
            }
    
            ObjectParameter isThackrayFoundParameter;
            if (isThackrayFound.HasValue)
            {
                isThackrayFoundParameter = new ObjectParameter("IsThackrayFound", isThackrayFound);
            }
            else
            {
                isThackrayFoundParameter = new ObjectParameter("IsThackrayFound", typeof(global::System.Boolean));
            }
    
            ObjectParameter isThackrayFoundInvertedParameter;
            if (isThackrayFoundInverted.HasValue)
            {
                isThackrayFoundInvertedParameter = new ObjectParameter("IsThackrayFoundInverted", isThackrayFoundInverted);
            }
            else
            {
                isThackrayFoundInvertedParameter = new ObjectParameter("IsThackrayFoundInverted", typeof(global::System.Boolean));
            }
    
            ObjectParameter isViewedInvertParameter;
            if (isViewedInvert.HasValue)
            {
                isViewedInvertParameter = new ObjectParameter("IsViewedInvert", isViewedInvert);
            }
            else
            {
                isViewedInvertParameter = new ObjectParameter("IsViewedInvert", typeof(global::System.Boolean));
            }
    
            ObjectParameter isViewedParameter;
            if (isViewed.HasValue)
            {
                isViewedParameter = new ObjectParameter("IsViewed", isViewed);
            }
            else
            {
                isViewedParameter = new ObjectParameter("IsViewed", typeof(global::System.Boolean));
            }
    
            ObjectParameter isCopyHeldInvertedParameter;
            if (isCopyHeldInverted.HasValue)
            {
                isCopyHeldInvertedParameter = new ObjectParameter("IsCopyHeldInverted", isCopyHeldInverted);
            }
            else
            {
                isCopyHeldInvertedParameter = new ObjectParameter("IsCopyHeldInverted", typeof(global::System.Boolean));
            }
    
            ObjectParameter isCopyHeldParameter;
            if (isCopyHeld.HasValue)
            {
                isCopyHeldParameter = new ObjectParameter("IsCopyHeld", isCopyHeld);
            }
            else
            {
                isCopyHeldParameter = new ObjectParameter("IsCopyHeld", typeof(global::System.Boolean));
            }
    
            ObjectParameter typesParameter;
            if (types != null)
            {
                typesParameter = new ObjectParameter("types", types);
            }
            else
            {
                typesParameter = new ObjectParameter("types", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Source>("GetSourcesBySourceTypes", sourceRefParameter, sourceDateToUpperParameter, sourceDateLowerParameter, sourceDateToLowerParameter, sourceDateUpperParameter, userIDParameter, originalLocationParameter, dateAddedUpperParameter, dateAddedLowerParameter, isThackrayFoundParameter, isThackrayFoundInvertedParameter, isViewedInvertParameter, isViewedParameter, isCopyHeldInvertedParameter, isCopyHeldParameter, typesParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="sourceRef">No Metadata Documentation available.</param>
        /// <param name="sourceDateToUpper">No Metadata Documentation available.</param>
        /// <param name="sourceDateLower">No Metadata Documentation available.</param>
        /// <param name="sourceDateToLower">No Metadata Documentation available.</param>
        /// <param name="sourceDateUpper">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="originalLocation">No Metadata Documentation available.</param>
        /// <param name="dateAddedUpper">No Metadata Documentation available.</param>
        /// <param name="dateAddedLower">No Metadata Documentation available.</param>
        /// <param name="isThackrayFound">No Metadata Documentation available.</param>
        /// <param name="isThackrayFoundInverted">No Metadata Documentation available.</param>
        /// <param name="isViewedInvert">No Metadata Documentation available.</param>
        /// <param name="isViewed">No Metadata Documentation available.</param>
        /// <param name="isCopyHeldInverted">No Metadata Documentation available.</param>
        /// <param name="isCopyHeld">No Metadata Documentation available.</param>
        /// <param name="types">No Metadata Documentation available.</param>
        public ObjectResult<Source> GetSourcesBySourceTypes(global::System.String sourceRef, Nullable<global::System.Int32> sourceDateToUpper, Nullable<global::System.Int32> sourceDateLower, Nullable<global::System.Int32> sourceDateToLower, Nullable<global::System.Int32> sourceDateUpper, Nullable<global::System.Int32> userID, global::System.String originalLocation, Nullable<global::System.DateTime> dateAddedUpper, Nullable<global::System.DateTime> dateAddedLower, Nullable<global::System.Boolean> isThackrayFound, Nullable<global::System.Boolean> isThackrayFoundInverted, Nullable<global::System.Boolean> isViewedInvert, Nullable<global::System.Boolean> isViewed, Nullable<global::System.Boolean> isCopyHeldInverted, Nullable<global::System.Boolean> isCopyHeld, global::System.String types, MergeOption mergeOption)
        {
            ObjectParameter sourceRefParameter;
            if (sourceRef != null)
            {
                sourceRefParameter = new ObjectParameter("SourceRef", sourceRef);
            }
            else
            {
                sourceRefParameter = new ObjectParameter("SourceRef", typeof(global::System.String));
            }
    
            ObjectParameter sourceDateToUpperParameter;
            if (sourceDateToUpper.HasValue)
            {
                sourceDateToUpperParameter = new ObjectParameter("SourceDateToUpper", sourceDateToUpper);
            }
            else
            {
                sourceDateToUpperParameter = new ObjectParameter("SourceDateToUpper", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceDateLowerParameter;
            if (sourceDateLower.HasValue)
            {
                sourceDateLowerParameter = new ObjectParameter("SourceDateLower", sourceDateLower);
            }
            else
            {
                sourceDateLowerParameter = new ObjectParameter("SourceDateLower", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceDateToLowerParameter;
            if (sourceDateToLower.HasValue)
            {
                sourceDateToLowerParameter = new ObjectParameter("SourceDateToLower", sourceDateToLower);
            }
            else
            {
                sourceDateToLowerParameter = new ObjectParameter("SourceDateToLower", typeof(global::System.Int32));
            }
    
            ObjectParameter sourceDateUpperParameter;
            if (sourceDateUpper.HasValue)
            {
                sourceDateUpperParameter = new ObjectParameter("SourceDateUpper", sourceDateUpper);
            }
            else
            {
                sourceDateUpperParameter = new ObjectParameter("SourceDateUpper", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Int32));
            }
    
            ObjectParameter originalLocationParameter;
            if (originalLocation != null)
            {
                originalLocationParameter = new ObjectParameter("OriginalLocation", originalLocation);
            }
            else
            {
                originalLocationParameter = new ObjectParameter("OriginalLocation", typeof(global::System.String));
            }
    
            ObjectParameter dateAddedUpperParameter;
            if (dateAddedUpper.HasValue)
            {
                dateAddedUpperParameter = new ObjectParameter("DateAddedUpper", dateAddedUpper);
            }
            else
            {
                dateAddedUpperParameter = new ObjectParameter("DateAddedUpper", typeof(global::System.DateTime));
            }
    
            ObjectParameter dateAddedLowerParameter;
            if (dateAddedLower.HasValue)
            {
                dateAddedLowerParameter = new ObjectParameter("DateAddedLower", dateAddedLower);
            }
            else
            {
                dateAddedLowerParameter = new ObjectParameter("DateAddedLower", typeof(global::System.DateTime));
            }
    
            ObjectParameter isThackrayFoundParameter;
            if (isThackrayFound.HasValue)
            {
                isThackrayFoundParameter = new ObjectParameter("IsThackrayFound", isThackrayFound);
            }
            else
            {
                isThackrayFoundParameter = new ObjectParameter("IsThackrayFound", typeof(global::System.Boolean));
            }
    
            ObjectParameter isThackrayFoundInvertedParameter;
            if (isThackrayFoundInverted.HasValue)
            {
                isThackrayFoundInvertedParameter = new ObjectParameter("IsThackrayFoundInverted", isThackrayFoundInverted);
            }
            else
            {
                isThackrayFoundInvertedParameter = new ObjectParameter("IsThackrayFoundInverted", typeof(global::System.Boolean));
            }
    
            ObjectParameter isViewedInvertParameter;
            if (isViewedInvert.HasValue)
            {
                isViewedInvertParameter = new ObjectParameter("IsViewedInvert", isViewedInvert);
            }
            else
            {
                isViewedInvertParameter = new ObjectParameter("IsViewedInvert", typeof(global::System.Boolean));
            }
    
            ObjectParameter isViewedParameter;
            if (isViewed.HasValue)
            {
                isViewedParameter = new ObjectParameter("IsViewed", isViewed);
            }
            else
            {
                isViewedParameter = new ObjectParameter("IsViewed", typeof(global::System.Boolean));
            }
    
            ObjectParameter isCopyHeldInvertedParameter;
            if (isCopyHeldInverted.HasValue)
            {
                isCopyHeldInvertedParameter = new ObjectParameter("IsCopyHeldInverted", isCopyHeldInverted);
            }
            else
            {
                isCopyHeldInvertedParameter = new ObjectParameter("IsCopyHeldInverted", typeof(global::System.Boolean));
            }
    
            ObjectParameter isCopyHeldParameter;
            if (isCopyHeld.HasValue)
            {
                isCopyHeldParameter = new ObjectParameter("IsCopyHeld", isCopyHeld);
            }
            else
            {
                isCopyHeldParameter = new ObjectParameter("IsCopyHeld", typeof(global::System.Boolean));
            }
    
            ObjectParameter typesParameter;
            if (types != null)
            {
                typesParameter = new ObjectParameter("types", types);
            }
            else
            {
                typesParameter = new ObjectParameter("types", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Source>("GetSourcesBySourceTypes", mergeOption, sourceRefParameter, sourceDateToUpperParameter, sourceDateLowerParameter, sourceDateToLowerParameter, sourceDateUpperParameter, userIDParameter, originalLocationParameter, dateAddedUpperParameter, dateAddedLowerParameter, isThackrayFoundParameter, isThackrayFoundInvertedParameter, isViewedInvertParameter, isViewedParameter, isCopyHeldInvertedParameter, isCopyHeldParameter, typesParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="source">No Metadata Documentation available.</param>
        public ObjectResult<Marriage> GetMarriagesBySourceList(global::System.String source)
        {
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Marriage>("GetMarriagesBySourceList", sourceParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="source">No Metadata Documentation available.</param>
        public ObjectResult<Marriage> GetMarriagesBySourceList(global::System.String source, MergeOption mergeOption)
        {
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Marriage>("GetMarriagesBySourceList", mergeOption, sourceParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int DeleteRelationOrphans()
        {
            return base.ExecuteFunction("DeleteRelationOrphans");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sourceId">No Metadata Documentation available.</param>
        public int DeletePersonsForSource(Nullable<global::System.Guid> sourceId)
        {
            ObjectParameter sourceIdParameter;
            if (sourceId.HasValue)
            {
                sourceIdParameter = new ObjectParameter("sourceId", sourceId);
            }
            else
            {
                sourceIdParameter = new ObjectParameter("sourceId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeletePersonsForSource", sourceIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="maleCName">No Metadata Documentation available.</param>
        /// <param name="maleSName">No Metadata Documentation available.</param>
        /// <param name="maleLocation">No Metadata Documentation available.</param>
        /// <param name="maleInfo">No Metadata Documentation available.</param>
        /// <param name="femaleCName">No Metadata Documentation available.</param>
        /// <param name="femaleSName">No Metadata Documentation available.</param>
        /// <param name="femaleLocation">No Metadata Documentation available.</param>
        /// <param name="femaleInfo">No Metadata Documentation available.</param>
        /// <param name="marriageLocation">No Metadata Documentation available.</param>
        /// <param name="marriageLocation2">No Metadata Documentation available.</param>
        /// <param name="marriageLocation3">No Metadata Documentation available.</param>
        /// <param name="marriageLocation4">No Metadata Documentation available.</param>
        /// <param name="marriageLocation5">No Metadata Documentation available.</param>
        /// <param name="yearLowerBound">No Metadata Documentation available.</param>
        /// <param name="yearUpperBound">No Metadata Documentation available.</param>
        /// <param name="marriageCounty">No Metadata Documentation available.</param>
        /// <param name="source">No Metadata Documentation available.</param>
        public ObjectResult<Marriage> USPFilteredMarriagesWithSources(global::System.String maleCName, global::System.String maleSName, global::System.String maleLocation, global::System.String maleInfo, global::System.String femaleCName, global::System.String femaleSName, global::System.String femaleLocation, global::System.String femaleInfo, global::System.String marriageLocation, global::System.String marriageLocation2, global::System.String marriageLocation3, global::System.String marriageLocation4, global::System.String marriageLocation5, Nullable<global::System.Int32> yearLowerBound, Nullable<global::System.Int32> yearUpperBound, global::System.String marriageCounty, global::System.String source)
        {
            ObjectParameter maleCNameParameter;
            if (maleCName != null)
            {
                maleCNameParameter = new ObjectParameter("maleCName", maleCName);
            }
            else
            {
                maleCNameParameter = new ObjectParameter("maleCName", typeof(global::System.String));
            }
    
            ObjectParameter maleSNameParameter;
            if (maleSName != null)
            {
                maleSNameParameter = new ObjectParameter("maleSName", maleSName);
            }
            else
            {
                maleSNameParameter = new ObjectParameter("maleSName", typeof(global::System.String));
            }
    
            ObjectParameter maleLocationParameter;
            if (maleLocation != null)
            {
                maleLocationParameter = new ObjectParameter("maleLocation", maleLocation);
            }
            else
            {
                maleLocationParameter = new ObjectParameter("maleLocation", typeof(global::System.String));
            }
    
            ObjectParameter maleInfoParameter;
            if (maleInfo != null)
            {
                maleInfoParameter = new ObjectParameter("maleInfo", maleInfo);
            }
            else
            {
                maleInfoParameter = new ObjectParameter("maleInfo", typeof(global::System.String));
            }
    
            ObjectParameter femaleCNameParameter;
            if (femaleCName != null)
            {
                femaleCNameParameter = new ObjectParameter("femaleCName", femaleCName);
            }
            else
            {
                femaleCNameParameter = new ObjectParameter("femaleCName", typeof(global::System.String));
            }
    
            ObjectParameter femaleSNameParameter;
            if (femaleSName != null)
            {
                femaleSNameParameter = new ObjectParameter("femaleSName", femaleSName);
            }
            else
            {
                femaleSNameParameter = new ObjectParameter("femaleSName", typeof(global::System.String));
            }
    
            ObjectParameter femaleLocationParameter;
            if (femaleLocation != null)
            {
                femaleLocationParameter = new ObjectParameter("femaleLocation", femaleLocation);
            }
            else
            {
                femaleLocationParameter = new ObjectParameter("femaleLocation", typeof(global::System.String));
            }
    
            ObjectParameter femaleInfoParameter;
            if (femaleInfo != null)
            {
                femaleInfoParameter = new ObjectParameter("femaleInfo", femaleInfo);
            }
            else
            {
                femaleInfoParameter = new ObjectParameter("femaleInfo", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocationParameter;
            if (marriageLocation != null)
            {
                marriageLocationParameter = new ObjectParameter("marriageLocation", marriageLocation);
            }
            else
            {
                marriageLocationParameter = new ObjectParameter("marriageLocation", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocation2Parameter;
            if (marriageLocation2 != null)
            {
                marriageLocation2Parameter = new ObjectParameter("marriageLocation2", marriageLocation2);
            }
            else
            {
                marriageLocation2Parameter = new ObjectParameter("marriageLocation2", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocation3Parameter;
            if (marriageLocation3 != null)
            {
                marriageLocation3Parameter = new ObjectParameter("marriageLocation3", marriageLocation3);
            }
            else
            {
                marriageLocation3Parameter = new ObjectParameter("marriageLocation3", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocation4Parameter;
            if (marriageLocation4 != null)
            {
                marriageLocation4Parameter = new ObjectParameter("marriageLocation4", marriageLocation4);
            }
            else
            {
                marriageLocation4Parameter = new ObjectParameter("marriageLocation4", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocation5Parameter;
            if (marriageLocation5 != null)
            {
                marriageLocation5Parameter = new ObjectParameter("marriageLocation5", marriageLocation5);
            }
            else
            {
                marriageLocation5Parameter = new ObjectParameter("marriageLocation5", typeof(global::System.String));
            }
    
            ObjectParameter yearLowerBoundParameter;
            if (yearLowerBound.HasValue)
            {
                yearLowerBoundParameter = new ObjectParameter("yearLowerBound", yearLowerBound);
            }
            else
            {
                yearLowerBoundParameter = new ObjectParameter("yearLowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter yearUpperBoundParameter;
            if (yearUpperBound.HasValue)
            {
                yearUpperBoundParameter = new ObjectParameter("yearUpperBound", yearUpperBound);
            }
            else
            {
                yearUpperBoundParameter = new ObjectParameter("yearUpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter marriageCountyParameter;
            if (marriageCounty != null)
            {
                marriageCountyParameter = new ObjectParameter("marriageCounty", marriageCounty);
            }
            else
            {
                marriageCountyParameter = new ObjectParameter("marriageCounty", typeof(global::System.String));
            }
    
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Marriage>("USPFilteredMarriagesWithSources", maleCNameParameter, maleSNameParameter, maleLocationParameter, maleInfoParameter, femaleCNameParameter, femaleSNameParameter, femaleLocationParameter, femaleInfoParameter, marriageLocationParameter, marriageLocation2Parameter, marriageLocation3Parameter, marriageLocation4Parameter, marriageLocation5Parameter, yearLowerBoundParameter, yearUpperBoundParameter, marriageCountyParameter, sourceParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="maleCName">No Metadata Documentation available.</param>
        /// <param name="maleSName">No Metadata Documentation available.</param>
        /// <param name="maleLocation">No Metadata Documentation available.</param>
        /// <param name="maleInfo">No Metadata Documentation available.</param>
        /// <param name="femaleCName">No Metadata Documentation available.</param>
        /// <param name="femaleSName">No Metadata Documentation available.</param>
        /// <param name="femaleLocation">No Metadata Documentation available.</param>
        /// <param name="femaleInfo">No Metadata Documentation available.</param>
        /// <param name="marriageLocation">No Metadata Documentation available.</param>
        /// <param name="marriageLocation2">No Metadata Documentation available.</param>
        /// <param name="marriageLocation3">No Metadata Documentation available.</param>
        /// <param name="marriageLocation4">No Metadata Documentation available.</param>
        /// <param name="marriageLocation5">No Metadata Documentation available.</param>
        /// <param name="yearLowerBound">No Metadata Documentation available.</param>
        /// <param name="yearUpperBound">No Metadata Documentation available.</param>
        /// <param name="marriageCounty">No Metadata Documentation available.</param>
        /// <param name="source">No Metadata Documentation available.</param>
        public ObjectResult<Marriage> USPFilteredMarriagesWithSources(global::System.String maleCName, global::System.String maleSName, global::System.String maleLocation, global::System.String maleInfo, global::System.String femaleCName, global::System.String femaleSName, global::System.String femaleLocation, global::System.String femaleInfo, global::System.String marriageLocation, global::System.String marriageLocation2, global::System.String marriageLocation3, global::System.String marriageLocation4, global::System.String marriageLocation5, Nullable<global::System.Int32> yearLowerBound, Nullable<global::System.Int32> yearUpperBound, global::System.String marriageCounty, global::System.String source, MergeOption mergeOption)
        {
            ObjectParameter maleCNameParameter;
            if (maleCName != null)
            {
                maleCNameParameter = new ObjectParameter("maleCName", maleCName);
            }
            else
            {
                maleCNameParameter = new ObjectParameter("maleCName", typeof(global::System.String));
            }
    
            ObjectParameter maleSNameParameter;
            if (maleSName != null)
            {
                maleSNameParameter = new ObjectParameter("maleSName", maleSName);
            }
            else
            {
                maleSNameParameter = new ObjectParameter("maleSName", typeof(global::System.String));
            }
    
            ObjectParameter maleLocationParameter;
            if (maleLocation != null)
            {
                maleLocationParameter = new ObjectParameter("maleLocation", maleLocation);
            }
            else
            {
                maleLocationParameter = new ObjectParameter("maleLocation", typeof(global::System.String));
            }
    
            ObjectParameter maleInfoParameter;
            if (maleInfo != null)
            {
                maleInfoParameter = new ObjectParameter("maleInfo", maleInfo);
            }
            else
            {
                maleInfoParameter = new ObjectParameter("maleInfo", typeof(global::System.String));
            }
    
            ObjectParameter femaleCNameParameter;
            if (femaleCName != null)
            {
                femaleCNameParameter = new ObjectParameter("femaleCName", femaleCName);
            }
            else
            {
                femaleCNameParameter = new ObjectParameter("femaleCName", typeof(global::System.String));
            }
    
            ObjectParameter femaleSNameParameter;
            if (femaleSName != null)
            {
                femaleSNameParameter = new ObjectParameter("femaleSName", femaleSName);
            }
            else
            {
                femaleSNameParameter = new ObjectParameter("femaleSName", typeof(global::System.String));
            }
    
            ObjectParameter femaleLocationParameter;
            if (femaleLocation != null)
            {
                femaleLocationParameter = new ObjectParameter("femaleLocation", femaleLocation);
            }
            else
            {
                femaleLocationParameter = new ObjectParameter("femaleLocation", typeof(global::System.String));
            }
    
            ObjectParameter femaleInfoParameter;
            if (femaleInfo != null)
            {
                femaleInfoParameter = new ObjectParameter("femaleInfo", femaleInfo);
            }
            else
            {
                femaleInfoParameter = new ObjectParameter("femaleInfo", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocationParameter;
            if (marriageLocation != null)
            {
                marriageLocationParameter = new ObjectParameter("marriageLocation", marriageLocation);
            }
            else
            {
                marriageLocationParameter = new ObjectParameter("marriageLocation", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocation2Parameter;
            if (marriageLocation2 != null)
            {
                marriageLocation2Parameter = new ObjectParameter("marriageLocation2", marriageLocation2);
            }
            else
            {
                marriageLocation2Parameter = new ObjectParameter("marriageLocation2", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocation3Parameter;
            if (marriageLocation3 != null)
            {
                marriageLocation3Parameter = new ObjectParameter("marriageLocation3", marriageLocation3);
            }
            else
            {
                marriageLocation3Parameter = new ObjectParameter("marriageLocation3", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocation4Parameter;
            if (marriageLocation4 != null)
            {
                marriageLocation4Parameter = new ObjectParameter("marriageLocation4", marriageLocation4);
            }
            else
            {
                marriageLocation4Parameter = new ObjectParameter("marriageLocation4", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocation5Parameter;
            if (marriageLocation5 != null)
            {
                marriageLocation5Parameter = new ObjectParameter("marriageLocation5", marriageLocation5);
            }
            else
            {
                marriageLocation5Parameter = new ObjectParameter("marriageLocation5", typeof(global::System.String));
            }
    
            ObjectParameter yearLowerBoundParameter;
            if (yearLowerBound.HasValue)
            {
                yearLowerBoundParameter = new ObjectParameter("yearLowerBound", yearLowerBound);
            }
            else
            {
                yearLowerBoundParameter = new ObjectParameter("yearLowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter yearUpperBoundParameter;
            if (yearUpperBound.HasValue)
            {
                yearUpperBoundParameter = new ObjectParameter("yearUpperBound", yearUpperBound);
            }
            else
            {
                yearUpperBoundParameter = new ObjectParameter("yearUpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter marriageCountyParameter;
            if (marriageCounty != null)
            {
                marriageCountyParameter = new ObjectParameter("marriageCounty", marriageCounty);
            }
            else
            {
                marriageCountyParameter = new ObjectParameter("marriageCounty", typeof(global::System.String));
            }
    
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Marriage>("USPFilteredMarriagesWithSources", mergeOption, maleCNameParameter, maleSNameParameter, maleLocationParameter, maleInfoParameter, femaleCNameParameter, femaleSNameParameter, femaleLocationParameter, femaleInfoParameter, marriageLocationParameter, marriageLocation2Parameter, marriageLocation3Parameter, marriageLocation4Parameter, marriageLocation5Parameter, yearLowerBoundParameter, yearUpperBoundParameter, marriageCountyParameter, sourceParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cName">No Metadata Documentation available.</param>
        /// <param name="sName">No Metadata Documentation available.</param>
        /// <param name="fatherCName">No Metadata Documentation available.</param>
        /// <param name="fatherSName">No Metadata Documentation available.</param>
        /// <param name="motherCName">No Metadata Documentation available.</param>
        /// <param name="motherSName">No Metadata Documentation available.</param>
        /// <param name="source">No Metadata Documentation available.</param>
        /// <param name="bLocation">No Metadata Documentation available.</param>
        /// <param name="lowerBound">No Metadata Documentation available.</param>
        /// <param name="upperBound">No Metadata Documentation available.</param>
        /// <param name="county">No Metadata Documentation available.</param>
        /// <param name="spouse">No Metadata Documentation available.</param>
        public ObjectResult<Person> GetSimPersonWithSources(global::System.String cName, global::System.String sName, global::System.String fatherCName, global::System.String fatherSName, global::System.String motherCName, global::System.String motherSName, global::System.String source, global::System.String bLocation, Nullable<global::System.Int32> lowerBound, Nullable<global::System.Int32> upperBound, global::System.String county, global::System.String spouse)
        {
            ObjectParameter cNameParameter;
            if (cName != null)
            {
                cNameParameter = new ObjectParameter("cName", cName);
            }
            else
            {
                cNameParameter = new ObjectParameter("cName", typeof(global::System.String));
            }
    
            ObjectParameter sNameParameter;
            if (sName != null)
            {
                sNameParameter = new ObjectParameter("sName", sName);
            }
            else
            {
                sNameParameter = new ObjectParameter("sName", typeof(global::System.String));
            }
    
            ObjectParameter fatherCNameParameter;
            if (fatherCName != null)
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", fatherCName);
            }
            else
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", typeof(global::System.String));
            }
    
            ObjectParameter fatherSNameParameter;
            if (fatherSName != null)
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", fatherSName);
            }
            else
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", typeof(global::System.String));
            }
    
            ObjectParameter motherCNameParameter;
            if (motherCName != null)
            {
                motherCNameParameter = new ObjectParameter("motherCName", motherCName);
            }
            else
            {
                motherCNameParameter = new ObjectParameter("motherCName", typeof(global::System.String));
            }
    
            ObjectParameter motherSNameParameter;
            if (motherSName != null)
            {
                motherSNameParameter = new ObjectParameter("motherSName", motherSName);
            }
            else
            {
                motherSNameParameter = new ObjectParameter("motherSName", typeof(global::System.String));
            }
    
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            ObjectParameter bLocationParameter;
            if (bLocation != null)
            {
                bLocationParameter = new ObjectParameter("bLocation", bLocation);
            }
            else
            {
                bLocationParameter = new ObjectParameter("bLocation", typeof(global::System.String));
            }
    
            ObjectParameter lowerBoundParameter;
            if (lowerBound.HasValue)
            {
                lowerBoundParameter = new ObjectParameter("LowerBound", lowerBound);
            }
            else
            {
                lowerBoundParameter = new ObjectParameter("LowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter upperBoundParameter;
            if (upperBound.HasValue)
            {
                upperBoundParameter = new ObjectParameter("UpperBound", upperBound);
            }
            else
            {
                upperBoundParameter = new ObjectParameter("UpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter countyParameter;
            if (county != null)
            {
                countyParameter = new ObjectParameter("county", county);
            }
            else
            {
                countyParameter = new ObjectParameter("county", typeof(global::System.String));
            }
    
            ObjectParameter spouseParameter;
            if (spouse != null)
            {
                spouseParameter = new ObjectParameter("spouse", spouse);
            }
            else
            {
                spouseParameter = new ObjectParameter("spouse", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Person>("GetSimPersonWithSources", cNameParameter, sNameParameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, lowerBoundParameter, upperBoundParameter, countyParameter, spouseParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="cName">No Metadata Documentation available.</param>
        /// <param name="sName">No Metadata Documentation available.</param>
        /// <param name="fatherCName">No Metadata Documentation available.</param>
        /// <param name="fatherSName">No Metadata Documentation available.</param>
        /// <param name="motherCName">No Metadata Documentation available.</param>
        /// <param name="motherSName">No Metadata Documentation available.</param>
        /// <param name="source">No Metadata Documentation available.</param>
        /// <param name="bLocation">No Metadata Documentation available.</param>
        /// <param name="lowerBound">No Metadata Documentation available.</param>
        /// <param name="upperBound">No Metadata Documentation available.</param>
        /// <param name="county">No Metadata Documentation available.</param>
        /// <param name="spouse">No Metadata Documentation available.</param>
        public ObjectResult<Person> GetSimPersonWithSources(global::System.String cName, global::System.String sName, global::System.String fatherCName, global::System.String fatherSName, global::System.String motherCName, global::System.String motherSName, global::System.String source, global::System.String bLocation, Nullable<global::System.Int32> lowerBound, Nullable<global::System.Int32> upperBound, global::System.String county, global::System.String spouse, MergeOption mergeOption)
        {
            ObjectParameter cNameParameter;
            if (cName != null)
            {
                cNameParameter = new ObjectParameter("cName", cName);
            }
            else
            {
                cNameParameter = new ObjectParameter("cName", typeof(global::System.String));
            }
    
            ObjectParameter sNameParameter;
            if (sName != null)
            {
                sNameParameter = new ObjectParameter("sName", sName);
            }
            else
            {
                sNameParameter = new ObjectParameter("sName", typeof(global::System.String));
            }
    
            ObjectParameter fatherCNameParameter;
            if (fatherCName != null)
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", fatherCName);
            }
            else
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", typeof(global::System.String));
            }
    
            ObjectParameter fatherSNameParameter;
            if (fatherSName != null)
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", fatherSName);
            }
            else
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", typeof(global::System.String));
            }
    
            ObjectParameter motherCNameParameter;
            if (motherCName != null)
            {
                motherCNameParameter = new ObjectParameter("motherCName", motherCName);
            }
            else
            {
                motherCNameParameter = new ObjectParameter("motherCName", typeof(global::System.String));
            }
    
            ObjectParameter motherSNameParameter;
            if (motherSName != null)
            {
                motherSNameParameter = new ObjectParameter("motherSName", motherSName);
            }
            else
            {
                motherSNameParameter = new ObjectParameter("motherSName", typeof(global::System.String));
            }
    
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            ObjectParameter bLocationParameter;
            if (bLocation != null)
            {
                bLocationParameter = new ObjectParameter("bLocation", bLocation);
            }
            else
            {
                bLocationParameter = new ObjectParameter("bLocation", typeof(global::System.String));
            }
    
            ObjectParameter lowerBoundParameter;
            if (lowerBound.HasValue)
            {
                lowerBoundParameter = new ObjectParameter("LowerBound", lowerBound);
            }
            else
            {
                lowerBoundParameter = new ObjectParameter("LowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter upperBoundParameter;
            if (upperBound.HasValue)
            {
                upperBoundParameter = new ObjectParameter("UpperBound", upperBound);
            }
            else
            {
                upperBoundParameter = new ObjectParameter("UpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter countyParameter;
            if (county != null)
            {
                countyParameter = new ObjectParameter("county", county);
            }
            else
            {
                countyParameter = new ObjectParameter("county", typeof(global::System.String));
            }
    
            ObjectParameter spouseParameter;
            if (spouse != null)
            {
                spouseParameter = new ObjectParameter("spouse", spouse);
            }
            else
            {
                spouseParameter = new ObjectParameter("spouse", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Person>("GetSimPersonWithSources", mergeOption, cNameParameter, sNameParameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, lowerBoundParameter, upperBoundParameter, countyParameter, spouseParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isMaleId">No Metadata Documentation available.</param>
        /// <param name="cName">No Metadata Documentation available.</param>
        /// <param name="sName">No Metadata Documentation available.</param>
        /// <param name="dLocation">No Metadata Documentation available.</param>
        /// <param name="dLocation2">No Metadata Documentation available.</param>
        /// <param name="dLocation3">No Metadata Documentation available.</param>
        /// <param name="dLocation4">No Metadata Documentation available.</param>
        /// <param name="dLocation5">No Metadata Documentation available.</param>
        /// <param name="fatherCName">No Metadata Documentation available.</param>
        /// <param name="fatherSName">No Metadata Documentation available.</param>
        /// <param name="motherCName">No Metadata Documentation available.</param>
        /// <param name="motherSName">No Metadata Documentation available.</param>
        /// <param name="source">No Metadata Documentation available.</param>
        /// <param name="bLocation">No Metadata Documentation available.</param>
        /// <param name="bLocation2">No Metadata Documentation available.</param>
        /// <param name="bLocation3">No Metadata Documentation available.</param>
        /// <param name="bLocation4">No Metadata Documentation available.</param>
        /// <param name="bLocation5">No Metadata Documentation available.</param>
        /// <param name="birthLowerBound">No Metadata Documentation available.</param>
        /// <param name="birthUpperBound">No Metadata Documentation available.</param>
        /// <param name="bapLowerBound">No Metadata Documentation available.</param>
        /// <param name="bapUpperBound">No Metadata Documentation available.</param>
        /// <param name="detLowerBound">No Metadata Documentation available.</param>
        /// <param name="detUpperBound">No Metadata Documentation available.</param>
        /// <param name="bCounty">No Metadata Documentation available.</param>
        /// <param name="dName">No Metadata Documentation available.</param>
        /// <param name="spouseCName">No Metadata Documentation available.</param>
        /// <param name="spouseSName">No Metadata Documentation available.</param>
        /// <param name="fatherOccupation">No Metadata Documentation available.</param>
        public ObjectResult<Person> GetPersWithSources(Nullable<global::System.Boolean> isMaleId, global::System.String cName, global::System.String sName, global::System.String dLocation, global::System.String dLocation2, global::System.String dLocation3, global::System.String dLocation4, global::System.String dLocation5, global::System.String fatherCName, global::System.String fatherSName, global::System.String motherCName, global::System.String motherSName, global::System.String source, global::System.String bLocation, global::System.String bLocation2, global::System.String bLocation3, global::System.String bLocation4, global::System.String bLocation5, Nullable<global::System.Int32> birthLowerBound, Nullable<global::System.Int32> birthUpperBound, Nullable<global::System.Int32> bapLowerBound, Nullable<global::System.Int32> bapUpperBound, Nullable<global::System.Int32> detLowerBound, Nullable<global::System.Int32> detUpperBound, global::System.String bCounty, global::System.String dName, global::System.String spouseCName, global::System.String spouseSName, global::System.String fatherOccupation)
        {
            ObjectParameter isMaleIdParameter;
            if (isMaleId.HasValue)
            {
                isMaleIdParameter = new ObjectParameter("isMaleId", isMaleId);
            }
            else
            {
                isMaleIdParameter = new ObjectParameter("isMaleId", typeof(global::System.Boolean));
            }
    
            ObjectParameter cNameParameter;
            if (cName != null)
            {
                cNameParameter = new ObjectParameter("cName", cName);
            }
            else
            {
                cNameParameter = new ObjectParameter("cName", typeof(global::System.String));
            }
    
            ObjectParameter sNameParameter;
            if (sName != null)
            {
                sNameParameter = new ObjectParameter("sName", sName);
            }
            else
            {
                sNameParameter = new ObjectParameter("sName", typeof(global::System.String));
            }
    
            ObjectParameter dLocationParameter;
            if (dLocation != null)
            {
                dLocationParameter = new ObjectParameter("dLocation", dLocation);
            }
            else
            {
                dLocationParameter = new ObjectParameter("dLocation", typeof(global::System.String));
            }
    
            ObjectParameter dLocation2Parameter;
            if (dLocation2 != null)
            {
                dLocation2Parameter = new ObjectParameter("dLocation2", dLocation2);
            }
            else
            {
                dLocation2Parameter = new ObjectParameter("dLocation2", typeof(global::System.String));
            }
    
            ObjectParameter dLocation3Parameter;
            if (dLocation3 != null)
            {
                dLocation3Parameter = new ObjectParameter("dLocation3", dLocation3);
            }
            else
            {
                dLocation3Parameter = new ObjectParameter("dLocation3", typeof(global::System.String));
            }
    
            ObjectParameter dLocation4Parameter;
            if (dLocation4 != null)
            {
                dLocation4Parameter = new ObjectParameter("dLocation4", dLocation4);
            }
            else
            {
                dLocation4Parameter = new ObjectParameter("dLocation4", typeof(global::System.String));
            }
    
            ObjectParameter dLocation5Parameter;
            if (dLocation5 != null)
            {
                dLocation5Parameter = new ObjectParameter("dLocation5", dLocation5);
            }
            else
            {
                dLocation5Parameter = new ObjectParameter("dLocation5", typeof(global::System.String));
            }
    
            ObjectParameter fatherCNameParameter;
            if (fatherCName != null)
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", fatherCName);
            }
            else
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", typeof(global::System.String));
            }
    
            ObjectParameter fatherSNameParameter;
            if (fatherSName != null)
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", fatherSName);
            }
            else
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", typeof(global::System.String));
            }
    
            ObjectParameter motherCNameParameter;
            if (motherCName != null)
            {
                motherCNameParameter = new ObjectParameter("motherCName", motherCName);
            }
            else
            {
                motherCNameParameter = new ObjectParameter("motherCName", typeof(global::System.String));
            }
    
            ObjectParameter motherSNameParameter;
            if (motherSName != null)
            {
                motherSNameParameter = new ObjectParameter("motherSName", motherSName);
            }
            else
            {
                motherSNameParameter = new ObjectParameter("motherSName", typeof(global::System.String));
            }
    
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            ObjectParameter bLocationParameter;
            if (bLocation != null)
            {
                bLocationParameter = new ObjectParameter("bLocation", bLocation);
            }
            else
            {
                bLocationParameter = new ObjectParameter("bLocation", typeof(global::System.String));
            }
    
            ObjectParameter bLocation2Parameter;
            if (bLocation2 != null)
            {
                bLocation2Parameter = new ObjectParameter("bLocation2", bLocation2);
            }
            else
            {
                bLocation2Parameter = new ObjectParameter("bLocation2", typeof(global::System.String));
            }
    
            ObjectParameter bLocation3Parameter;
            if (bLocation3 != null)
            {
                bLocation3Parameter = new ObjectParameter("bLocation3", bLocation3);
            }
            else
            {
                bLocation3Parameter = new ObjectParameter("bLocation3", typeof(global::System.String));
            }
    
            ObjectParameter bLocation4Parameter;
            if (bLocation4 != null)
            {
                bLocation4Parameter = new ObjectParameter("bLocation4", bLocation4);
            }
            else
            {
                bLocation4Parameter = new ObjectParameter("bLocation4", typeof(global::System.String));
            }
    
            ObjectParameter bLocation5Parameter;
            if (bLocation5 != null)
            {
                bLocation5Parameter = new ObjectParameter("bLocation5", bLocation5);
            }
            else
            {
                bLocation5Parameter = new ObjectParameter("bLocation5", typeof(global::System.String));
            }
    
            ObjectParameter birthLowerBoundParameter;
            if (birthLowerBound.HasValue)
            {
                birthLowerBoundParameter = new ObjectParameter("birthLowerBound", birthLowerBound);
            }
            else
            {
                birthLowerBoundParameter = new ObjectParameter("birthLowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter birthUpperBoundParameter;
            if (birthUpperBound.HasValue)
            {
                birthUpperBoundParameter = new ObjectParameter("birthUpperBound", birthUpperBound);
            }
            else
            {
                birthUpperBoundParameter = new ObjectParameter("birthUpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter bapLowerBoundParameter;
            if (bapLowerBound.HasValue)
            {
                bapLowerBoundParameter = new ObjectParameter("bapLowerBound", bapLowerBound);
            }
            else
            {
                bapLowerBoundParameter = new ObjectParameter("bapLowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter bapUpperBoundParameter;
            if (bapUpperBound.HasValue)
            {
                bapUpperBoundParameter = new ObjectParameter("bapUpperBound", bapUpperBound);
            }
            else
            {
                bapUpperBoundParameter = new ObjectParameter("bapUpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter detLowerBoundParameter;
            if (detLowerBound.HasValue)
            {
                detLowerBoundParameter = new ObjectParameter("detLowerBound", detLowerBound);
            }
            else
            {
                detLowerBoundParameter = new ObjectParameter("detLowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter detUpperBoundParameter;
            if (detUpperBound.HasValue)
            {
                detUpperBoundParameter = new ObjectParameter("detUpperBound", detUpperBound);
            }
            else
            {
                detUpperBoundParameter = new ObjectParameter("detUpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter bCountyParameter;
            if (bCounty != null)
            {
                bCountyParameter = new ObjectParameter("bCounty", bCounty);
            }
            else
            {
                bCountyParameter = new ObjectParameter("bCounty", typeof(global::System.String));
            }
    
            ObjectParameter dNameParameter;
            if (dName != null)
            {
                dNameParameter = new ObjectParameter("dName", dName);
            }
            else
            {
                dNameParameter = new ObjectParameter("dName", typeof(global::System.String));
            }
    
            ObjectParameter spouseCNameParameter;
            if (spouseCName != null)
            {
                spouseCNameParameter = new ObjectParameter("spouseCName", spouseCName);
            }
            else
            {
                spouseCNameParameter = new ObjectParameter("spouseCName", typeof(global::System.String));
            }
    
            ObjectParameter spouseSNameParameter;
            if (spouseSName != null)
            {
                spouseSNameParameter = new ObjectParameter("spouseSName", spouseSName);
            }
            else
            {
                spouseSNameParameter = new ObjectParameter("spouseSName", typeof(global::System.String));
            }
    
            ObjectParameter fatherOccupationParameter;
            if (fatherOccupation != null)
            {
                fatherOccupationParameter = new ObjectParameter("fatherOccupation", fatherOccupation);
            }
            else
            {
                fatherOccupationParameter = new ObjectParameter("fatherOccupation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Person>("GetPersWithSources", isMaleIdParameter, cNameParameter, sNameParameter, dLocationParameter, dLocation2Parameter, dLocation3Parameter, dLocation4Parameter, dLocation5Parameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, bLocation2Parameter, bLocation3Parameter, bLocation4Parameter, bLocation5Parameter, birthLowerBoundParameter, birthUpperBoundParameter, bapLowerBoundParameter, bapUpperBoundParameter, detLowerBoundParameter, detUpperBoundParameter, bCountyParameter, dNameParameter, spouseCNameParameter, spouseSNameParameter, fatherOccupationParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="isMaleId">No Metadata Documentation available.</param>
        /// <param name="cName">No Metadata Documentation available.</param>
        /// <param name="sName">No Metadata Documentation available.</param>
        /// <param name="dLocation">No Metadata Documentation available.</param>
        /// <param name="dLocation2">No Metadata Documentation available.</param>
        /// <param name="dLocation3">No Metadata Documentation available.</param>
        /// <param name="dLocation4">No Metadata Documentation available.</param>
        /// <param name="dLocation5">No Metadata Documentation available.</param>
        /// <param name="fatherCName">No Metadata Documentation available.</param>
        /// <param name="fatherSName">No Metadata Documentation available.</param>
        /// <param name="motherCName">No Metadata Documentation available.</param>
        /// <param name="motherSName">No Metadata Documentation available.</param>
        /// <param name="source">No Metadata Documentation available.</param>
        /// <param name="bLocation">No Metadata Documentation available.</param>
        /// <param name="bLocation2">No Metadata Documentation available.</param>
        /// <param name="bLocation3">No Metadata Documentation available.</param>
        /// <param name="bLocation4">No Metadata Documentation available.</param>
        /// <param name="bLocation5">No Metadata Documentation available.</param>
        /// <param name="birthLowerBound">No Metadata Documentation available.</param>
        /// <param name="birthUpperBound">No Metadata Documentation available.</param>
        /// <param name="bapLowerBound">No Metadata Documentation available.</param>
        /// <param name="bapUpperBound">No Metadata Documentation available.</param>
        /// <param name="detLowerBound">No Metadata Documentation available.</param>
        /// <param name="detUpperBound">No Metadata Documentation available.</param>
        /// <param name="bCounty">No Metadata Documentation available.</param>
        /// <param name="dName">No Metadata Documentation available.</param>
        /// <param name="spouseCName">No Metadata Documentation available.</param>
        /// <param name="spouseSName">No Metadata Documentation available.</param>
        /// <param name="fatherOccupation">No Metadata Documentation available.</param>
        public ObjectResult<Person> GetPersWithSources(Nullable<global::System.Boolean> isMaleId, global::System.String cName, global::System.String sName, global::System.String dLocation, global::System.String dLocation2, global::System.String dLocation3, global::System.String dLocation4, global::System.String dLocation5, global::System.String fatherCName, global::System.String fatherSName, global::System.String motherCName, global::System.String motherSName, global::System.String source, global::System.String bLocation, global::System.String bLocation2, global::System.String bLocation3, global::System.String bLocation4, global::System.String bLocation5, Nullable<global::System.Int32> birthLowerBound, Nullable<global::System.Int32> birthUpperBound, Nullable<global::System.Int32> bapLowerBound, Nullable<global::System.Int32> bapUpperBound, Nullable<global::System.Int32> detLowerBound, Nullable<global::System.Int32> detUpperBound, global::System.String bCounty, global::System.String dName, global::System.String spouseCName, global::System.String spouseSName, global::System.String fatherOccupation, MergeOption mergeOption)
        {
            ObjectParameter isMaleIdParameter;
            if (isMaleId.HasValue)
            {
                isMaleIdParameter = new ObjectParameter("isMaleId", isMaleId);
            }
            else
            {
                isMaleIdParameter = new ObjectParameter("isMaleId", typeof(global::System.Boolean));
            }
    
            ObjectParameter cNameParameter;
            if (cName != null)
            {
                cNameParameter = new ObjectParameter("cName", cName);
            }
            else
            {
                cNameParameter = new ObjectParameter("cName", typeof(global::System.String));
            }
    
            ObjectParameter sNameParameter;
            if (sName != null)
            {
                sNameParameter = new ObjectParameter("sName", sName);
            }
            else
            {
                sNameParameter = new ObjectParameter("sName", typeof(global::System.String));
            }
    
            ObjectParameter dLocationParameter;
            if (dLocation != null)
            {
                dLocationParameter = new ObjectParameter("dLocation", dLocation);
            }
            else
            {
                dLocationParameter = new ObjectParameter("dLocation", typeof(global::System.String));
            }
    
            ObjectParameter dLocation2Parameter;
            if (dLocation2 != null)
            {
                dLocation2Parameter = new ObjectParameter("dLocation2", dLocation2);
            }
            else
            {
                dLocation2Parameter = new ObjectParameter("dLocation2", typeof(global::System.String));
            }
    
            ObjectParameter dLocation3Parameter;
            if (dLocation3 != null)
            {
                dLocation3Parameter = new ObjectParameter("dLocation3", dLocation3);
            }
            else
            {
                dLocation3Parameter = new ObjectParameter("dLocation3", typeof(global::System.String));
            }
    
            ObjectParameter dLocation4Parameter;
            if (dLocation4 != null)
            {
                dLocation4Parameter = new ObjectParameter("dLocation4", dLocation4);
            }
            else
            {
                dLocation4Parameter = new ObjectParameter("dLocation4", typeof(global::System.String));
            }
    
            ObjectParameter dLocation5Parameter;
            if (dLocation5 != null)
            {
                dLocation5Parameter = new ObjectParameter("dLocation5", dLocation5);
            }
            else
            {
                dLocation5Parameter = new ObjectParameter("dLocation5", typeof(global::System.String));
            }
    
            ObjectParameter fatherCNameParameter;
            if (fatherCName != null)
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", fatherCName);
            }
            else
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", typeof(global::System.String));
            }
    
            ObjectParameter fatherSNameParameter;
            if (fatherSName != null)
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", fatherSName);
            }
            else
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", typeof(global::System.String));
            }
    
            ObjectParameter motherCNameParameter;
            if (motherCName != null)
            {
                motherCNameParameter = new ObjectParameter("motherCName", motherCName);
            }
            else
            {
                motherCNameParameter = new ObjectParameter("motherCName", typeof(global::System.String));
            }
    
            ObjectParameter motherSNameParameter;
            if (motherSName != null)
            {
                motherSNameParameter = new ObjectParameter("motherSName", motherSName);
            }
            else
            {
                motherSNameParameter = new ObjectParameter("motherSName", typeof(global::System.String));
            }
    
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            ObjectParameter bLocationParameter;
            if (bLocation != null)
            {
                bLocationParameter = new ObjectParameter("bLocation", bLocation);
            }
            else
            {
                bLocationParameter = new ObjectParameter("bLocation", typeof(global::System.String));
            }
    
            ObjectParameter bLocation2Parameter;
            if (bLocation2 != null)
            {
                bLocation2Parameter = new ObjectParameter("bLocation2", bLocation2);
            }
            else
            {
                bLocation2Parameter = new ObjectParameter("bLocation2", typeof(global::System.String));
            }
    
            ObjectParameter bLocation3Parameter;
            if (bLocation3 != null)
            {
                bLocation3Parameter = new ObjectParameter("bLocation3", bLocation3);
            }
            else
            {
                bLocation3Parameter = new ObjectParameter("bLocation3", typeof(global::System.String));
            }
    
            ObjectParameter bLocation4Parameter;
            if (bLocation4 != null)
            {
                bLocation4Parameter = new ObjectParameter("bLocation4", bLocation4);
            }
            else
            {
                bLocation4Parameter = new ObjectParameter("bLocation4", typeof(global::System.String));
            }
    
            ObjectParameter bLocation5Parameter;
            if (bLocation5 != null)
            {
                bLocation5Parameter = new ObjectParameter("bLocation5", bLocation5);
            }
            else
            {
                bLocation5Parameter = new ObjectParameter("bLocation5", typeof(global::System.String));
            }
    
            ObjectParameter birthLowerBoundParameter;
            if (birthLowerBound.HasValue)
            {
                birthLowerBoundParameter = new ObjectParameter("birthLowerBound", birthLowerBound);
            }
            else
            {
                birthLowerBoundParameter = new ObjectParameter("birthLowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter birthUpperBoundParameter;
            if (birthUpperBound.HasValue)
            {
                birthUpperBoundParameter = new ObjectParameter("birthUpperBound", birthUpperBound);
            }
            else
            {
                birthUpperBoundParameter = new ObjectParameter("birthUpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter bapLowerBoundParameter;
            if (bapLowerBound.HasValue)
            {
                bapLowerBoundParameter = new ObjectParameter("bapLowerBound", bapLowerBound);
            }
            else
            {
                bapLowerBoundParameter = new ObjectParameter("bapLowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter bapUpperBoundParameter;
            if (bapUpperBound.HasValue)
            {
                bapUpperBoundParameter = new ObjectParameter("bapUpperBound", bapUpperBound);
            }
            else
            {
                bapUpperBoundParameter = new ObjectParameter("bapUpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter detLowerBoundParameter;
            if (detLowerBound.HasValue)
            {
                detLowerBoundParameter = new ObjectParameter("detLowerBound", detLowerBound);
            }
            else
            {
                detLowerBoundParameter = new ObjectParameter("detLowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter detUpperBoundParameter;
            if (detUpperBound.HasValue)
            {
                detUpperBoundParameter = new ObjectParameter("detUpperBound", detUpperBound);
            }
            else
            {
                detUpperBoundParameter = new ObjectParameter("detUpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter bCountyParameter;
            if (bCounty != null)
            {
                bCountyParameter = new ObjectParameter("bCounty", bCounty);
            }
            else
            {
                bCountyParameter = new ObjectParameter("bCounty", typeof(global::System.String));
            }
    
            ObjectParameter dNameParameter;
            if (dName != null)
            {
                dNameParameter = new ObjectParameter("dName", dName);
            }
            else
            {
                dNameParameter = new ObjectParameter("dName", typeof(global::System.String));
            }
    
            ObjectParameter spouseCNameParameter;
            if (spouseCName != null)
            {
                spouseCNameParameter = new ObjectParameter("spouseCName", spouseCName);
            }
            else
            {
                spouseCNameParameter = new ObjectParameter("spouseCName", typeof(global::System.String));
            }
    
            ObjectParameter spouseSNameParameter;
            if (spouseSName != null)
            {
                spouseSNameParameter = new ObjectParameter("spouseSName", spouseSName);
            }
            else
            {
                spouseSNameParameter = new ObjectParameter("spouseSName", typeof(global::System.String));
            }
    
            ObjectParameter fatherOccupationParameter;
            if (fatherOccupation != null)
            {
                fatherOccupationParameter = new ObjectParameter("fatherOccupation", fatherOccupation);
            }
            else
            {
                fatherOccupationParameter = new ObjectParameter("fatherOccupation", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Person>("GetPersWithSources", mergeOption, isMaleIdParameter, cNameParameter, sNameParameter, dLocationParameter, dLocation2Parameter, dLocation3Parameter, dLocation4Parameter, dLocation5Parameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, bLocation2Parameter, bLocation3Parameter, bLocation4Parameter, bLocation5Parameter, birthLowerBoundParameter, birthUpperBoundParameter, bapLowerBoundParameter, bapUpperBoundParameter, detLowerBoundParameter, detUpperBoundParameter, bCountyParameter, dNameParameter, spouseCNameParameter, spouseSNameParameter, fatherOccupationParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="personId">No Metadata Documentation available.</param>
        public ObjectResult<PersonSources_Result> GetPersonSources(Nullable<global::System.Guid> personId)
        {
            ObjectParameter personIdParameter;
            if (personId.HasValue)
            {
                personIdParameter = new ObjectParameter("personId", personId);
            }
            else
            {
                personIdParameter = new ObjectParameter("personId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<PersonSources_Result>("GetPersonSources", personIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="marriageId">No Metadata Documentation available.</param>
        public ObjectResult<MarriageSources_Result> GetMarriageSources(Nullable<global::System.Guid> marriageId)
        {
            ObjectParameter marriageIdParameter;
            if (marriageId.HasValue)
            {
                marriageIdParameter = new ObjectParameter("marriageId", marriageId);
            }
            else
            {
                marriageIdParameter = new ObjectParameter("marriageId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<MarriageSources_Result>("GetMarriageSources", marriageIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int GetMarriagesWithWitnesses()
        {
            return base.ExecuteFunction("GetMarriagesWithWitnesses");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GetMarriageByLocation_Result> GetMarriageByLocation()
        {
            return base.ExecuteFunction<GetMarriageByLocation_Result>("GetMarriageByLocation");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="topPersonId">No Metadata Documentation available.</param>
        public ObjectResult<GetDescendants_Result> GetDescendants(Nullable<global::System.Guid> topPersonId)
        {
            ObjectParameter topPersonIdParameter;
            if (topPersonId.HasValue)
            {
                topPersonIdParameter = new ObjectParameter("topPersonId", topPersonId);
            }
            else
            {
                topPersonIdParameter = new ObjectParameter("topPersonId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetDescendants_Result>("GetDescendants", topPersonIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="topPersonId">No Metadata Documentation available.</param>
        public ObjectResult<GetDescendantSpouses_Result> GetDescendantSpouses(Nullable<global::System.Guid> topPersonId)
        {
            ObjectParameter topPersonIdParameter;
            if (topPersonId.HasValue)
            {
                topPersonIdParameter = new ObjectParameter("topPersonId", topPersonId);
            }
            else
            {
                topPersonIdParameter = new ObjectParameter("topPersonId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetDescendantSpouses_Result>("GetDescendantSpouses", topPersonIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="topPersonId">No Metadata Documentation available.</param>
        public ObjectResult<GetAncestors_Result> GetAncestors(Nullable<global::System.Guid> topPersonId)
        {
            ObjectParameter topPersonIdParameter;
            if (topPersonId.HasValue)
            {
                topPersonIdParameter = new ObjectParameter("topPersonId", topPersonId);
            }
            else
            {
                topPersonIdParameter = new ObjectParameter("topPersonId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetAncestors_Result>("GetAncestors", topPersonIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="source">No Metadata Documentation available.</param>
        /// <param name="date">No Metadata Documentation available.</param>
        /// <param name="dateTo">No Metadata Documentation available.</param>
        public ObjectResult<uspGetParishSources_Result> uspGetParishSources(global::System.String source, Nullable<global::System.Int32> date, Nullable<global::System.Int32> dateTo)
        {
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            ObjectParameter dateParameter;
            if (date.HasValue)
            {
                dateParameter = new ObjectParameter("date", date);
            }
            else
            {
                dateParameter = new ObjectParameter("date", typeof(global::System.Int32));
            }
    
            ObjectParameter dateToParameter;
            if (dateTo.HasValue)
            {
                dateToParameter = new ObjectParameter("dateTo", dateTo);
            }
            else
            {
                dateToParameter = new ObjectParameter("dateTo", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<uspGetParishSources_Result>("uspGetParishSources", sourceParameter, dateParameter, dateToParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="sourceId">No Metadata Documentation available.</param>
        public int DeleteTree(Nullable<global::System.Guid> sourceId)
        {
            ObjectParameter sourceIdParameter;
            if (sourceId.HasValue)
            {
                sourceIdParameter = new ObjectParameter("sourceId", sourceId);
            }
            else
            {
                sourceIdParameter = new ObjectParameter("sourceId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("DeleteTree", sourceIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="marriageId">No Metadata Documentation available.</param>
        public ObjectResult<ReorderMarriages_Result> ReorderMarriages(Nullable<global::System.Guid> marriageId)
        {
            ObjectParameter marriageIdParameter;
            if (marriageId.HasValue)
            {
                marriageIdParameter = new ObjectParameter("marriageId", marriageId);
            }
            else
            {
                marriageIdParameter = new ObjectParameter("marriageId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<ReorderMarriages_Result>("ReorderMarriages", marriageIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="witnessName">No Metadata Documentation available.</param>
        /// <param name="sources">No Metadata Documentation available.</param>
        /// <param name="femaleCName">No Metadata Documentation available.</param>
        /// <param name="femaleSName">No Metadata Documentation available.</param>
        /// <param name="maleCName">No Metadata Documentation available.</param>
        /// <param name="maleSName">No Metadata Documentation available.</param>
        /// <param name="marriageCounty">No Metadata Documentation available.</param>
        /// <param name="marriageLocation">No Metadata Documentation available.</param>
        /// <param name="yearIntLower">No Metadata Documentation available.</param>
        /// <param name="yearIntUpper">No Metadata Documentation available.</param>
        public ObjectResult<USP_Marriages_Filtered_Result> USP_Marriages_Filtered(global::System.String witnessName, global::System.String sources, global::System.String femaleCName, global::System.String femaleSName, global::System.String maleCName, global::System.String maleSName, global::System.String marriageCounty, global::System.String marriageLocation, Nullable<global::System.Int32> yearIntLower, Nullable<global::System.Int32> yearIntUpper)
        {
            ObjectParameter witnessNameParameter;
            if (witnessName != null)
            {
                witnessNameParameter = new ObjectParameter("witnessName", witnessName);
            }
            else
            {
                witnessNameParameter = new ObjectParameter("witnessName", typeof(global::System.String));
            }
    
            ObjectParameter sourcesParameter;
            if (sources != null)
            {
                sourcesParameter = new ObjectParameter("sources", sources);
            }
            else
            {
                sourcesParameter = new ObjectParameter("sources", typeof(global::System.String));
            }
    
            ObjectParameter femaleCNameParameter;
            if (femaleCName != null)
            {
                femaleCNameParameter = new ObjectParameter("femaleCName", femaleCName);
            }
            else
            {
                femaleCNameParameter = new ObjectParameter("femaleCName", typeof(global::System.String));
            }
    
            ObjectParameter femaleSNameParameter;
            if (femaleSName != null)
            {
                femaleSNameParameter = new ObjectParameter("femaleSName", femaleSName);
            }
            else
            {
                femaleSNameParameter = new ObjectParameter("femaleSName", typeof(global::System.String));
            }
    
            ObjectParameter maleCNameParameter;
            if (maleCName != null)
            {
                maleCNameParameter = new ObjectParameter("maleCName", maleCName);
            }
            else
            {
                maleCNameParameter = new ObjectParameter("maleCName", typeof(global::System.String));
            }
    
            ObjectParameter maleSNameParameter;
            if (maleSName != null)
            {
                maleSNameParameter = new ObjectParameter("maleSName", maleSName);
            }
            else
            {
                maleSNameParameter = new ObjectParameter("maleSName", typeof(global::System.String));
            }
    
            ObjectParameter marriageCountyParameter;
            if (marriageCounty != null)
            {
                marriageCountyParameter = new ObjectParameter("marriageCounty", marriageCounty);
            }
            else
            {
                marriageCountyParameter = new ObjectParameter("marriageCounty", typeof(global::System.String));
            }
    
            ObjectParameter marriageLocationParameter;
            if (marriageLocation != null)
            {
                marriageLocationParameter = new ObjectParameter("marriageLocation", marriageLocation);
            }
            else
            {
                marriageLocationParameter = new ObjectParameter("marriageLocation", typeof(global::System.String));
            }
    
            ObjectParameter yearIntLowerParameter;
            if (yearIntLower.HasValue)
            {
                yearIntLowerParameter = new ObjectParameter("yearIntLower", yearIntLower);
            }
            else
            {
                yearIntLowerParameter = new ObjectParameter("yearIntLower", typeof(global::System.Int32));
            }
    
            ObjectParameter yearIntUpperParameter;
            if (yearIntUpper.HasValue)
            {
                yearIntUpperParameter = new ObjectParameter("yearIntUpper", yearIntUpper);
            }
            else
            {
                yearIntUpperParameter = new ObjectParameter("yearIntUpper", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<USP_Marriages_Filtered_Result>("USP_Marriages_Filtered", witnessNameParameter, sourcesParameter, femaleCNameParameter, femaleSNameParameter, maleCNameParameter, maleSNameParameter, marriageCountyParameter, marriageLocationParameter, yearIntLowerParameter, yearIntUpperParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="cName">No Metadata Documentation available.</param>
        /// <param name="sName">No Metadata Documentation available.</param>
        /// <param name="fatherCName">No Metadata Documentation available.</param>
        /// <param name="fatherSName">No Metadata Documentation available.</param>
        /// <param name="motherCName">No Metadata Documentation available.</param>
        /// <param name="motherSName">No Metadata Documentation available.</param>
        /// <param name="source">No Metadata Documentation available.</param>
        /// <param name="bLocation">No Metadata Documentation available.</param>
        /// <param name="lowerBound">No Metadata Documentation available.</param>
        /// <param name="upperBound">No Metadata Documentation available.</param>
        /// <param name="county">No Metadata Documentation available.</param>
        /// <param name="spouse">No Metadata Documentation available.</param>
        public ObjectResult<USP_Persons_Filtered_Result> USP_Persons_Filtered(global::System.String cName, global::System.String sName, global::System.String fatherCName, global::System.String fatherSName, global::System.String motherCName, global::System.String motherSName, global::System.String source, global::System.String bLocation, Nullable<global::System.Int32> lowerBound, Nullable<global::System.Int32> upperBound, global::System.String county, global::System.String spouse)
        {
            ObjectParameter cNameParameter;
            if (cName != null)
            {
                cNameParameter = new ObjectParameter("cName", cName);
            }
            else
            {
                cNameParameter = new ObjectParameter("cName", typeof(global::System.String));
            }
    
            ObjectParameter sNameParameter;
            if (sName != null)
            {
                sNameParameter = new ObjectParameter("sName", sName);
            }
            else
            {
                sNameParameter = new ObjectParameter("sName", typeof(global::System.String));
            }
    
            ObjectParameter fatherCNameParameter;
            if (fatherCName != null)
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", fatherCName);
            }
            else
            {
                fatherCNameParameter = new ObjectParameter("fatherCName", typeof(global::System.String));
            }
    
            ObjectParameter fatherSNameParameter;
            if (fatherSName != null)
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", fatherSName);
            }
            else
            {
                fatherSNameParameter = new ObjectParameter("fatherSName", typeof(global::System.String));
            }
    
            ObjectParameter motherCNameParameter;
            if (motherCName != null)
            {
                motherCNameParameter = new ObjectParameter("motherCName", motherCName);
            }
            else
            {
                motherCNameParameter = new ObjectParameter("motherCName", typeof(global::System.String));
            }
    
            ObjectParameter motherSNameParameter;
            if (motherSName != null)
            {
                motherSNameParameter = new ObjectParameter("motherSName", motherSName);
            }
            else
            {
                motherSNameParameter = new ObjectParameter("motherSName", typeof(global::System.String));
            }
    
            ObjectParameter sourceParameter;
            if (source != null)
            {
                sourceParameter = new ObjectParameter("source", source);
            }
            else
            {
                sourceParameter = new ObjectParameter("source", typeof(global::System.String));
            }
    
            ObjectParameter bLocationParameter;
            if (bLocation != null)
            {
                bLocationParameter = new ObjectParameter("bLocation", bLocation);
            }
            else
            {
                bLocationParameter = new ObjectParameter("bLocation", typeof(global::System.String));
            }
    
            ObjectParameter lowerBoundParameter;
            if (lowerBound.HasValue)
            {
                lowerBoundParameter = new ObjectParameter("LowerBound", lowerBound);
            }
            else
            {
                lowerBoundParameter = new ObjectParameter("LowerBound", typeof(global::System.Int32));
            }
    
            ObjectParameter upperBoundParameter;
            if (upperBound.HasValue)
            {
                upperBoundParameter = new ObjectParameter("UpperBound", upperBound);
            }
            else
            {
                upperBoundParameter = new ObjectParameter("UpperBound", typeof(global::System.Int32));
            }
    
            ObjectParameter countyParameter;
            if (county != null)
            {
                countyParameter = new ObjectParameter("county", county);
            }
            else
            {
                countyParameter = new ObjectParameter("county", typeof(global::System.String));
            }
    
            ObjectParameter spouseParameter;
            if (spouse != null)
            {
                spouseParameter = new ObjectParameter("spouse", spouse);
            }
            else
            {
                spouseParameter = new ObjectParameter("spouse", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<USP_Persons_Filtered_Result>("USP_Persons_Filtered", cNameParameter, sNameParameter, fatherCNameParameter, fatherSNameParameter, motherCNameParameter, motherSNameParameter, sourceParameter, bLocationParameter, lowerBoundParameter, upperBoundParameter, countyParameter, spouseParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="CountyDictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountyDictionary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountyDictionary object.
        /// </summary>
        /// <param name="dictId">Initial value of the dictId property.</param>
        public static CountyDictionary CreateCountyDictionary(global::System.Int32 dictId)
        {
            CountyDictionary countyDictionary = new CountyDictionary();
            countyDictionary.dictId = dictId;
            return countyDictionary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 dictId
        {
            get
            {
                return _dictId;
            }
            set
            {
                if (_dictId != value)
                {
                    OndictIdChanging(value);
                    ReportPropertyChanging("dictId");
                    _dictId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("dictId");
                    OndictIdChanged();
                }
            }
        }
        private global::System.Int32 _dictId;
        partial void OndictIdChanging(global::System.Int32 value);
        partial void OndictIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dictPlace
        {
            get
            {
                return _dictPlace;
            }
            set
            {
                OndictPlaceChanging(value);
                ReportPropertyChanging("dictPlace");
                _dictPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dictPlace");
                OndictPlaceChanged();
            }
        }
        private global::System.String _dictPlace;
        partial void OndictPlaceChanging(global::System.String value);
        partial void OndictPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dictCounty
        {
            get
            {
                return _dictCounty;
            }
            set
            {
                OndictCountyChanging(value);
                ReportPropertyChanging("dictCounty");
                _dictCounty = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dictCounty");
                OndictCountyChanged();
            }
        }
        private global::System.String _dictCounty;
        partial void OndictCountyChanging(global::System.String value);
        partial void OndictCountyChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="filetId">Initial value of the FiletId property.</param>
        public static File CreateFile(global::System.Guid filetId)
        {
            File file = new File();
            file.FiletId = filetId;
            return file;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FiletId
        {
            get
            {
                return _FiletId;
            }
            set
            {
                if (_FiletId != value)
                {
                    OnFiletIdChanging(value);
                    ReportPropertyChanging("FiletId");
                    _FiletId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FiletId");
                    OnFiletIdChanged();
                }
            }
        }
        private global::System.Guid _FiletId;
        partial void OnFiletIdChanging(global::System.Guid value);
        partial void OnFiletIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileDescription
        {
            get
            {
                return _FileDescription;
            }
            set
            {
                OnFileDescriptionChanging(value);
                ReportPropertyChanging("FileDescription");
                _FileDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileDescription");
                OnFileDescriptionChanged();
            }
        }
        private global::System.String _FileDescription;
        partial void OnFileDescriptionChanging(global::System.String value);
        partial void OnFileDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileLocation
        {
            get
            {
                return _FileLocation;
            }
            set
            {
                OnFileLocationChanging(value);
                ReportPropertyChanging("FileLocation");
                _FileLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileLocation");
                OnFileLocationChanged();
            }
        }
        private global::System.String _FileLocation;
        partial void OnFileLocationChanging(global::System.String value);
        partial void OnFileLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileContent
        {
            get
            {
                return _FileContent;
            }
            set
            {
                OnFileContentChanging(value);
                ReportPropertyChanging("FileContent");
                _FileContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileContent");
                OnFileContentChanged();
            }
        }
        private global::System.String _FileContent;
        partial void OnFileContentChanging(global::System.String value);
        partial void OnFileContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FileEntryAdded
        {
            get
            {
                return _FileEntryAdded;
            }
            set
            {
                OnFileEntryAddedChanging(value);
                ReportPropertyChanging("FileEntryAdded");
                _FileEntryAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileEntryAdded");
                OnFileEntryAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _FileEntryAdded;
        partial void OnFileEntryAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnFileEntryAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FileDate
        {
            get
            {
                return _FileDate;
            }
            set
            {
                OnFileDateChanging(value);
                ReportPropertyChanging("FileDate");
                _FileDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileDate");
                OnFileDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FileDate;
        partial void OnFileDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFileDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FilerUserAdded
        {
            get
            {
                return _FilerUserAdded;
            }
            set
            {
                OnFilerUserAddedChanging(value);
                ReportPropertyChanging("FilerUserAdded");
                _FilerUserAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilerUserAdded");
                OnFilerUserAddedChanged();
            }
        }
        private Nullable<global::System.Int32> _FilerUserAdded;
        partial void OnFilerUserAddedChanging(Nullable<global::System.Int32> value);
        partial void OnFilerUserAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileThumbLocation
        {
            get
            {
                return _FileThumbLocation;
            }
            set
            {
                OnFileThumbLocationChanging(value);
                ReportPropertyChanging("FileThumbLocation");
                _FileThumbLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileThumbLocation");
                OnFileThumbLocationChanged();
            }
        }
        private global::System.String _FileThumbLocation;
        partial void OnFileThumbLocationChanging(global::System.String value);
        partial void OnFileThumbLocationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_Files", "SourceMapping")]
        public EntityCollection<SourceMapping> SourceMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_Files", "SourceMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_Files", "SourceMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="LocationDictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LocationDictionary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LocationDictionary object.
        /// </summary>
        /// <param name="locationId">Initial value of the LocationId property.</param>
        public static LocationDictionary CreateLocationDictionary(global::System.Int32 locationId)
        {
            LocationDictionary locationDictionary = new LocationDictionary();
            locationDictionary.LocationId = locationId;
            return locationDictionary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocationId
        {
            get
            {
                return _LocationId;
            }
            set
            {
                if (_LocationId != value)
                {
                    OnLocationIdChanging(value);
                    ReportPropertyChanging("LocationId");
                    _LocationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocationId");
                    OnLocationIdChanged();
                }
            }
        }
        private global::System.Int32 _LocationId;
        partial void OnLocationIdChanging(global::System.Int32 value);
        partial void OnLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationCounty
        {
            get
            {
                return _LocationCounty;
            }
            set
            {
                OnLocationCountyChanging(value);
                ReportPropertyChanging("LocationCounty");
                _LocationCounty = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationCounty");
                OnLocationCountyChanged();
            }
        }
        private global::System.String _LocationCounty;
        partial void OnLocationCountyChanging(global::System.String value);
        partial void OnLocationCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParishId
        {
            get
            {
                return _ParishId;
            }
            set
            {
                OnParishIdChanging(value);
                ReportPropertyChanging("ParishId");
                _ParishId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishId");
                OnParishIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParishId;
        partial void OnParishIdChanging(Nullable<global::System.Guid> value);
        partial void OnParishIdChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="Marriage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Marriage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Marriage object.
        /// </summary>
        /// <param name="marriage_Id">Initial value of the Marriage_Id property.</param>
        /// <param name="yearIntVal">Initial value of the YearIntVal property.</param>
        public static Marriage CreateMarriage(global::System.Guid marriage_Id, global::System.Int32 yearIntVal)
        {
            Marriage marriage = new Marriage();
            marriage.Marriage_Id = marriage_Id;
            marriage.YearIntVal = yearIntVal;
            return marriage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Marriage_Id
        {
            get
            {
                return _Marriage_Id;
            }
            set
            {
                if (_Marriage_Id != value)
                {
                    OnMarriage_IdChanging(value);
                    ReportPropertyChanging("Marriage_Id");
                    _Marriage_Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Marriage_Id");
                    OnMarriage_IdChanged();
                }
            }
        }
        private global::System.Guid _Marriage_Id;
        partial void OnMarriage_IdChanging(global::System.Guid value);
        partial void OnMarriage_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleCName
        {
            get
            {
                return _MaleCName;
            }
            set
            {
                OnMaleCNameChanging(value);
                ReportPropertyChanging("MaleCName");
                _MaleCName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleCName");
                OnMaleCNameChanged();
            }
        }
        private global::System.String _MaleCName;
        partial void OnMaleCNameChanging(global::System.String value);
        partial void OnMaleCNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleSName
        {
            get
            {
                return _MaleSName;
            }
            set
            {
                OnMaleSNameChanging(value);
                ReportPropertyChanging("MaleSName");
                _MaleSName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleSName");
                OnMaleSNameChanged();
            }
        }
        private global::System.String _MaleSName;
        partial void OnMaleSNameChanging(global::System.String value);
        partial void OnMaleSNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleLocation
        {
            get
            {
                return _MaleLocation;
            }
            set
            {
                OnMaleLocationChanging(value);
                ReportPropertyChanging("MaleLocation");
                _MaleLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleLocation");
                OnMaleLocationChanged();
            }
        }
        private global::System.String _MaleLocation;
        partial void OnMaleLocationChanging(global::System.String value);
        partial void OnMaleLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleInfo
        {
            get
            {
                return _MaleInfo;
            }
            set
            {
                OnMaleInfoChanging(value);
                ReportPropertyChanging("MaleInfo");
                _MaleInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleInfo");
                OnMaleInfoChanged();
            }
        }
        private global::System.String _MaleInfo;
        partial void OnMaleInfoChanging(global::System.String value);
        partial void OnMaleInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleCName
        {
            get
            {
                return _FemaleCName;
            }
            set
            {
                OnFemaleCNameChanging(value);
                ReportPropertyChanging("FemaleCName");
                _FemaleCName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleCName");
                OnFemaleCNameChanged();
            }
        }
        private global::System.String _FemaleCName;
        partial void OnFemaleCNameChanging(global::System.String value);
        partial void OnFemaleCNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleSName
        {
            get
            {
                return _FemaleSName;
            }
            set
            {
                OnFemaleSNameChanging(value);
                ReportPropertyChanging("FemaleSName");
                _FemaleSName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleSName");
                OnFemaleSNameChanged();
            }
        }
        private global::System.String _FemaleSName;
        partial void OnFemaleSNameChanging(global::System.String value);
        partial void OnFemaleSNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleLocation
        {
            get
            {
                return _FemaleLocation;
            }
            set
            {
                OnFemaleLocationChanging(value);
                ReportPropertyChanging("FemaleLocation");
                _FemaleLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleLocation");
                OnFemaleLocationChanged();
            }
        }
        private global::System.String _FemaleLocation;
        partial void OnFemaleLocationChanging(global::System.String value);
        partial void OnFemaleLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleInfo
        {
            get
            {
                return _FemaleInfo;
            }
            set
            {
                OnFemaleInfoChanging(value);
                ReportPropertyChanging("FemaleInfo");
                _FemaleInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleInfo");
                OnFemaleInfoChanged();
            }
        }
        private global::System.String _FemaleInfo;
        partial void OnFemaleInfoChanging(global::System.String value);
        partial void OnFemaleInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarriageLocation
        {
            get
            {
                return _MarriageLocation;
            }
            set
            {
                OnMarriageLocationChanging(value);
                ReportPropertyChanging("MarriageLocation");
                _MarriageLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarriageLocation");
                OnMarriageLocationChanged();
            }
        }
        private global::System.String _MarriageLocation;
        partial void OnMarriageLocationChanging(global::System.String value);
        partial void OnMarriageLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearIntVal
        {
            get
            {
                return _YearIntVal;
            }
            set
            {
                OnYearIntValChanging(value);
                ReportPropertyChanging("YearIntVal");
                _YearIntVal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearIntVal");
                OnYearIntValChanged();
            }
        }
        private global::System.Int32 _YearIntVal;
        partial void OnYearIntValChanging(global::System.Int32 value);
        partial void OnYearIntValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarriageCounty
        {
            get
            {
                return _MarriageCounty;
            }
            set
            {
                OnMarriageCountyChanging(value);
                ReportPropertyChanging("MarriageCounty");
                _MarriageCounty = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarriageCounty");
                OnMarriageCountyChanged();
            }
        }
        private global::System.String _MarriageCounty;
        partial void OnMarriageCountyChanging(global::System.String value);
        partial void OnMarriageCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness1
        {
            get
            {
                return _Witness1;
            }
            set
            {
                OnWitness1Changing(value);
                ReportPropertyChanging("Witness1");
                _Witness1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness1");
                OnWitness1Changed();
            }
        }
        private global::System.String _Witness1;
        partial void OnWitness1Changing(global::System.String value);
        partial void OnWitness1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness2
        {
            get
            {
                return _Witness2;
            }
            set
            {
                OnWitness2Changing(value);
                ReportPropertyChanging("Witness2");
                _Witness2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness2");
                OnWitness2Changed();
            }
        }
        private global::System.String _Witness2;
        partial void OnWitness2Changing(global::System.String value);
        partial void OnWitness2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness3
        {
            get
            {
                return _Witness3;
            }
            set
            {
                OnWitness3Changing(value);
                ReportPropertyChanging("Witness3");
                _Witness3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness3");
                OnWitness3Changed();
            }
        }
        private global::System.String _Witness3;
        partial void OnWitness3Changing(global::System.String value);
        partial void OnWitness3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness4
        {
            get
            {
                return _Witness4;
            }
            set
            {
                OnWitness4Changing(value);
                ReportPropertyChanging("Witness4");
                _Witness4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness4");
                OnWitness4Changed();
            }
        }
        private global::System.String _Witness4;
        partial void OnWitness4Changing(global::System.String value);
        partial void OnWitness4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateLastEdit
        {
            get
            {
                return _DateLastEdit;
            }
            set
            {
                OnDateLastEditChanging(value);
                ReportPropertyChanging("DateLastEdit");
                _DateLastEdit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateLastEdit");
                OnDateLastEditChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateLastEdit;
        partial void OnDateLastEditChanging(Nullable<global::System.DateTime> value);
        partial void OnDateLastEditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrigMaleSurname
        {
            get
            {
                return _OrigMaleSurname;
            }
            set
            {
                OnOrigMaleSurnameChanging(value);
                ReportPropertyChanging("OrigMaleSurname");
                _OrigMaleSurname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrigMaleSurname");
                OnOrigMaleSurnameChanged();
            }
        }
        private global::System.String _OrigMaleSurname;
        partial void OnOrigMaleSurnameChanging(global::System.String value);
        partial void OnOrigMaleSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrigFemaleSurname
        {
            get
            {
                return _OrigFemaleSurname;
            }
            set
            {
                OnOrigFemaleSurnameChanging(value);
                ReportPropertyChanging("OrigFemaleSurname");
                _OrigFemaleSurname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrigFemaleSurname");
                OnOrigFemaleSurnameChanged();
            }
        }
        private global::System.String _OrigFemaleSurname;
        partial void OnOrigFemaleSurnameChanging(global::System.String value);
        partial void OnOrigFemaleSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleOccupation
        {
            get
            {
                return _MaleOccupation;
            }
            set
            {
                OnMaleOccupationChanging(value);
                ReportPropertyChanging("MaleOccupation");
                _MaleOccupation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleOccupation");
                OnMaleOccupationChanged();
            }
        }
        private global::System.String _MaleOccupation;
        partial void OnMaleOccupationChanging(global::System.String value);
        partial void OnMaleOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleOccupation
        {
            get
            {
                return _FemaleOccupation;
            }
            set
            {
                OnFemaleOccupationChanging(value);
                ReportPropertyChanging("FemaleOccupation");
                _FemaleOccupation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleOccupation");
                OnFemaleOccupationChanged();
            }
        }
        private global::System.String _FemaleOccupation;
        partial void OnFemaleOccupationChanging(global::System.String value);
        partial void OnFemaleOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FemaleIsKnownWidow
        {
            get
            {
                return _FemaleIsKnownWidow;
            }
            set
            {
                OnFemaleIsKnownWidowChanging(value);
                ReportPropertyChanging("FemaleIsKnownWidow");
                _FemaleIsKnownWidow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FemaleIsKnownWidow");
                OnFemaleIsKnownWidowChanged();
            }
        }
        private Nullable<global::System.Boolean> _FemaleIsKnownWidow;
        partial void OnFemaleIsKnownWidowChanging(Nullable<global::System.Boolean> value);
        partial void OnFemaleIsKnownWidowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MaleIsKnownWidower
        {
            get
            {
                return _MaleIsKnownWidower;
            }
            set
            {
                OnMaleIsKnownWidowerChanging(value);
                ReportPropertyChanging("MaleIsKnownWidower");
                _MaleIsKnownWidower = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaleIsKnownWidower");
                OnMaleIsKnownWidowerChanged();
            }
        }
        private Nullable<global::System.Boolean> _MaleIsKnownWidower;
        partial void OnMaleIsKnownWidowerChanging(Nullable<global::System.Boolean> value);
        partial void OnMaleIsKnownWidowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBanns
        {
            get
            {
                return _IsBanns;
            }
            set
            {
                OnIsBannsChanging(value);
                ReportPropertyChanging("IsBanns");
                _IsBanns = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBanns");
                OnIsBannsChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBanns;
        partial void OnIsBannsChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBannsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLicence
        {
            get
            {
                return _IsLicence;
            }
            set
            {
                OnIsLicenceChanging(value);
                ReportPropertyChanging("IsLicence");
                _IsLicence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLicence");
                OnIsLicenceChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLicence;
        partial void OnIsLicenceChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLicenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MarriageLocationId
        {
            get
            {
                return _MarriageLocationId;
            }
            set
            {
                OnMarriageLocationIdChanging(value);
                ReportPropertyChanging("MarriageLocationId");
                _MarriageLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarriageLocationId");
                OnMarriageLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _MarriageLocationId;
        partial void OnMarriageLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnMarriageLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MaleLocationId
        {
            get
            {
                return _MaleLocationId;
            }
            set
            {
                OnMaleLocationIdChanging(value);
                ReportPropertyChanging("MaleLocationId");
                _MaleLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaleLocationId");
                OnMaleLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _MaleLocationId;
        partial void OnMaleLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnMaleLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FemaleLocationId
        {
            get
            {
                return _FemaleLocationId;
            }
            set
            {
                OnFemaleLocationIdChanging(value);
                ReportPropertyChanging("FemaleLocationId");
                _FemaleLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FemaleLocationId");
                OnFemaleLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _FemaleLocationId;
        partial void OnFemaleLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnFemaleLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaleBirthYear
        {
            get
            {
                return _MaleBirthYear;
            }
            set
            {
                OnMaleBirthYearChanging(value);
                ReportPropertyChanging("MaleBirthYear");
                _MaleBirthYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaleBirthYear");
                OnMaleBirthYearChanged();
            }
        }
        private Nullable<global::System.Int32> _MaleBirthYear;
        partial void OnMaleBirthYearChanging(Nullable<global::System.Int32> value);
        partial void OnMaleBirthYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FemaleBirthYear
        {
            get
            {
                return _FemaleBirthYear;
            }
            set
            {
                OnFemaleBirthYearChanging(value);
                ReportPropertyChanging("FemaleBirthYear");
                _FemaleBirthYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FemaleBirthYear");
                OnFemaleBirthYearChanged();
            }
        }
        private Nullable<global::System.Int32> _FemaleBirthYear;
        partial void OnFemaleBirthYearChanging(Nullable<global::System.Int32> value);
        partial void OnFemaleBirthYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UniqueRef
        {
            get
            {
                return _UniqueRef;
            }
            set
            {
                OnUniqueRefChanging(value);
                ReportPropertyChanging("UniqueRef");
                _UniqueRef = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueRef");
                OnUniqueRefChanged();
            }
        }
        private Nullable<global::System.Guid> _UniqueRef;
        partial void OnUniqueRefChanging(Nullable<global::System.Guid> value);
        partial void OnUniqueRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalEvents
        {
            get
            {
                return _TotalEvents;
            }
            set
            {
                OnTotalEventsChanging(value);
                ReportPropertyChanging("TotalEvents");
                _TotalEvents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalEvents");
                OnTotalEventsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalEvents;
        partial void OnTotalEventsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalEventsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventPriority
        {
            get
            {
                return _EventPriority;
            }
            set
            {
                OnEventPriorityChanging(value);
                ReportPropertyChanging("EventPriority");
                _EventPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventPriority");
                OnEventPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _EventPriority;
        partial void OnEventPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnEventPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MaleId
        {
            get
            {
                return _MaleId;
            }
            set
            {
                OnMaleIdChanging(value);
                ReportPropertyChanging("MaleId");
                _MaleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaleId");
                OnMaleIdChanged();
            }
        }
        private Nullable<global::System.Guid> _MaleId;
        partial void OnMaleIdChanging(Nullable<global::System.Guid> value);
        partial void OnMaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FemaleId
        {
            get
            {
                return _FemaleId;
            }
            set
            {
                OnFemaleIdChanging(value);
                ReportPropertyChanging("FemaleId");
                _FemaleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FemaleId");
                OnFemaleIdChanged();
            }
        }
        private Nullable<global::System.Guid> _FemaleId;
        partial void OnFemaleIdChanging(Nullable<global::System.Guid> value);
        partial void OnFemaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsComposite
        {
            get
            {
                return _IsComposite;
            }
            set
            {
                OnIsCompositeChanging(value);
                ReportPropertyChanging("IsComposite");
                _IsComposite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsComposite");
                OnIsCompositeChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsComposite;
        partial void OnIsCompositeChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCompositeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_Marriages", "SourceMapping")]
        public EntityCollection<SourceMapping> SourceMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_Marriages", "SourceMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_Marriages", "SourceMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageRelations_Marriages", "MarriageRelation")]
        public EntityCollection<MarriageRelation> MarriageRelations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarriageRelation>("GeneralModel.FK_MarriageRelations_Marriages", "MarriageRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarriageRelation>("GeneralModel.FK_MarriageRelations_Marriages", "MarriageRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageRelations_Marriages1", "MarriageRelation")]
        public EntityCollection<MarriageRelation> MarriageRelations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarriageRelation>("GeneralModel.FK_MarriageRelations_Marriages1", "MarriageRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarriageRelation>("GeneralModel.FK_MarriageRelations_Marriages1", "MarriageRelation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageMapWitness_Marriages", "MarriageMapWitness")]
        public EntityCollection<MarriageMapWitness> MarriageMapWitnesses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarriageMapWitness>("GeneralModel.FK_MarriageMapWitness_Marriages", "MarriageMapWitness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarriageMapWitness>("GeneralModel.FK_MarriageMapWitness_Marriages", "MarriageMapWitness", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="MarriageMapWitness")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarriageMapWitness : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarriageMapWitness object.
        /// </summary>
        /// <param name="marriageMapWitnessIndex">Initial value of the MarriageMapWitnessIndex property.</param>
        public static MarriageMapWitness CreateMarriageMapWitness(global::System.Int32 marriageMapWitnessIndex)
        {
            MarriageMapWitness marriageMapWitness = new MarriageMapWitness();
            marriageMapWitness.MarriageMapWitnessIndex = marriageMapWitnessIndex;
            return marriageMapWitness;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarriageMapWitnessIndex
        {
            get
            {
                return _MarriageMapWitnessIndex;
            }
            set
            {
                if (_MarriageMapWitnessIndex != value)
                {
                    OnMarriageMapWitnessIndexChanging(value);
                    ReportPropertyChanging("MarriageMapWitnessIndex");
                    _MarriageMapWitnessIndex = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MarriageMapWitnessIndex");
                    OnMarriageMapWitnessIndexChanged();
                }
            }
        }
        private global::System.Int32 _MarriageMapWitnessIndex;
        partial void OnMarriageMapWitnessIndexChanging(global::System.Int32 value);
        partial void OnMarriageMapWitnessIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WitnessNote
        {
            get
            {
                return _WitnessNote;
            }
            set
            {
                OnWitnessNoteChanging(value);
                ReportPropertyChanging("WitnessNote");
                _WitnessNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WitnessNote");
                OnWitnessNoteChanged();
            }
        }
        private global::System.String _WitnessNote;
        partial void OnWitnessNoteChanging(global::System.String value);
        partial void OnWitnessNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageMapWitness_Marriages", "Marriage")]
        public Marriage Marriage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageMapWitness_Marriages", "Marriage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageMapWitness_Marriages", "Marriage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marriage> MarriageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageMapWitness_Marriages", "Marriage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marriage>("GeneralModel.FK_MarriageMapWitness_Marriages", "Marriage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageMapWitness_Persons", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_MarriageMapWitness_Persons", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_MarriageMapWitness_Persons", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_MarriageMapWitness_Persons", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("GeneralModel.FK_MarriageMapWitness_Persons", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="MarriageRelation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MarriageRelation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MarriageRelation object.
        /// </summary>
        /// <param name="marriageRelationId">Initial value of the MarriageRelationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static MarriageRelation CreateMarriageRelation(global::System.Int32 marriageRelationId, global::System.Int32 userId, global::System.DateTime dateAdded)
        {
            MarriageRelation marriageRelation = new MarriageRelation();
            marriageRelation.MarriageRelationId = marriageRelationId;
            marriageRelation.UserId = userId;
            marriageRelation.DateAdded = dateAdded;
            return marriageRelation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarriageRelationId
        {
            get
            {
                return _MarriageRelationId;
            }
            set
            {
                if (_MarriageRelationId != value)
                {
                    OnMarriageRelationIdChanging(value);
                    ReportPropertyChanging("MarriageRelationId");
                    _MarriageRelationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MarriageRelationId");
                    OnMarriageRelationIdChanged();
                }
            }
        }
        private global::System.Int32 _MarriageRelationId;
        partial void OnMarriageRelationIdChanging(global::System.Int32 value);
        partial void OnMarriageRelationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarriageRelationNotes
        {
            get
            {
                return _MarriageRelationNotes;
            }
            set
            {
                OnMarriageRelationNotesChanging(value);
                ReportPropertyChanging("MarriageRelationNotes");
                _MarriageRelationNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarriageRelationNotes");
                OnMarriageRelationNotesChanged();
            }
        }
        private global::System.String _MarriageRelationNotes;
        partial void OnMarriageRelationNotesChanging(global::System.String value);
        partial void OnMarriageRelationNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageRelations_Marriages", "Marriage")]
        public Marriage MarriageA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageRelations_Marriages", "Marriage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageRelations_Marriages", "Marriage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marriage> MarriageAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageRelations_Marriages", "Marriage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marriage>("GeneralModel.FK_MarriageRelations_Marriages", "Marriage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageRelations_Marriages1", "Marriage")]
        public Marriage MarriageB
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageRelations_Marriages1", "Marriage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageRelations_Marriages1", "Marriage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marriage> MarriageBReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_MarriageRelations_Marriages1", "Marriage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marriage>("GeneralModel.FK_MarriageRelations_Marriages1", "Marriage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageRelations_RelationTypes", "RelationType")]
        public RelationType RelationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("GeneralModel.FK_MarriageRelations_RelationTypes", "RelationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("GeneralModel.FK_MarriageRelations_RelationTypes", "RelationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelationType> RelationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("GeneralModel.FK_MarriageRelations_RelationTypes", "RelationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelationType>("GeneralModel.FK_MarriageRelations_RelationTypes", "RelationType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="MissingRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MissingRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MissingRecord object.
        /// </summary>
        /// <param name="missingRecordId">Initial value of the MissingRecordId property.</param>
        public static MissingRecord CreateMissingRecord(global::System.Int32 missingRecordId)
        {
            MissingRecord missingRecord = new MissingRecord();
            missingRecord.MissingRecordId = missingRecordId;
            return missingRecord;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MissingRecordId
        {
            get
            {
                return _MissingRecordId;
            }
            set
            {
                if (_MissingRecordId != value)
                {
                    OnMissingRecordIdChanging(value);
                    ReportPropertyChanging("MissingRecordId");
                    _MissingRecordId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MissingRecordId");
                    OnMissingRecordIdChanged();
                }
            }
        }
        private global::System.Int32 _MissingRecordId;
        partial void OnMissingRecordIdChanging(global::System.Int32 value);
        partial void OnMissingRecordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataTypeId
        {
            get
            {
                return _DataTypeId;
            }
            set
            {
                OnDataTypeIdChanging(value);
                ReportPropertyChanging("DataTypeId");
                _DataTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataTypeId");
                OnDataTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DataTypeId;
        partial void OnDataTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnDataTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordType
        {
            get
            {
                return _RecordType;
            }
            set
            {
                OnRecordTypeChanging(value);
                ReportPropertyChanging("RecordType");
                _RecordType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordType");
                OnRecordTypeChanged();
            }
        }
        private global::System.String _RecordType;
        partial void OnRecordTypeChanging(global::System.String value);
        partial void OnRecordTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> OriginalRegister
        {
            get
            {
                return _OriginalRegister;
            }
            set
            {
                OnOriginalRegisterChanging(value);
                ReportPropertyChanging("OriginalRegister");
                _OriginalRegister = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalRegister");
                OnOriginalRegisterChanged();
            }
        }
        private Nullable<global::System.Boolean> _OriginalRegister;
        partial void OnOriginalRegisterChanging(Nullable<global::System.Boolean> value);
        partial void OnOriginalRegisterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearEnd
        {
            get
            {
                return _YearEnd;
            }
            set
            {
                OnYearEndChanging(value);
                ReportPropertyChanging("YearEnd");
                _YearEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearEnd");
                OnYearEndChanged();
            }
        }
        private Nullable<global::System.Int32> _YearEnd;
        partial void OnYearEndChanging(Nullable<global::System.Int32> value);
        partial void OnYearEndChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MissingRecords_Parishs", "Parish")]
        public Parish Parish
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_MissingRecords_Parishs", "Parish").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_MissingRecords_Parishs", "Parish").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parish> ParishReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_MissingRecords_Parishs", "Parish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parish>("GeneralModel.FK_MissingRecords_Parishs", "Parish", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="Parish")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Parish : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Parish object.
        /// </summary>
        /// <param name="parishId">Initial value of the ParishId property.</param>
        public static Parish CreateParish(global::System.Guid parishId)
        {
            Parish parish = new Parish();
            parish.ParishId = parishId;
            return parish;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParishId
        {
            get
            {
                return _ParishId;
            }
            set
            {
                if (_ParishId != value)
                {
                    OnParishIdChanging(value);
                    ReportPropertyChanging("ParishId");
                    _ParishId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParishId");
                    OnParishIdChanged();
                }
            }
        }
        private global::System.Guid _ParishId;
        partial void OnParishIdChanging(global::System.Guid value);
        partial void OnParishIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParishName
        {
            get
            {
                return _ParishName;
            }
            set
            {
                OnParishNameChanging(value);
                ReportPropertyChanging("ParishName");
                _ParishName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParishName");
                OnParishNameChanged();
            }
        }
        private global::System.String _ParishName;
        partial void OnParishNameChanging(global::System.String value);
        partial void OnParishNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParishRegistersDeposited
        {
            get
            {
                return _ParishRegistersDeposited;
            }
            set
            {
                OnParishRegistersDepositedChanging(value);
                ReportPropertyChanging("ParishRegistersDeposited");
                _ParishRegistersDeposited = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParishRegistersDeposited");
                OnParishRegistersDepositedChanged();
            }
        }
        private global::System.String _ParishRegistersDeposited;
        partial void OnParishRegistersDepositedChanging(global::System.String value);
        partial void OnParishRegistersDepositedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParishNotes
        {
            get
            {
                return _ParishNotes;
            }
            set
            {
                OnParishNotesChanging(value);
                ReportPropertyChanging("ParishNotes");
                _ParishNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParishNotes");
                OnParishNotesChanged();
            }
        }
        private global::System.String _ParishNotes;
        partial void OnParishNotesChanging(global::System.String value);
        partial void OnParishNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentParish
        {
            get
            {
                return _ParentParish;
            }
            set
            {
                OnParentParishChanging(value);
                ReportPropertyChanging("ParentParish");
                _ParentParish = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentParish");
                OnParentParishChanged();
            }
        }
        private global::System.String _ParentParish;
        partial void OnParentParishChanging(global::System.String value);
        partial void OnParentParishChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParishStartYear
        {
            get
            {
                return _ParishStartYear;
            }
            set
            {
                OnParishStartYearChanging(value);
                ReportPropertyChanging("ParishStartYear");
                _ParishStartYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishStartYear");
                OnParishStartYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ParishStartYear;
        partial void OnParishStartYearChanging(Nullable<global::System.Int32> value);
        partial void OnParishStartYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParishEndYear
        {
            get
            {
                return _ParishEndYear;
            }
            set
            {
                OnParishEndYearChanging(value);
                ReportPropertyChanging("ParishEndYear");
                _ParishEndYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishEndYear");
                OnParishEndYearChanged();
            }
        }
        private Nullable<global::System.Int32> _ParishEndYear;
        partial void OnParishEndYearChanging(Nullable<global::System.Int32> value);
        partial void OnParishEndYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParishCounty
        {
            get
            {
                return _ParishCounty;
            }
            set
            {
                OnParishCountyChanging(value);
                ReportPropertyChanging("ParishCounty");
                _ParishCounty = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParishCounty");
                OnParishCountyChanged();
            }
        }
        private global::System.String _ParishCounty;
        partial void OnParishCountyChanging(global::System.String value);
        partial void OnParishCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ParishX
        {
            get
            {
                return _ParishX;
            }
            set
            {
                OnParishXChanging(value);
                ReportPropertyChanging("ParishX");
                _ParishX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishX");
                OnParishXChanged();
            }
        }
        private Nullable<global::System.Decimal> _ParishX;
        partial void OnParishXChanging(Nullable<global::System.Decimal> value);
        partial void OnParishXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ParishY
        {
            get
            {
                return _ParishY;
            }
            set
            {
                OnParishYChanging(value);
                ReportPropertyChanging("ParishY");
                _ParishY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishY");
                OnParishYChanged();
            }
        }
        private Nullable<global::System.Decimal> _ParishY;
        partial void OnParishYChanging(Nullable<global::System.Decimal> value);
        partial void OnParishYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Distance
        {
            get
            {
                return _Distance;
            }
            set
            {
                OnDistanceChanging(value);
                ReportPropertyChanging("Distance");
                _Distance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Distance");
                OnDistanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Distance;
        partial void OnDistanceChanging(Nullable<global::System.Decimal> value);
        partial void OnDistanceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappingParishs_Parishs", "SourceMappingParish")]
        public EntityCollection<SourceMappingParish> SourceMappingParishs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SourceMappingParish>("GeneralModel.FK_SourceMappingParishs_Parishs", "SourceMappingParish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SourceMappingParish>("GeneralModel.FK_SourceMappingParishs_Parishs", "SourceMappingParish", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_ParishTranscriptionDetails_Parishs", "ParishTranscriptionDetail")]
        public EntityCollection<ParishTranscriptionDetail> ParishTranscriptionDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParishTranscriptionDetail>("GeneralModel.FK_ParishTranscriptionDetails_Parishs", "ParishTranscriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParishTranscriptionDetail>("GeneralModel.FK_ParishTranscriptionDetails_Parishs", "ParishTranscriptionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_ParishRecords_Parishs", "ParishRecord")]
        public EntityCollection<ParishRecord> ParishRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParishRecord>("GeneralModel.FK_ParishRecords_Parishs", "ParishRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParishRecord>("GeneralModel.FK_ParishRecords_Parishs", "ParishRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MissingRecords_Parishs", "MissingRecord")]
        public EntityCollection<MissingRecord> MissingRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MissingRecord>("GeneralModel.FK_MissingRecords_Parishs", "MissingRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MissingRecord>("GeneralModel.FK_MissingRecords_Parishs", "MissingRecord", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="ParishCounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParishCounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParishCounter object.
        /// </summary>
        /// <param name="rangeId">Initial value of the RangeId property.</param>
        public static ParishCounter CreateParishCounter(global::System.Int32 rangeId)
        {
            ParishCounter parishCounter = new ParishCounter();
            parishCounter.RangeId = rangeId;
            return parishCounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RangeId
        {
            get
            {
                return _RangeId;
            }
            set
            {
                if (_RangeId != value)
                {
                    OnRangeIdChanging(value);
                    ReportPropertyChanging("RangeId");
                    _RangeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RangeId");
                    OnRangeIdChanged();
                }
            }
        }
        private global::System.Int32 _RangeId;
        partial void OnRangeIdChanging(global::System.Int32 value);
        partial void OnRangeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearStart
        {
            get
            {
                return _YearStart;
            }
            set
            {
                OnYearStartChanging(value);
                ReportPropertyChanging("YearStart");
                _YearStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearStart");
                OnYearStartChanged();
            }
        }
        private Nullable<global::System.Int32> _YearStart;
        partial void OnYearStartChanging(Nullable<global::System.Int32> value);
        partial void OnYearStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearEnd
        {
            get
            {
                return _YearEnd;
            }
            set
            {
                OnYearEndChanging(value);
                ReportPropertyChanging("YearEnd");
                _YearEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearEnd");
                OnYearEndChanged();
            }
        }
        private Nullable<global::System.Int32> _YearEnd;
        partial void OnYearEndChanging(Nullable<global::System.Int32> value);
        partial void OnYearEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParishId
        {
            get
            {
                return _ParishId;
            }
            set
            {
                OnParishIdChanging(value);
                ReportPropertyChanging("ParishId");
                _ParishId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishId");
                OnParishIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParishId;
        partial void OnParishIdChanging(Nullable<global::System.Guid> value);
        partial void OnParishIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private Nullable<global::System.Int32> _Count;
        partial void OnCountChanging(Nullable<global::System.Int32> value);
        partial void OnCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PX
        {
            get
            {
                return _PX;
            }
            set
            {
                OnPXChanging(value);
                ReportPropertyChanging("PX");
                _PX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PX");
                OnPXChanged();
            }
        }
        private Nullable<global::System.Decimal> _PX;
        partial void OnPXChanging(Nullable<global::System.Decimal> value);
        partial void OnPXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PY
        {
            get
            {
                return _PY;
            }
            set
            {
                OnPYChanging(value);
                ReportPropertyChanging("PY");
                _PY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PY");
                OnPYChanged();
            }
        }
        private Nullable<global::System.Decimal> _PY;
        partial void OnPYChanging(Nullable<global::System.Decimal> value);
        partial void OnPYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParishName
        {
            get
            {
                return _ParishName;
            }
            set
            {
                OnParishNameChanging(value);
                ReportPropertyChanging("ParishName");
                _ParishName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParishName");
                OnParishNameChanged();
            }
        }
        private global::System.String _ParishName;
        partial void OnParishNameChanging(global::System.String value);
        partial void OnParishNameChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="ParishRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParishRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParishRecord object.
        /// </summary>
        /// <param name="parishRecordsId">Initial value of the ParishRecordsId property.</param>
        public static ParishRecord CreateParishRecord(global::System.Int32 parishRecordsId)
        {
            ParishRecord parishRecord = new ParishRecord();
            parishRecord.ParishRecordsId = parishRecordsId;
            return parishRecord;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParishRecordsId
        {
            get
            {
                return _ParishRecordsId;
            }
            set
            {
                if (_ParishRecordsId != value)
                {
                    OnParishRecordsIdChanging(value);
                    ReportPropertyChanging("ParishRecordsId");
                    _ParishRecordsId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParishRecordsId");
                    OnParishRecordsIdChanged();
                }
            }
        }
        private global::System.Int32 _ParishRecordsId;
        partial void OnParishRecordsIdChanging(global::System.Int32 value);
        partial void OnParishRecordsIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int32> _Year;
        partial void OnYearChanging(Nullable<global::System.Int32> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordType
        {
            get
            {
                return _RecordType;
            }
            set
            {
                OnRecordTypeChanging(value);
                ReportPropertyChanging("RecordType");
                _RecordType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordType");
                OnRecordTypeChanged();
            }
        }
        private global::System.String _RecordType;
        partial void OnRecordTypeChanging(global::System.String value);
        partial void OnRecordTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> OriginalRegister
        {
            get
            {
                return _OriginalRegister;
            }
            set
            {
                OnOriginalRegisterChanging(value);
                ReportPropertyChanging("OriginalRegister");
                _OriginalRegister = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalRegister");
                OnOriginalRegisterChanged();
            }
        }
        private Nullable<global::System.Boolean> _OriginalRegister;
        partial void OnOriginalRegisterChanging(Nullable<global::System.Boolean> value);
        partial void OnOriginalRegisterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearEnd
        {
            get
            {
                return _YearEnd;
            }
            set
            {
                OnYearEndChanging(value);
                ReportPropertyChanging("YearEnd");
                _YearEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearEnd");
                OnYearEndChanged();
            }
        }
        private Nullable<global::System.Int32> _YearEnd;
        partial void OnYearEndChanging(Nullable<global::System.Int32> value);
        partial void OnYearEndChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_ParishRecords_ParishRecordSource", "ParishRecordSource")]
        public ParishRecordSource ParishRecordSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParishRecordSource>("GeneralModel.FK_ParishRecords_ParishRecordSource", "ParishRecordSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParishRecordSource>("GeneralModel.FK_ParishRecords_ParishRecordSource", "ParishRecordSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParishRecordSource> ParishRecordSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParishRecordSource>("GeneralModel.FK_ParishRecords_ParishRecordSource", "ParishRecordSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParishRecordSource>("GeneralModel.FK_ParishRecords_ParishRecordSource", "ParishRecordSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_ParishRecords_Parishs", "Parish")]
        public Parish Parish
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_ParishRecords_Parishs", "Parish").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_ParishRecords_Parishs", "Parish").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parish> ParishReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_ParishRecords_Parishs", "Parish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parish>("GeneralModel.FK_ParishRecords_Parishs", "Parish", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="ParishRecordSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParishRecordSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParishRecordSource object.
        /// </summary>
        /// <param name="recordTypeId">Initial value of the RecordTypeId property.</param>
        public static ParishRecordSource CreateParishRecordSource(global::System.Int32 recordTypeId)
        {
            ParishRecordSource parishRecordSource = new ParishRecordSource();
            parishRecordSource.RecordTypeId = recordTypeId;
            return parishRecordSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordTypeId
        {
            get
            {
                return _RecordTypeId;
            }
            set
            {
                if (_RecordTypeId != value)
                {
                    OnRecordTypeIdChanging(value);
                    ReportPropertyChanging("RecordTypeId");
                    _RecordTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecordTypeId");
                    OnRecordTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _RecordTypeId;
        partial void OnRecordTypeIdChanging(global::System.Int32 value);
        partial void OnRecordTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordTypeName
        {
            get
            {
                return _RecordTypeName;
            }
            set
            {
                OnRecordTypeNameChanging(value);
                ReportPropertyChanging("RecordTypeName");
                _RecordTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordTypeName");
                OnRecordTypeNameChanged();
            }
        }
        private global::System.String _RecordTypeName;
        partial void OnRecordTypeNameChanging(global::System.String value);
        partial void OnRecordTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordTypeDescription
        {
            get
            {
                return _RecordTypeDescription;
            }
            set
            {
                OnRecordTypeDescriptionChanging(value);
                ReportPropertyChanging("RecordTypeDescription");
                _RecordTypeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordTypeDescription");
                OnRecordTypeDescriptionChanged();
            }
        }
        private global::System.String _RecordTypeDescription;
        partial void OnRecordTypeDescriptionChanging(global::System.String value);
        partial void OnRecordTypeDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_ParishRecords_ParishRecordSource", "ParishRecord")]
        public EntityCollection<ParishRecord> ParishRecords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParishRecord>("GeneralModel.FK_ParishRecords_ParishRecordSource", "ParishRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParishRecord>("GeneralModel.FK_ParishRecords_ParishRecordSource", "ParishRecord", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="ParishTranscriptionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParishTranscriptionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParishTranscriptionDetail object.
        /// </summary>
        /// <param name="parishTranscriptionId">Initial value of the ParishTranscriptionId property.</param>
        public static ParishTranscriptionDetail CreateParishTranscriptionDetail(global::System.Int32 parishTranscriptionId)
        {
            ParishTranscriptionDetail parishTranscriptionDetail = new ParishTranscriptionDetail();
            parishTranscriptionDetail.ParishTranscriptionId = parishTranscriptionId;
            return parishTranscriptionDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParishTranscriptionId
        {
            get
            {
                return _ParishTranscriptionId;
            }
            set
            {
                if (_ParishTranscriptionId != value)
                {
                    OnParishTranscriptionIdChanging(value);
                    ReportPropertyChanging("ParishTranscriptionId");
                    _ParishTranscriptionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParishTranscriptionId");
                    OnParishTranscriptionIdChanged();
                }
            }
        }
        private global::System.Int32 _ParishTranscriptionId;
        partial void OnParishTranscriptionIdChanging(global::System.Int32 value);
        partial void OnParishTranscriptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParishDataString
        {
            get
            {
                return _ParishDataString;
            }
            set
            {
                OnParishDataStringChanging(value);
                ReportPropertyChanging("ParishDataString");
                _ParishDataString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParishDataString");
                OnParishDataStringChanged();
            }
        }
        private global::System.String _ParishDataString;
        partial void OnParishDataStringChanging(global::System.String value);
        partial void OnParishDataStringChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_ParishTranscriptionDetails_Parishs", "Parish")]
        public Parish Parish
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_ParishTranscriptionDetails_Parishs", "Parish").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_ParishTranscriptionDetails_Parishs", "Parish").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parish> ParishReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_ParishTranscriptionDetails_Parishs", "Parish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parish>("GeneralModel.FK_ParishTranscriptionDetails_Parishs", "Parish", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="person_id">Initial value of the Person_id property.</param>
        /// <param name="motherId">Initial value of the MotherId property.</param>
        /// <param name="fatherId">Initial value of the FatherId property.</param>
        /// <param name="isMale">Initial value of the IsMale property.</param>
        /// <param name="christianName">Initial value of the ChristianName property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="birthLocation">Initial value of the BirthLocation property.</param>
        /// <param name="birthDateStr">Initial value of the BirthDateStr property.</param>
        /// <param name="baptismDateStr">Initial value of the BaptismDateStr property.</param>
        /// <param name="deathDateStr">Initial value of the DeathDateStr property.</param>
        /// <param name="deathLocation">Initial value of the DeathLocation property.</param>
        /// <param name="fatherChristianName">Initial value of the FatherChristianName property.</param>
        /// <param name="fatherSurname">Initial value of the FatherSurname property.</param>
        /// <param name="motherChristianName">Initial value of the MotherChristianName property.</param>
        /// <param name="motherSurname">Initial value of the MotherSurname property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        /// <param name="birthInt">Initial value of the BirthInt property.</param>
        /// <param name="bapInt">Initial value of the BapInt property.</param>
        /// <param name="deathInt">Initial value of the DeathInt property.</param>
        /// <param name="deathCounty">Initial value of the DeathCounty property.</param>
        /// <param name="birthCounty">Initial value of the BirthCounty property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="dateLastEdit">Initial value of the DateLastEdit property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="origSurname">Initial value of the OrigSurname property.</param>
        /// <param name="origFatherSurname">Initial value of the OrigFatherSurname property.</param>
        /// <param name="origMotherSurname">Initial value of the OrigMotherSurname property.</param>
        /// <param name="occupation">Initial value of the Occupation property.</param>
        /// <param name="referenceLocation">Initial value of the ReferenceLocation property.</param>
        /// <param name="referenceDateStr">Initial value of the ReferenceDateStr property.</param>
        /// <param name="referenceDateInt">Initial value of the ReferenceDateInt property.</param>
        /// <param name="spouseName">Initial value of the SpouseName property.</param>
        /// <param name="spouseSurname">Initial value of the SpouseSurname property.</param>
        /// <param name="fatherOccupation">Initial value of the FatherOccupation property.</param>
        /// <param name="birthLocationId">Initial value of the BirthLocationId property.</param>
        /// <param name="deathLocationId">Initial value of the DeathLocationId property.</param>
        /// <param name="referenceLocationId">Initial value of the ReferenceLocationId property.</param>
        /// <param name="uniqueRef">Initial value of the UniqueRef property.</param>
        /// <param name="totalEvents">Initial value of the TotalEvents property.</param>
        /// <param name="eventPriority">Initial value of the EventPriority property.</param>
        /// <param name="estBirthYearInt">Initial value of the EstBirthYearInt property.</param>
        /// <param name="estDeathYearInt">Initial value of the EstDeathYearInt property.</param>
        /// <param name="isEstBirth">Initial value of the IsEstBirth property.</param>
        /// <param name="isEstDeath">Initial value of the IsEstDeath property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Person CreatePerson(global::System.Guid person_id, global::System.Int32 motherId, global::System.Int32 fatherId, global::System.Boolean isMale, global::System.String christianName, global::System.String surname, global::System.String birthLocation, global::System.String birthDateStr, global::System.String baptismDateStr, global::System.String deathDateStr, global::System.String deathLocation, global::System.String fatherChristianName, global::System.String fatherSurname, global::System.String motherChristianName, global::System.String motherSurname, global::System.String notes, global::System.String source, global::System.Int32 birthInt, global::System.Int32 bapInt, global::System.Int32 deathInt, global::System.String deathCounty, global::System.String birthCounty, global::System.DateTime dateAdded, global::System.DateTime dateLastEdit, global::System.Int32 userId, global::System.String origSurname, global::System.String origFatherSurname, global::System.String origMotherSurname, global::System.String occupation, global::System.String referenceLocation, global::System.String referenceDateStr, global::System.Int32 referenceDateInt, global::System.String spouseName, global::System.String spouseSurname, global::System.String fatherOccupation, global::System.Guid birthLocationId, global::System.Guid deathLocationId, global::System.Guid referenceLocationId, global::System.Guid uniqueRef, global::System.Int32 totalEvents, global::System.Int32 eventPriority, global::System.Int32 estBirthYearInt, global::System.Int32 estDeathYearInt, global::System.Boolean isEstBirth, global::System.Boolean isEstDeath, global::System.Boolean isDeleted)
        {
            Person person = new Person();
            person.Person_id = person_id;
            person.MotherId = motherId;
            person.FatherId = fatherId;
            person.IsMale = isMale;
            person.ChristianName = christianName;
            person.Surname = surname;
            person.BirthLocation = birthLocation;
            person.BirthDateStr = birthDateStr;
            person.BaptismDateStr = baptismDateStr;
            person.DeathDateStr = deathDateStr;
            person.DeathLocation = deathLocation;
            person.FatherChristianName = fatherChristianName;
            person.FatherSurname = fatherSurname;
            person.MotherChristianName = motherChristianName;
            person.MotherSurname = motherSurname;
            person.Notes = notes;
            person.Source = source;
            person.BirthInt = birthInt;
            person.BapInt = bapInt;
            person.DeathInt = deathInt;
            person.DeathCounty = deathCounty;
            person.BirthCounty = birthCounty;
            person.DateAdded = dateAdded;
            person.DateLastEdit = dateLastEdit;
            person.UserId = userId;
            person.OrigSurname = origSurname;
            person.OrigFatherSurname = origFatherSurname;
            person.OrigMotherSurname = origMotherSurname;
            person.Occupation = occupation;
            person.ReferenceLocation = referenceLocation;
            person.ReferenceDateStr = referenceDateStr;
            person.ReferenceDateInt = referenceDateInt;
            person.SpouseName = spouseName;
            person.SpouseSurname = spouseSurname;
            person.FatherOccupation = fatherOccupation;
            person.BirthLocationId = birthLocationId;
            person.DeathLocationId = deathLocationId;
            person.ReferenceLocationId = referenceLocationId;
            person.UniqueRef = uniqueRef;
            person.TotalEvents = totalEvents;
            person.EventPriority = eventPriority;
            person.EstBirthYearInt = estBirthYearInt;
            person.EstDeathYearInt = estDeathYearInt;
            person.IsEstBirth = isEstBirth;
            person.IsEstDeath = isEstDeath;
            person.IsDeleted = isDeleted;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Person_id
        {
            get
            {
                return _Person_id;
            }
            set
            {
                if (_Person_id != value)
                {
                    OnPerson_idChanging(value);
                    ReportPropertyChanging("Person_id");
                    _Person_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Person_id");
                    OnPerson_idChanged();
                }
            }
        }
        private global::System.Guid _Person_id;
        partial void OnPerson_idChanging(global::System.Guid value);
        partial void OnPerson_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MotherId
        {
            get
            {
                return _MotherId;
            }
            set
            {
                OnMotherIdChanging(value);
                ReportPropertyChanging("MotherId");
                _MotherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MotherId");
                OnMotherIdChanged();
            }
        }
        private global::System.Int32 _MotherId;
        partial void OnMotherIdChanging(global::System.Int32 value);
        partial void OnMotherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FatherId
        {
            get
            {
                return _FatherId;
            }
            set
            {
                OnFatherIdChanging(value);
                ReportPropertyChanging("FatherId");
                _FatherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FatherId");
                OnFatherIdChanged();
            }
        }
        private global::System.Int32 _FatherId;
        partial void OnFatherIdChanging(global::System.Int32 value);
        partial void OnFatherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMale
        {
            get
            {
                return _IsMale;
            }
            set
            {
                OnIsMaleChanging(value);
                ReportPropertyChanging("IsMale");
                _IsMale = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMale");
                OnIsMaleChanged();
            }
        }
        private global::System.Boolean _IsMale;
        partial void OnIsMaleChanging(global::System.Boolean value);
        partial void OnIsMaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChristianName
        {
            get
            {
                return _ChristianName;
            }
            set
            {
                OnChristianNameChanging(value);
                ReportPropertyChanging("ChristianName");
                _ChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChristianName");
                OnChristianNameChanged();
            }
        }
        private global::System.String _ChristianName;
        partial void OnChristianNameChanging(global::System.String value);
        partial void OnChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthLocation
        {
            get
            {
                return _BirthLocation;
            }
            set
            {
                OnBirthLocationChanging(value);
                ReportPropertyChanging("BirthLocation");
                _BirthLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthLocation");
                OnBirthLocationChanged();
            }
        }
        private global::System.String _BirthLocation;
        partial void OnBirthLocationChanging(global::System.String value);
        partial void OnBirthLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthDateStr
        {
            get
            {
                return _BirthDateStr;
            }
            set
            {
                OnBirthDateStrChanging(value);
                ReportPropertyChanging("BirthDateStr");
                _BirthDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthDateStr");
                OnBirthDateStrChanged();
            }
        }
        private global::System.String _BirthDateStr;
        partial void OnBirthDateStrChanging(global::System.String value);
        partial void OnBirthDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BaptismDateStr
        {
            get
            {
                return _BaptismDateStr;
            }
            set
            {
                OnBaptismDateStrChanging(value);
                ReportPropertyChanging("BaptismDateStr");
                _BaptismDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BaptismDateStr");
                OnBaptismDateStrChanged();
            }
        }
        private global::System.String _BaptismDateStr;
        partial void OnBaptismDateStrChanging(global::System.String value);
        partial void OnBaptismDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathDateStr
        {
            get
            {
                return _DeathDateStr;
            }
            set
            {
                OnDeathDateStrChanging(value);
                ReportPropertyChanging("DeathDateStr");
                _DeathDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathDateStr");
                OnDeathDateStrChanged();
            }
        }
        private global::System.String _DeathDateStr;
        partial void OnDeathDateStrChanging(global::System.String value);
        partial void OnDeathDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathLocation
        {
            get
            {
                return _DeathLocation;
            }
            set
            {
                OnDeathLocationChanging(value);
                ReportPropertyChanging("DeathLocation");
                _DeathLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathLocation");
                OnDeathLocationChanged();
            }
        }
        private global::System.String _DeathLocation;
        partial void OnDeathLocationChanging(global::System.String value);
        partial void OnDeathLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherChristianName
        {
            get
            {
                return _FatherChristianName;
            }
            set
            {
                OnFatherChristianNameChanging(value);
                ReportPropertyChanging("FatherChristianName");
                _FatherChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherChristianName");
                OnFatherChristianNameChanged();
            }
        }
        private global::System.String _FatherChristianName;
        partial void OnFatherChristianNameChanging(global::System.String value);
        partial void OnFatherChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherSurname
        {
            get
            {
                return _FatherSurname;
            }
            set
            {
                OnFatherSurnameChanging(value);
                ReportPropertyChanging("FatherSurname");
                _FatherSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherSurname");
                OnFatherSurnameChanged();
            }
        }
        private global::System.String _FatherSurname;
        partial void OnFatherSurnameChanging(global::System.String value);
        partial void OnFatherSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MotherChristianName
        {
            get
            {
                return _MotherChristianName;
            }
            set
            {
                OnMotherChristianNameChanging(value);
                ReportPropertyChanging("MotherChristianName");
                _MotherChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MotherChristianName");
                OnMotherChristianNameChanged();
            }
        }
        private global::System.String _MotherChristianName;
        partial void OnMotherChristianNameChanging(global::System.String value);
        partial void OnMotherChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MotherSurname
        {
            get
            {
                return _MotherSurname;
            }
            set
            {
                OnMotherSurnameChanging(value);
                ReportPropertyChanging("MotherSurname");
                _MotherSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MotherSurname");
                OnMotherSurnameChanged();
            }
        }
        private global::System.String _MotherSurname;
        partial void OnMotherSurnameChanging(global::System.String value);
        partial void OnMotherSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BirthInt
        {
            get
            {
                return _BirthInt;
            }
            set
            {
                OnBirthIntChanging(value);
                ReportPropertyChanging("BirthInt");
                _BirthInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthInt");
                OnBirthIntChanged();
            }
        }
        private global::System.Int32 _BirthInt;
        partial void OnBirthIntChanging(global::System.Int32 value);
        partial void OnBirthIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BapInt
        {
            get
            {
                return _BapInt;
            }
            set
            {
                OnBapIntChanging(value);
                ReportPropertyChanging("BapInt");
                _BapInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BapInt");
                OnBapIntChanged();
            }
        }
        private global::System.Int32 _BapInt;
        partial void OnBapIntChanging(global::System.Int32 value);
        partial void OnBapIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeathInt
        {
            get
            {
                return _DeathInt;
            }
            set
            {
                OnDeathIntChanging(value);
                ReportPropertyChanging("DeathInt");
                _DeathInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeathInt");
                OnDeathIntChanged();
            }
        }
        private global::System.Int32 _DeathInt;
        partial void OnDeathIntChanging(global::System.Int32 value);
        partial void OnDeathIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathCounty
        {
            get
            {
                return _DeathCounty;
            }
            set
            {
                OnDeathCountyChanging(value);
                ReportPropertyChanging("DeathCounty");
                _DeathCounty = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathCounty");
                OnDeathCountyChanged();
            }
        }
        private global::System.String _DeathCounty;
        partial void OnDeathCountyChanging(global::System.String value);
        partial void OnDeathCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthCounty
        {
            get
            {
                return _BirthCounty;
            }
            set
            {
                OnBirthCountyChanging(value);
                ReportPropertyChanging("BirthCounty");
                _BirthCounty = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthCounty");
                OnBirthCountyChanged();
            }
        }
        private global::System.String _BirthCounty;
        partial void OnBirthCountyChanging(global::System.String value);
        partial void OnBirthCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateLastEdit
        {
            get
            {
                return _DateLastEdit;
            }
            set
            {
                OnDateLastEditChanging(value);
                ReportPropertyChanging("DateLastEdit");
                _DateLastEdit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateLastEdit");
                OnDateLastEditChanged();
            }
        }
        private global::System.DateTime _DateLastEdit;
        partial void OnDateLastEditChanging(global::System.DateTime value);
        partial void OnDateLastEditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrigSurname
        {
            get
            {
                return _OrigSurname;
            }
            set
            {
                OnOrigSurnameChanging(value);
                ReportPropertyChanging("OrigSurname");
                _OrigSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrigSurname");
                OnOrigSurnameChanged();
            }
        }
        private global::System.String _OrigSurname;
        partial void OnOrigSurnameChanging(global::System.String value);
        partial void OnOrigSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrigFatherSurname
        {
            get
            {
                return _OrigFatherSurname;
            }
            set
            {
                OnOrigFatherSurnameChanging(value);
                ReportPropertyChanging("OrigFatherSurname");
                _OrigFatherSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrigFatherSurname");
                OnOrigFatherSurnameChanged();
            }
        }
        private global::System.String _OrigFatherSurname;
        partial void OnOrigFatherSurnameChanging(global::System.String value);
        partial void OnOrigFatherSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrigMotherSurname
        {
            get
            {
                return _OrigMotherSurname;
            }
            set
            {
                OnOrigMotherSurnameChanging(value);
                ReportPropertyChanging("OrigMotherSurname");
                _OrigMotherSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrigMotherSurname");
                OnOrigMotherSurnameChanged();
            }
        }
        private global::System.String _OrigMotherSurname;
        partial void OnOrigMotherSurnameChanging(global::System.String value);
        partial void OnOrigMotherSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Occupation
        {
            get
            {
                return _Occupation;
            }
            set
            {
                OnOccupationChanging(value);
                ReportPropertyChanging("Occupation");
                _Occupation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Occupation");
                OnOccupationChanged();
            }
        }
        private global::System.String _Occupation;
        partial void OnOccupationChanging(global::System.String value);
        partial void OnOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceLocation
        {
            get
            {
                return _ReferenceLocation;
            }
            set
            {
                OnReferenceLocationChanging(value);
                ReportPropertyChanging("ReferenceLocation");
                _ReferenceLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceLocation");
                OnReferenceLocationChanged();
            }
        }
        private global::System.String _ReferenceLocation;
        partial void OnReferenceLocationChanging(global::System.String value);
        partial void OnReferenceLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceDateStr
        {
            get
            {
                return _ReferenceDateStr;
            }
            set
            {
                OnReferenceDateStrChanging(value);
                ReportPropertyChanging("ReferenceDateStr");
                _ReferenceDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceDateStr");
                OnReferenceDateStrChanged();
            }
        }
        private global::System.String _ReferenceDateStr;
        partial void OnReferenceDateStrChanging(global::System.String value);
        partial void OnReferenceDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReferenceDateInt
        {
            get
            {
                return _ReferenceDateInt;
            }
            set
            {
                OnReferenceDateIntChanging(value);
                ReportPropertyChanging("ReferenceDateInt");
                _ReferenceDateInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceDateInt");
                OnReferenceDateIntChanged();
            }
        }
        private global::System.Int32 _ReferenceDateInt;
        partial void OnReferenceDateIntChanging(global::System.Int32 value);
        partial void OnReferenceDateIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpouseName
        {
            get
            {
                return _SpouseName;
            }
            set
            {
                OnSpouseNameChanging(value);
                ReportPropertyChanging("SpouseName");
                _SpouseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpouseName");
                OnSpouseNameChanged();
            }
        }
        private global::System.String _SpouseName;
        partial void OnSpouseNameChanging(global::System.String value);
        partial void OnSpouseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpouseSurname
        {
            get
            {
                return _SpouseSurname;
            }
            set
            {
                OnSpouseSurnameChanging(value);
                ReportPropertyChanging("SpouseSurname");
                _SpouseSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpouseSurname");
                OnSpouseSurnameChanged();
            }
        }
        private global::System.String _SpouseSurname;
        partial void OnSpouseSurnameChanging(global::System.String value);
        partial void OnSpouseSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherOccupation
        {
            get
            {
                return _FatherOccupation;
            }
            set
            {
                OnFatherOccupationChanging(value);
                ReportPropertyChanging("FatherOccupation");
                _FatherOccupation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherOccupation");
                OnFatherOccupationChanged();
            }
        }
        private global::System.String _FatherOccupation;
        partial void OnFatherOccupationChanging(global::System.String value);
        partial void OnFatherOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BirthLocationId
        {
            get
            {
                return _BirthLocationId;
            }
            set
            {
                OnBirthLocationIdChanging(value);
                ReportPropertyChanging("BirthLocationId");
                _BirthLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthLocationId");
                OnBirthLocationIdChanged();
            }
        }
        private global::System.Guid _BirthLocationId;
        partial void OnBirthLocationIdChanging(global::System.Guid value);
        partial void OnBirthLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DeathLocationId
        {
            get
            {
                return _DeathLocationId;
            }
            set
            {
                OnDeathLocationIdChanging(value);
                ReportPropertyChanging("DeathLocationId");
                _DeathLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeathLocationId");
                OnDeathLocationIdChanged();
            }
        }
        private global::System.Guid _DeathLocationId;
        partial void OnDeathLocationIdChanging(global::System.Guid value);
        partial void OnDeathLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceLocationId
        {
            get
            {
                return _ReferenceLocationId;
            }
            set
            {
                OnReferenceLocationIdChanging(value);
                ReportPropertyChanging("ReferenceLocationId");
                _ReferenceLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceLocationId");
                OnReferenceLocationIdChanged();
            }
        }
        private global::System.Guid _ReferenceLocationId;
        partial void OnReferenceLocationIdChanging(global::System.Guid value);
        partial void OnReferenceLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniqueRef
        {
            get
            {
                return _UniqueRef;
            }
            set
            {
                OnUniqueRefChanging(value);
                ReportPropertyChanging("UniqueRef");
                _UniqueRef = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueRef");
                OnUniqueRefChanged();
            }
        }
        private global::System.Guid _UniqueRef;
        partial void OnUniqueRefChanging(global::System.Guid value);
        partial void OnUniqueRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalEvents
        {
            get
            {
                return _TotalEvents;
            }
            set
            {
                OnTotalEventsChanging(value);
                ReportPropertyChanging("TotalEvents");
                _TotalEvents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalEvents");
                OnTotalEventsChanged();
            }
        }
        private global::System.Int32 _TotalEvents;
        partial void OnTotalEventsChanging(global::System.Int32 value);
        partial void OnTotalEventsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventPriority
        {
            get
            {
                return _EventPriority;
            }
            set
            {
                OnEventPriorityChanging(value);
                ReportPropertyChanging("EventPriority");
                _EventPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventPriority");
                OnEventPriorityChanged();
            }
        }
        private global::System.Int32 _EventPriority;
        partial void OnEventPriorityChanging(global::System.Int32 value);
        partial void OnEventPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstBirthYearInt
        {
            get
            {
                return _EstBirthYearInt;
            }
            set
            {
                OnEstBirthYearIntChanging(value);
                ReportPropertyChanging("EstBirthYearInt");
                _EstBirthYearInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstBirthYearInt");
                OnEstBirthYearIntChanged();
            }
        }
        private global::System.Int32 _EstBirthYearInt;
        partial void OnEstBirthYearIntChanging(global::System.Int32 value);
        partial void OnEstBirthYearIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstDeathYearInt
        {
            get
            {
                return _EstDeathYearInt;
            }
            set
            {
                OnEstDeathYearIntChanging(value);
                ReportPropertyChanging("EstDeathYearInt");
                _EstDeathYearInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstDeathYearInt");
                OnEstDeathYearIntChanged();
            }
        }
        private global::System.Int32 _EstDeathYearInt;
        partial void OnEstDeathYearIntChanging(global::System.Int32 value);
        partial void OnEstDeathYearIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEstBirth
        {
            get
            {
                return _IsEstBirth;
            }
            set
            {
                OnIsEstBirthChanging(value);
                ReportPropertyChanging("IsEstBirth");
                _IsEstBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEstBirth");
                OnIsEstBirthChanged();
            }
        }
        private global::System.Boolean _IsEstBirth;
        partial void OnIsEstBirthChanging(global::System.Boolean value);
        partial void OnIsEstBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEstDeath
        {
            get
            {
                return _IsEstDeath;
            }
            set
            {
                OnIsEstDeathChanging(value);
                ReportPropertyChanging("IsEstDeath");
                _IsEstDeath = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEstDeath");
                OnIsEstDeathChanged();
            }
        }
        private global::System.Boolean _IsEstDeath;
        partial void OnIsEstDeathChanging(global::System.Boolean value);
        partial void OnIsEstDeathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_Relations_Persons", "Relation")]
        public EntityCollection<Relation> RelationA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Relation>("GeneralModel.FK_Relations_Persons", "Relation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Relation>("GeneralModel.FK_Relations_Persons", "Relation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_Relations_Persons1", "Relation")]
        public EntityCollection<Relation> RelationB
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Relation>("GeneralModel.FK_Relations_Persons1", "Relation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Relation>("GeneralModel.FK_Relations_Persons1", "Relation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_Persons", "SourceMapping")]
        public EntityCollection<SourceMapping> SourceMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_Persons", "SourceMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_Persons", "SourceMapping", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageMapWitness_Persons", "MarriageMapWitness")]
        public EntityCollection<MarriageMapWitness> MarriageMapWitnesses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarriageMapWitness>("GeneralModel.FK_MarriageMapWitness_Persons", "MarriageMapWitness");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarriageMapWitness>("GeneralModel.FK_MarriageMapWitness_Persons", "MarriageMapWitness", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="Relation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Relation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Relation object.
        /// </summary>
        /// <param name="relationId">Initial value of the RelationId property.</param>
        public static Relation CreateRelation(global::System.Int32 relationId)
        {
            Relation relation = new Relation();
            relation.RelationId = relationId;
            return relation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationId
        {
            get
            {
                return _RelationId;
            }
            set
            {
                if (_RelationId != value)
                {
                    OnRelationIdChanging(value);
                    ReportPropertyChanging("RelationId");
                    _RelationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelationId");
                    OnRelationIdChanged();
                }
            }
        }
        private global::System.Int32 _RelationId;
        partial void OnRelationIdChanging(global::System.Int32 value);
        partial void OnRelationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_Relations_RelationTypes", "RelationType")]
        public RelationType RelationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("GeneralModel.FK_Relations_RelationTypes", "RelationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("GeneralModel.FK_Relations_RelationTypes", "RelationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelationType> RelationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationType>("GeneralModel.FK_Relations_RelationTypes", "RelationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelationType>("GeneralModel.FK_Relations_RelationTypes", "RelationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_Relations_Persons", "Person")]
        public Person PersonA
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_Relations_Persons", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_Relations_Persons", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonAReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_Relations_Persons", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("GeneralModel.FK_Relations_Persons", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_Relations_Persons1", "Person")]
        public Person PersonB
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_Relations_Persons1", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_Relations_Persons1", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonBReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_Relations_Persons1", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("GeneralModel.FK_Relations_Persons1", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="RelationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelationType object.
        /// </summary>
        /// <param name="relationTypeId">Initial value of the RelationTypeId property.</param>
        public static RelationType CreateRelationType(global::System.Int32 relationTypeId)
        {
            RelationType relationType = new RelationType();
            relationType.RelationTypeId = relationTypeId;
            return relationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationTypeId
        {
            get
            {
                return _RelationTypeId;
            }
            set
            {
                if (_RelationTypeId != value)
                {
                    OnRelationTypeIdChanging(value);
                    ReportPropertyChanging("RelationTypeId");
                    _RelationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelationTypeId");
                    OnRelationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _RelationTypeId;
        partial void OnRelationTypeIdChanging(global::System.Int32 value);
        partial void OnRelationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelationName
        {
            get
            {
                return _RelationName;
            }
            set
            {
                OnRelationNameChanging(value);
                ReportPropertyChanging("RelationName");
                _RelationName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelationName");
                OnRelationNameChanged();
            }
        }
        private global::System.String _RelationName;
        partial void OnRelationNameChanging(global::System.String value);
        partial void OnRelationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_Relations_RelationTypes", "Relation")]
        public EntityCollection<Relation> Relations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Relation>("GeneralModel.FK_Relations_RelationTypes", "Relation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Relation>("GeneralModel.FK_Relations_RelationTypes", "Relation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_MarriageRelations_RelationTypes", "MarriageRelation")]
        public EntityCollection<MarriageRelation> MarriageRelations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MarriageRelation>("GeneralModel.FK_MarriageRelations_RelationTypes", "MarriageRelation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MarriageRelation>("GeneralModel.FK_MarriageRelations_RelationTypes", "MarriageRelation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="Source")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Source : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Source object.
        /// </summary>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Source CreateSource(global::System.Guid sourceId, global::System.Int32 userId)
        {
            Source source = new Source();
            source.SourceId = sourceId;
            source.UserId = userId;
            return source;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                if (_SourceId != value)
                {
                    OnSourceIdChanging(value);
                    ReportPropertyChanging("SourceId");
                    _SourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceId");
                    OnSourceIdChanged();
                }
            }
        }
        private global::System.Guid _SourceId;
        partial void OnSourceIdChanging(global::System.Guid value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceRef
        {
            get
            {
                return _SourceRef;
            }
            set
            {
                OnSourceRefChanging(value);
                ReportPropertyChanging("SourceRef");
                _SourceRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceRef");
                OnSourceRefChanged();
            }
        }
        private global::System.String _SourceRef;
        partial void OnSourceRefChanging(global::System.String value);
        partial void OnSourceRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceDate
        {
            get
            {
                return _SourceDate;
            }
            set
            {
                OnSourceDateChanging(value);
                ReportPropertyChanging("SourceDate");
                _SourceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceDate");
                OnSourceDateChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceDate;
        partial void OnSourceDateChanging(Nullable<global::System.Int32> value);
        partial void OnSourceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceDateTo
        {
            get
            {
                return _SourceDateTo;
            }
            set
            {
                OnSourceDateToChanging(value);
                ReportPropertyChanging("SourceDateTo");
                _SourceDateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceDateTo");
                OnSourceDateToChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceDateTo;
        partial void OnSourceDateToChanging(Nullable<global::System.Int32> value);
        partial void OnSourceDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceDateStr
        {
            get
            {
                return _SourceDateStr;
            }
            set
            {
                OnSourceDateStrChanging(value);
                ReportPropertyChanging("SourceDateStr");
                _SourceDateStr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceDateStr");
                OnSourceDateStrChanged();
            }
        }
        private global::System.String _SourceDateStr;
        partial void OnSourceDateStrChanging(global::System.String value);
        partial void OnSourceDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceDateStrTo
        {
            get
            {
                return _SourceDateStrTo;
            }
            set
            {
                OnSourceDateStrToChanging(value);
                ReportPropertyChanging("SourceDateStrTo");
                _SourceDateStrTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceDateStrTo");
                OnSourceDateStrToChanged();
            }
        }
        private global::System.String _SourceDateStrTo;
        partial void OnSourceDateStrToChanging(global::System.String value);
        partial void OnSourceDateStrToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceDescription
        {
            get
            {
                return _SourceDescription;
            }
            set
            {
                OnSourceDescriptionChanging(value);
                ReportPropertyChanging("SourceDescription");
                _SourceDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceDescription");
                OnSourceDescriptionChanged();
            }
        }
        private global::System.String _SourceDescription;
        partial void OnSourceDescriptionChanging(global::System.String value);
        partial void OnSourceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalLocation
        {
            get
            {
                return _OriginalLocation;
            }
            set
            {
                OnOriginalLocationChanging(value);
                ReportPropertyChanging("OriginalLocation");
                _OriginalLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginalLocation");
                OnOriginalLocationChanged();
            }
        }
        private global::System.String _OriginalLocation;
        partial void OnOriginalLocationChanging(global::System.String value);
        partial void OnOriginalLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsCopyHeld
        {
            get
            {
                return _IsCopyHeld;
            }
            set
            {
                OnIsCopyHeldChanging(value);
                ReportPropertyChanging("IsCopyHeld");
                _IsCopyHeld = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCopyHeld");
                OnIsCopyHeldChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsCopyHeld;
        partial void OnIsCopyHeldChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCopyHeldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsViewed
        {
            get
            {
                return _IsViewed;
            }
            set
            {
                OnIsViewedChanging(value);
                ReportPropertyChanging("IsViewed");
                _IsViewed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsViewed");
                OnIsViewedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsViewed;
        partial void OnIsViewedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsViewedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsThackrayFound
        {
            get
            {
                return _IsThackrayFound;
            }
            set
            {
                OnIsThackrayFoundChanging(value);
                ReportPropertyChanging("IsThackrayFound");
                _IsThackrayFound = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsThackrayFound");
                OnIsThackrayFoundChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsThackrayFound;
        partial void OnIsThackrayFoundChanging(Nullable<global::System.Boolean> value);
        partial void OnIsThackrayFoundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceNotes
        {
            get
            {
                return _SourceNotes;
            }
            set
            {
                OnSourceNotesChanging(value);
                ReportPropertyChanging("SourceNotes");
                _SourceNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceNotes");
                OnSourceNotesChanged();
            }
        }
        private global::System.String _SourceNotes;
        partial void OnSourceNotesChanging(global::System.String value);
        partial void OnSourceNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceFileCount
        {
            get
            {
                return _SourceFileCount;
            }
            set
            {
                OnSourceFileCountChanging(value);
                ReportPropertyChanging("SourceFileCount");
                _SourceFileCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceFileCount");
                OnSourceFileCountChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceFileCount;
        partial void OnSourceFileCountChanging(Nullable<global::System.Int32> value);
        partial void OnSourceFileCountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappingParishs_Sources", "SourceMappingParish")]
        public EntityCollection<SourceMappingParish> SourceMappingParishs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SourceMappingParish>("GeneralModel.FK_SourceMappingParishs_Sources", "SourceMappingParish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SourceMappingParish>("GeneralModel.FK_SourceMappingParishs_Sources", "SourceMappingParish", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_Sources", "SourceMapping")]
        public EntityCollection<SourceMapping> SourceMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_Sources", "SourceMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_Sources", "SourceMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="SourceMapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SourceMapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SourceMapping object.
        /// </summary>
        /// <param name="mappingId">Initial value of the MappingId property.</param>
        public static SourceMapping CreateSourceMapping(global::System.Int32 mappingId)
        {
            SourceMapping sourceMapping = new SourceMapping();
            sourceMapping.MappingId = mappingId;
            return sourceMapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MappingId
        {
            get
            {
                return _MappingId;
            }
            set
            {
                if (_MappingId != value)
                {
                    OnMappingIdChanging(value);
                    ReportPropertyChanging("MappingId");
                    _MappingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MappingId");
                    OnMappingIdChanged();
                }
            }
        }
        private global::System.Int32 _MappingId;
        partial void OnMappingIdChanging(global::System.Int32 value);
        partial void OnMappingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_Marriages", "Marriage")]
        public Marriage Marriage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_SourceMappings_Marriages", "Marriage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_SourceMappings_Marriages", "Marriage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marriage> MarriageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marriage>("GeneralModel.FK_SourceMappings_Marriages", "Marriage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marriage>("GeneralModel.FK_SourceMappings_Marriages", "Marriage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_Sources", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("GeneralModel.FK_SourceMappings_Sources", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("GeneralModel.FK_SourceMappings_Sources", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("GeneralModel.FK_SourceMappings_Sources", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("GeneralModel.FK_SourceMappings_Sources", "Source", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_SourceTypes", "SourceType")]
        public SourceType SourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceType>("GeneralModel.FK_SourceMappings_SourceTypes", "SourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceType>("GeneralModel.FK_SourceMappings_SourceTypes", "SourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SourceType> SourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SourceType>("GeneralModel.FK_SourceMappings_SourceTypes", "SourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SourceType>("GeneralModel.FK_SourceMappings_SourceTypes", "SourceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_Files", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("GeneralModel.FK_SourceMappings_Files", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("GeneralModel.FK_SourceMappings_Files", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("GeneralModel.FK_SourceMappings_Files", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("GeneralModel.FK_SourceMappings_Files", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_Persons", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_SourceMappings_Persons", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_SourceMappings_Persons", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("GeneralModel.FK_SourceMappings_Persons", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("GeneralModel.FK_SourceMappings_Persons", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="SourceMappingParish")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SourceMappingParish : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SourceMappingParish object.
        /// </summary>
        /// <param name="sourceMappingParishsRowId">Initial value of the SourceMappingParishsRowId property.</param>
        public static SourceMappingParish CreateSourceMappingParish(global::System.Int32 sourceMappingParishsRowId)
        {
            SourceMappingParish sourceMappingParish = new SourceMappingParish();
            sourceMappingParish.SourceMappingParishsRowId = sourceMappingParishsRowId;
            return sourceMappingParish;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceMappingParishsRowId
        {
            get
            {
                return _SourceMappingParishsRowId;
            }
            set
            {
                if (_SourceMappingParishsRowId != value)
                {
                    OnSourceMappingParishsRowIdChanging(value);
                    ReportPropertyChanging("SourceMappingParishsRowId");
                    _SourceMappingParishsRowId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceMappingParishsRowId");
                    OnSourceMappingParishsRowIdChanged();
                }
            }
        }
        private global::System.Int32 _SourceMappingParishsRowId;
        partial void OnSourceMappingParishsRowIdChanging(global::System.Int32 value);
        partial void OnSourceMappingParishsRowIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SourceMappingDateAdded
        {
            get
            {
                return _SourceMappingDateAdded;
            }
            set
            {
                OnSourceMappingDateAddedChanging(value);
                ReportPropertyChanging("SourceMappingDateAdded");
                _SourceMappingDateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceMappingDateAdded");
                OnSourceMappingDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _SourceMappingDateAdded;
        partial void OnSourceMappingDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnSourceMappingDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceMappingUser
        {
            get
            {
                return _SourceMappingUser;
            }
            set
            {
                OnSourceMappingUserChanging(value);
                ReportPropertyChanging("SourceMappingUser");
                _SourceMappingUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceMappingUser");
                OnSourceMappingUserChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceMappingUser;
        partial void OnSourceMappingUserChanging(Nullable<global::System.Int32> value);
        partial void OnSourceMappingUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappingParishs_Parishs", "Parish")]
        public Parish Parish
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_SourceMappingParishs_Parishs", "Parish").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_SourceMappingParishs_Parishs", "Parish").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Parish> ParishReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Parish>("GeneralModel.FK_SourceMappingParishs_Parishs", "Parish");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Parish>("GeneralModel.FK_SourceMappingParishs_Parishs", "Parish", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappingParishs_Sources", "Source")]
        public Source Source
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("GeneralModel.FK_SourceMappingParishs_Sources", "Source").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("GeneralModel.FK_SourceMappingParishs_Sources", "Source").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Source> SourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Source>("GeneralModel.FK_SourceMappingParishs_Sources", "Source");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Source>("GeneralModel.FK_SourceMappingParishs_Sources", "Source", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="SourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SourceType object.
        /// </summary>
        /// <param name="sourceTypeId">Initial value of the SourceTypeId property.</param>
        /// <param name="sourceTypeDesc">Initial value of the SourceTypeDesc property.</param>
        /// <param name="sourceDateAdded">Initial value of the SourceDateAdded property.</param>
        /// <param name="sourceUserAdded">Initial value of the SourceUserAdded property.</param>
        /// <param name="sourceTypeOrder">Initial value of the SourceTypeOrder property.</param>
        public static SourceType CreateSourceType(global::System.Int32 sourceTypeId, global::System.String sourceTypeDesc, global::System.String sourceDateAdded, global::System.Int32 sourceUserAdded, global::System.Int32 sourceTypeOrder)
        {
            SourceType sourceType = new SourceType();
            sourceType.SourceTypeId = sourceTypeId;
            sourceType.SourceTypeDesc = sourceTypeDesc;
            sourceType.SourceDateAdded = sourceDateAdded;
            sourceType.SourceUserAdded = sourceUserAdded;
            sourceType.SourceTypeOrder = sourceTypeOrder;
            return sourceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceTypeId
        {
            get
            {
                return _SourceTypeId;
            }
            set
            {
                if (_SourceTypeId != value)
                {
                    OnSourceTypeIdChanging(value);
                    ReportPropertyChanging("SourceTypeId");
                    _SourceTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceTypeId");
                    OnSourceTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _SourceTypeId;
        partial void OnSourceTypeIdChanging(global::System.Int32 value);
        partial void OnSourceTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceTypeDesc
        {
            get
            {
                return _SourceTypeDesc;
            }
            set
            {
                OnSourceTypeDescChanging(value);
                ReportPropertyChanging("SourceTypeDesc");
                _SourceTypeDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceTypeDesc");
                OnSourceTypeDescChanged();
            }
        }
        private global::System.String _SourceTypeDesc;
        partial void OnSourceTypeDescChanging(global::System.String value);
        partial void OnSourceTypeDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceDateAdded
        {
            get
            {
                return _SourceDateAdded;
            }
            set
            {
                OnSourceDateAddedChanging(value);
                ReportPropertyChanging("SourceDateAdded");
                _SourceDateAdded = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceDateAdded");
                OnSourceDateAddedChanged();
            }
        }
        private global::System.String _SourceDateAdded;
        partial void OnSourceDateAddedChanging(global::System.String value);
        partial void OnSourceDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceUserAdded
        {
            get
            {
                return _SourceUserAdded;
            }
            set
            {
                OnSourceUserAddedChanging(value);
                ReportPropertyChanging("SourceUserAdded");
                _SourceUserAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceUserAdded");
                OnSourceUserAddedChanged();
            }
        }
        private global::System.Int32 _SourceUserAdded;
        partial void OnSourceUserAddedChanging(global::System.Int32 value);
        partial void OnSourceUserAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceTypeOrder
        {
            get
            {
                return _SourceTypeOrder;
            }
            set
            {
                OnSourceTypeOrderChanging(value);
                ReportPropertyChanging("SourceTypeOrder");
                _SourceTypeOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceTypeOrder");
                OnSourceTypeOrderChanged();
            }
        }
        private global::System.Int32 _SourceTypeOrder;
        partial void OnSourceTypeOrderChanging(global::System.Int32 value);
        partial void OnSourceTypeOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GeneralModel", "FK_SourceMappings_SourceTypes", "SourceMapping")]
        public EntityCollection<SourceMapping> SourceMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_SourceTypes", "SourceMapping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SourceMapping>("GeneralModel.FK_SourceMappings_SourceTypes", "SourceMapping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GeneralModel", Name="uvw_1841Census")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class uvw_1841Census : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new uvw_1841Census object.
        /// </summary>
        /// <param name="sourceId">Initial value of the SourceId property.</param>
        /// <param name="parishId">Initial value of the ParishId property.</param>
        public static uvw_1841Census Createuvw_1841Census(global::System.Guid sourceId, global::System.Guid parishId)
        {
            uvw_1841Census uvw_1841Census = new uvw_1841Census();
            uvw_1841Census.SourceId = sourceId;
            uvw_1841Census.ParishId = parishId;
            return uvw_1841Census;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                if (_SourceId != value)
                {
                    OnSourceIdChanging(value);
                    ReportPropertyChanging("SourceId");
                    _SourceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceId");
                    OnSourceIdChanged();
                }
            }
        }
        private global::System.Guid _SourceId;
        partial void OnSourceIdChanging(global::System.Guid value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceRef
        {
            get
            {
                return _SourceRef;
            }
            set
            {
                OnSourceRefChanging(value);
                ReportPropertyChanging("SourceRef");
                _SourceRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceRef");
                OnSourceRefChanged();
            }
        }
        private global::System.String _SourceRef;
        partial void OnSourceRefChanging(global::System.String value);
        partial void OnSourceRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParishName
        {
            get
            {
                return _ParishName;
            }
            set
            {
                OnParishNameChanging(value);
                ReportPropertyChanging("ParishName");
                _ParishName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParishName");
                OnParishNameChanged();
            }
        }
        private global::System.String _ParishName;
        partial void OnParishNameChanging(global::System.String value);
        partial void OnParishNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ParishX
        {
            get
            {
                return _ParishX;
            }
            set
            {
                OnParishXChanging(value);
                ReportPropertyChanging("ParishX");
                _ParishX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishX");
                OnParishXChanged();
            }
        }
        private Nullable<global::System.Decimal> _ParishX;
        partial void OnParishXChanging(Nullable<global::System.Decimal> value);
        partial void OnParishXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ParishY
        {
            get
            {
                return _ParishY;
            }
            set
            {
                OnParishYChanging(value);
                ReportPropertyChanging("ParishY");
                _ParishY = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishY");
                OnParishYChanged();
            }
        }
        private Nullable<global::System.Decimal> _ParishY;
        partial void OnParishYChanging(Nullable<global::System.Decimal> value);
        partial void OnParishYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceDescription
        {
            get
            {
                return _SourceDescription;
            }
            set
            {
                OnSourceDescriptionChanging(value);
                ReportPropertyChanging("SourceDescription");
                _SourceDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceDescription");
                OnSourceDescriptionChanged();
            }
        }
        private global::System.String _SourceDescription;
        partial void OnSourceDescriptionChanging(global::System.String value);
        partial void OnSourceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ParishId
        {
            get
            {
                return _ParishId;
            }
            set
            {
                OnParishIdChanging(value);
                ReportPropertyChanging("ParishId");
                _ParishId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParishId");
                OnParishIdChanged();
            }
        }
        private global::System.Guid _ParishId;
        partial void OnParishIdChanging(global::System.Guid value);
        partial void OnParishIdChanged();

        #endregion

    
    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="GetAncestors_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetAncestors_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetAncestors_Result object.
        /// </summary>
        /// <param name="christianName">Initial value of the ChristianName property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="bapInt">Initial value of the BapInt property.</param>
        /// <param name="birthInt">Initial value of the BirthInt property.</param>
        /// <param name="birthLocation">Initial value of the BirthLocation property.</param>
        /// <param name="birthCounty">Initial value of the BirthCounty property.</param>
        /// <param name="deathInt">Initial value of the DeathInt property.</param>
        /// <param name="deathLocation">Initial value of the DeathLocation property.</param>
        /// <param name="deathCounty">Initial value of the DeathCounty property.</param>
        /// <param name="occupation">Initial value of the Occupation property.</param>
        public static GetAncestors_Result CreateGetAncestors_Result(global::System.String christianName, global::System.String surname, global::System.Int32 bapInt, global::System.Int32 birthInt, global::System.String birthLocation, global::System.String birthCounty, global::System.Int32 deathInt, global::System.String deathLocation, global::System.String deathCounty, global::System.String occupation)
        {
            GetAncestors_Result getAncestors_Result = new GetAncestors_Result();
            getAncestors_Result.ChristianName = christianName;
            getAncestors_Result.Surname = surname;
            getAncestors_Result.BapInt = bapInt;
            getAncestors_Result.BirthInt = birthInt;
            getAncestors_Result.BirthLocation = birthLocation;
            getAncestors_Result.BirthCounty = birthCounty;
            getAncestors_Result.DeathInt = deathInt;
            getAncestors_Result.DeathLocation = deathLocation;
            getAncestors_Result.DeathCounty = deathCounty;
            getAncestors_Result.Occupation = occupation;
            return getAncestors_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChristianName
        {
            get
            {
                return _ChristianName;
            }
            set
            {
                OnChristianNameChanging(value);
                ReportPropertyChanging("ChristianName");
                _ChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChristianName");
                OnChristianNameChanged();
            }
        }
        private global::System.String _ChristianName;
        partial void OnChristianNameChanging(global::System.String value);
        partial void OnChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BapInt
        {
            get
            {
                return _BapInt;
            }
            set
            {
                OnBapIntChanging(value);
                ReportPropertyChanging("BapInt");
                _BapInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BapInt");
                OnBapIntChanged();
            }
        }
        private global::System.Int32 _BapInt;
        partial void OnBapIntChanging(global::System.Int32 value);
        partial void OnBapIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BirthInt
        {
            get
            {
                return _BirthInt;
            }
            set
            {
                OnBirthIntChanging(value);
                ReportPropertyChanging("BirthInt");
                _BirthInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthInt");
                OnBirthIntChanged();
            }
        }
        private global::System.Int32 _BirthInt;
        partial void OnBirthIntChanging(global::System.Int32 value);
        partial void OnBirthIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthLocation
        {
            get
            {
                return _BirthLocation;
            }
            set
            {
                OnBirthLocationChanging(value);
                ReportPropertyChanging("BirthLocation");
                _BirthLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthLocation");
                OnBirthLocationChanged();
            }
        }
        private global::System.String _BirthLocation;
        partial void OnBirthLocationChanging(global::System.String value);
        partial void OnBirthLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthCounty
        {
            get
            {
                return _BirthCounty;
            }
            set
            {
                OnBirthCountyChanging(value);
                ReportPropertyChanging("BirthCounty");
                _BirthCounty = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthCounty");
                OnBirthCountyChanged();
            }
        }
        private global::System.String _BirthCounty;
        partial void OnBirthCountyChanging(global::System.String value);
        partial void OnBirthCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeathInt
        {
            get
            {
                return _DeathInt;
            }
            set
            {
                OnDeathIntChanging(value);
                ReportPropertyChanging("DeathInt");
                _DeathInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeathInt");
                OnDeathIntChanged();
            }
        }
        private global::System.Int32 _DeathInt;
        partial void OnDeathIntChanging(global::System.Int32 value);
        partial void OnDeathIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathLocation
        {
            get
            {
                return _DeathLocation;
            }
            set
            {
                OnDeathLocationChanging(value);
                ReportPropertyChanging("DeathLocation");
                _DeathLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathLocation");
                OnDeathLocationChanged();
            }
        }
        private global::System.String _DeathLocation;
        partial void OnDeathLocationChanging(global::System.String value);
        partial void OnDeathLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathCounty
        {
            get
            {
                return _DeathCounty;
            }
            set
            {
                OnDeathCountyChanging(value);
                ReportPropertyChanging("DeathCounty");
                _DeathCounty = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathCounty");
                OnDeathCountyChanged();
            }
        }
        private global::System.String _DeathCounty;
        partial void OnDeathCountyChanging(global::System.String value);
        partial void OnDeathCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Occupation
        {
            get
            {
                return _Occupation;
            }
            set
            {
                OnOccupationChanging(value);
                ReportPropertyChanging("Occupation");
                _Occupation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Occupation");
                OnOccupationChanged();
            }
        }
        private global::System.String _Occupation;
        partial void OnOccupationChanging(global::System.String value);
        partial void OnOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChildId
        {
            get
            {
                return _ChildId;
            }
            set
            {
                OnChildIdChanging(value);
                ReportPropertyChanging("ChildId");
                _ChildId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildId");
                OnChildIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ChildId;
        partial void OnChildIdChanging(Nullable<global::System.Guid> value);
        partial void OnChildIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelationType
        {
            get
            {
                return _RelationType;
            }
            set
            {
                OnRelationTypeChanging(value);
                ReportPropertyChanging("RelationType");
                _RelationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationType");
                OnRelationTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _RelationType;
        partial void OnRelationTypeChanging(Nullable<global::System.Int32> value);
        partial void OnRelationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> level
        {
            get
            {
                return _level;
            }
            set
            {
                OnlevelChanging(value);
                ReportPropertyChanging("level");
                _level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("level");
                OnlevelChanged();
            }
        }
        private Nullable<global::System.Int32> _level;
        partial void OnlevelChanging(Nullable<global::System.Int32> value);
        partial void OnlevelChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="GetDescendants_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetDescendants_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetDescendants_Result object.
        /// </summary>
        /// <param name="birthInt">Initial value of the BirthInt property.</param>
        public static GetDescendants_Result CreateGetDescendants_Result(global::System.Int32 birthInt)
        {
            GetDescendants_Result getDescendants_Result = new GetDescendants_Result();
            getDescendants_Result.BirthInt = birthInt;
            return getDescendants_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Guid> value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> motherId
        {
            get
            {
                return _motherId;
            }
            set
            {
                OnmotherIdChanging(value);
                ReportPropertyChanging("motherId");
                _motherId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("motherId");
                OnmotherIdChanged();
            }
        }
        private Nullable<global::System.Guid> _motherId;
        partial void OnmotherIdChanging(Nullable<global::System.Guid> value);
        partial void OnmotherIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChildId
        {
            get
            {
                return _ChildId;
            }
            set
            {
                OnChildIdChanging(value);
                ReportPropertyChanging("ChildId");
                _ChildId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildId");
                OnChildIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ChildId;
        partial void OnChildIdChanging(Nullable<global::System.Guid> value);
        partial void OnChildIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BirthInt
        {
            get
            {
                return _BirthInt;
            }
            set
            {
                OnBirthIntChanging(value);
                ReportPropertyChanging("BirthInt");
                _BirthInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthInt");
                OnBirthIntChanged();
            }
        }
        private global::System.Int32 _BirthInt;
        partial void OnBirthIntChanging(global::System.Int32 value);
        partial void OnBirthIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelationType
        {
            get
            {
                return _RelationType;
            }
            set
            {
                OnRelationTypeChanging(value);
                ReportPropertyChanging("RelationType");
                _RelationType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationType");
                OnRelationTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _RelationType;
        partial void OnRelationTypeChanging(Nullable<global::System.Int32> value);
        partial void OnRelationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> level
        {
            get
            {
                return _level;
            }
            set
            {
                OnlevelChanging(value);
                ReportPropertyChanging("level");
                _level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("level");
                OnlevelChanged();
            }
        }
        private Nullable<global::System.Int32> _level;
        partial void OnlevelChanging(Nullable<global::System.Int32> value);
        partial void OnlevelChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="GetDescendantSpouses_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetDescendantSpouses_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PersonA
        {
            get
            {
                return _PersonA;
            }
            set
            {
                OnPersonAChanging(value);
                ReportPropertyChanging("PersonA");
                _PersonA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonA");
                OnPersonAChanged();
            }
        }
        private Nullable<global::System.Guid> _PersonA;
        partial void OnPersonAChanging(Nullable<global::System.Guid> value);
        partial void OnPersonAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PersonB
        {
            get
            {
                return _PersonB;
            }
            set
            {
                OnPersonBChanging(value);
                ReportPropertyChanging("PersonB");
                _PersonB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonB");
                OnPersonBChanged();
            }
        }
        private Nullable<global::System.Guid> _PersonB;
        partial void OnPersonBChanging(Nullable<global::System.Guid> value);
        partial void OnPersonBChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="GetFilteredMarriages_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetFilteredMarriages_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetFilteredMarriages_Result object.
        /// </summary>
        /// <param name="person_id">Initial value of the Person_id property.</param>
        /// <param name="christianName">Initial value of the ChristianName property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="birthLocation">Initial value of the BirthLocation property.</param>
        /// <param name="birthDateStr">Initial value of the BirthDateStr property.</param>
        /// <param name="baptismDateStr">Initial value of the BaptismDateStr property.</param>
        /// <param name="deathDateStr">Initial value of the DeathDateStr property.</param>
        /// <param name="deathLocation">Initial value of the DeathLocation property.</param>
        /// <param name="fatherChristianName">Initial value of the FatherChristianName property.</param>
        /// <param name="fatherSurname">Initial value of the FatherSurname property.</param>
        /// <param name="motherChristianName">Initial value of the MotherChristianName property.</param>
        /// <param name="motherSurname">Initial value of the MotherSurname property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        /// <param name="birthInt">Initial value of the BirthInt property.</param>
        /// <param name="bapInt">Initial value of the BapInt property.</param>
        /// <param name="deathInt">Initial value of the DeathInt property.</param>
        /// <param name="tree_links">Initial value of the tree_links property.</param>
        /// <param name="occupation">Initial value of the Occupation property.</param>
        /// <param name="referenceLocation">Initial value of the ReferenceLocation property.</param>
        /// <param name="referenceDateStr">Initial value of the ReferenceDateStr property.</param>
        /// <param name="referenceDateInt">Initial value of the ReferenceDateInt property.</param>
        /// <param name="spouseName">Initial value of the SpouseName property.</param>
        /// <param name="spouseSurname">Initial value of the SpouseSurname property.</param>
        /// <param name="fatherOccupation">Initial value of the FatherOccupation property.</param>
        /// <param name="totalEvents">Initial value of the TotalEvents property.</param>
        /// <param name="eventPriority">Initial value of the EventPriority property.</param>
        public static GetFilteredMarriages_Result CreateGetFilteredMarriages_Result(global::System.Guid person_id, global::System.String christianName, global::System.String surname, global::System.String birthLocation, global::System.String birthDateStr, global::System.String baptismDateStr, global::System.String deathDateStr, global::System.String deathLocation, global::System.String fatherChristianName, global::System.String fatherSurname, global::System.String motherChristianName, global::System.String motherSurname, global::System.String source, global::System.Int32 birthInt, global::System.Int32 bapInt, global::System.Int32 deathInt, global::System.String tree_links, global::System.String occupation, global::System.String referenceLocation, global::System.String referenceDateStr, global::System.Int32 referenceDateInt, global::System.String spouseName, global::System.String spouseSurname, global::System.String fatherOccupation, global::System.Int32 totalEvents, global::System.Int32 eventPriority)
        {
            GetFilteredMarriages_Result getFilteredMarriages_Result = new GetFilteredMarriages_Result();
            getFilteredMarriages_Result.Person_id = person_id;
            getFilteredMarriages_Result.ChristianName = christianName;
            getFilteredMarriages_Result.Surname = surname;
            getFilteredMarriages_Result.BirthLocation = birthLocation;
            getFilteredMarriages_Result.BirthDateStr = birthDateStr;
            getFilteredMarriages_Result.BaptismDateStr = baptismDateStr;
            getFilteredMarriages_Result.DeathDateStr = deathDateStr;
            getFilteredMarriages_Result.DeathLocation = deathLocation;
            getFilteredMarriages_Result.FatherChristianName = fatherChristianName;
            getFilteredMarriages_Result.FatherSurname = fatherSurname;
            getFilteredMarriages_Result.MotherChristianName = motherChristianName;
            getFilteredMarriages_Result.MotherSurname = motherSurname;
            getFilteredMarriages_Result.Source = source;
            getFilteredMarriages_Result.BirthInt = birthInt;
            getFilteredMarriages_Result.BapInt = bapInt;
            getFilteredMarriages_Result.DeathInt = deathInt;
            getFilteredMarriages_Result.tree_links = tree_links;
            getFilteredMarriages_Result.Occupation = occupation;
            getFilteredMarriages_Result.ReferenceLocation = referenceLocation;
            getFilteredMarriages_Result.ReferenceDateStr = referenceDateStr;
            getFilteredMarriages_Result.ReferenceDateInt = referenceDateInt;
            getFilteredMarriages_Result.SpouseName = spouseName;
            getFilteredMarriages_Result.SpouseSurname = spouseSurname;
            getFilteredMarriages_Result.FatherOccupation = fatherOccupation;
            getFilteredMarriages_Result.TotalEvents = totalEvents;
            getFilteredMarriages_Result.EventPriority = eventPriority;
            return getFilteredMarriages_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Person_id
        {
            get
            {
                return _Person_id;
            }
            set
            {
                OnPerson_idChanging(value);
                ReportPropertyChanging("Person_id");
                _Person_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Person_id");
                OnPerson_idChanged();
            }
        }
        private global::System.Guid _Person_id;
        partial void OnPerson_idChanging(global::System.Guid value);
        partial void OnPerson_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChristianName
        {
            get
            {
                return _ChristianName;
            }
            set
            {
                OnChristianNameChanging(value);
                ReportPropertyChanging("ChristianName");
                _ChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChristianName");
                OnChristianNameChanged();
            }
        }
        private global::System.String _ChristianName;
        partial void OnChristianNameChanging(global::System.String value);
        partial void OnChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthLocation
        {
            get
            {
                return _BirthLocation;
            }
            set
            {
                OnBirthLocationChanging(value);
                ReportPropertyChanging("BirthLocation");
                _BirthLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthLocation");
                OnBirthLocationChanged();
            }
        }
        private global::System.String _BirthLocation;
        partial void OnBirthLocationChanging(global::System.String value);
        partial void OnBirthLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthDateStr
        {
            get
            {
                return _BirthDateStr;
            }
            set
            {
                OnBirthDateStrChanging(value);
                ReportPropertyChanging("BirthDateStr");
                _BirthDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthDateStr");
                OnBirthDateStrChanged();
            }
        }
        private global::System.String _BirthDateStr;
        partial void OnBirthDateStrChanging(global::System.String value);
        partial void OnBirthDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BaptismDateStr
        {
            get
            {
                return _BaptismDateStr;
            }
            set
            {
                OnBaptismDateStrChanging(value);
                ReportPropertyChanging("BaptismDateStr");
                _BaptismDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BaptismDateStr");
                OnBaptismDateStrChanged();
            }
        }
        private global::System.String _BaptismDateStr;
        partial void OnBaptismDateStrChanging(global::System.String value);
        partial void OnBaptismDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathDateStr
        {
            get
            {
                return _DeathDateStr;
            }
            set
            {
                OnDeathDateStrChanging(value);
                ReportPropertyChanging("DeathDateStr");
                _DeathDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathDateStr");
                OnDeathDateStrChanged();
            }
        }
        private global::System.String _DeathDateStr;
        partial void OnDeathDateStrChanging(global::System.String value);
        partial void OnDeathDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathLocation
        {
            get
            {
                return _DeathLocation;
            }
            set
            {
                OnDeathLocationChanging(value);
                ReportPropertyChanging("DeathLocation");
                _DeathLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathLocation");
                OnDeathLocationChanged();
            }
        }
        private global::System.String _DeathLocation;
        partial void OnDeathLocationChanging(global::System.String value);
        partial void OnDeathLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherChristianName
        {
            get
            {
                return _FatherChristianName;
            }
            set
            {
                OnFatherChristianNameChanging(value);
                ReportPropertyChanging("FatherChristianName");
                _FatherChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherChristianName");
                OnFatherChristianNameChanged();
            }
        }
        private global::System.String _FatherChristianName;
        partial void OnFatherChristianNameChanging(global::System.String value);
        partial void OnFatherChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherSurname
        {
            get
            {
                return _FatherSurname;
            }
            set
            {
                OnFatherSurnameChanging(value);
                ReportPropertyChanging("FatherSurname");
                _FatherSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherSurname");
                OnFatherSurnameChanged();
            }
        }
        private global::System.String _FatherSurname;
        partial void OnFatherSurnameChanging(global::System.String value);
        partial void OnFatherSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MotherChristianName
        {
            get
            {
                return _MotherChristianName;
            }
            set
            {
                OnMotherChristianNameChanging(value);
                ReportPropertyChanging("MotherChristianName");
                _MotherChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MotherChristianName");
                OnMotherChristianNameChanged();
            }
        }
        private global::System.String _MotherChristianName;
        partial void OnMotherChristianNameChanging(global::System.String value);
        partial void OnMotherChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MotherSurname
        {
            get
            {
                return _MotherSurname;
            }
            set
            {
                OnMotherSurnameChanging(value);
                ReportPropertyChanging("MotherSurname");
                _MotherSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MotherSurname");
                OnMotherSurnameChanged();
            }
        }
        private global::System.String _MotherSurname;
        partial void OnMotherSurnameChanging(global::System.String value);
        partial void OnMotherSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BirthInt
        {
            get
            {
                return _BirthInt;
            }
            set
            {
                OnBirthIntChanging(value);
                ReportPropertyChanging("BirthInt");
                _BirthInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthInt");
                OnBirthIntChanged();
            }
        }
        private global::System.Int32 _BirthInt;
        partial void OnBirthIntChanging(global::System.Int32 value);
        partial void OnBirthIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BapInt
        {
            get
            {
                return _BapInt;
            }
            set
            {
                OnBapIntChanging(value);
                ReportPropertyChanging("BapInt");
                _BapInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BapInt");
                OnBapIntChanged();
            }
        }
        private global::System.Int32 _BapInt;
        partial void OnBapIntChanging(global::System.Int32 value);
        partial void OnBapIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeathInt
        {
            get
            {
                return _DeathInt;
            }
            set
            {
                OnDeathIntChanging(value);
                ReportPropertyChanging("DeathInt");
                _DeathInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeathInt");
                OnDeathIntChanged();
            }
        }
        private global::System.Int32 _DeathInt;
        partial void OnDeathIntChanging(global::System.Int32 value);
        partial void OnDeathIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tree_links
        {
            get
            {
                return _tree_links;
            }
            set
            {
                Ontree_linksChanging(value);
                ReportPropertyChanging("tree_links");
                _tree_links = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tree_links");
                Ontree_linksChanged();
            }
        }
        private global::System.String _tree_links;
        partial void Ontree_linksChanging(global::System.String value);
        partial void Ontree_linksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Occupation
        {
            get
            {
                return _Occupation;
            }
            set
            {
                OnOccupationChanging(value);
                ReportPropertyChanging("Occupation");
                _Occupation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Occupation");
                OnOccupationChanged();
            }
        }
        private global::System.String _Occupation;
        partial void OnOccupationChanging(global::System.String value);
        partial void OnOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceLocation
        {
            get
            {
                return _ReferenceLocation;
            }
            set
            {
                OnReferenceLocationChanging(value);
                ReportPropertyChanging("ReferenceLocation");
                _ReferenceLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceLocation");
                OnReferenceLocationChanged();
            }
        }
        private global::System.String _ReferenceLocation;
        partial void OnReferenceLocationChanging(global::System.String value);
        partial void OnReferenceLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceDateStr
        {
            get
            {
                return _ReferenceDateStr;
            }
            set
            {
                OnReferenceDateStrChanging(value);
                ReportPropertyChanging("ReferenceDateStr");
                _ReferenceDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceDateStr");
                OnReferenceDateStrChanged();
            }
        }
        private global::System.String _ReferenceDateStr;
        partial void OnReferenceDateStrChanging(global::System.String value);
        partial void OnReferenceDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReferenceDateInt
        {
            get
            {
                return _ReferenceDateInt;
            }
            set
            {
                OnReferenceDateIntChanging(value);
                ReportPropertyChanging("ReferenceDateInt");
                _ReferenceDateInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceDateInt");
                OnReferenceDateIntChanged();
            }
        }
        private global::System.Int32 _ReferenceDateInt;
        partial void OnReferenceDateIntChanging(global::System.Int32 value);
        partial void OnReferenceDateIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpouseName
        {
            get
            {
                return _SpouseName;
            }
            set
            {
                OnSpouseNameChanging(value);
                ReportPropertyChanging("SpouseName");
                _SpouseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpouseName");
                OnSpouseNameChanged();
            }
        }
        private global::System.String _SpouseName;
        partial void OnSpouseNameChanging(global::System.String value);
        partial void OnSpouseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpouseSurname
        {
            get
            {
                return _SpouseSurname;
            }
            set
            {
                OnSpouseSurnameChanging(value);
                ReportPropertyChanging("SpouseSurname");
                _SpouseSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpouseSurname");
                OnSpouseSurnameChanged();
            }
        }
        private global::System.String _SpouseSurname;
        partial void OnSpouseSurnameChanging(global::System.String value);
        partial void OnSpouseSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherOccupation
        {
            get
            {
                return _FatherOccupation;
            }
            set
            {
                OnFatherOccupationChanging(value);
                ReportPropertyChanging("FatherOccupation");
                _FatherOccupation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherOccupation");
                OnFatherOccupationChanged();
            }
        }
        private global::System.String _FatherOccupation;
        partial void OnFatherOccupationChanging(global::System.String value);
        partial void OnFatherOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UniqueRef
        {
            get
            {
                return _UniqueRef;
            }
            set
            {
                OnUniqueRefChanging(value);
                ReportPropertyChanging("UniqueRef");
                _UniqueRef = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueRef");
                OnUniqueRefChanged();
            }
        }
        private Nullable<global::System.Guid> _UniqueRef;
        partial void OnUniqueRefChanging(Nullable<global::System.Guid> value);
        partial void OnUniqueRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalEvents
        {
            get
            {
                return _TotalEvents;
            }
            set
            {
                OnTotalEventsChanging(value);
                ReportPropertyChanging("TotalEvents");
                _TotalEvents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalEvents");
                OnTotalEventsChanged();
            }
        }
        private global::System.Int32 _TotalEvents;
        partial void OnTotalEventsChanging(global::System.Int32 value);
        partial void OnTotalEventsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventPriority
        {
            get
            {
                return _EventPriority;
            }
            set
            {
                OnEventPriorityChanging(value);
                ReportPropertyChanging("EventPriority");
                _EventPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventPriority");
                OnEventPriorityChanged();
            }
        }
        private global::System.Int32 _EventPriority;
        partial void OnEventPriorityChanging(global::System.Int32 value);
        partial void OnEventPriorityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="GetMarriageByLocation_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetMarriageByLocation_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetMarriageByLocation_Result object.
        /// </summary>
        /// <param name="marriage_id">Initial value of the marriage_id property.</param>
        public static GetMarriageByLocation_Result CreateGetMarriageByLocation_Result(global::System.Guid marriage_id)
        {
            GetMarriageByLocation_Result getMarriageByLocation_Result = new GetMarriageByLocation_Result();
            getMarriageByLocation_Result.marriage_id = marriage_id;
            return getMarriageByLocation_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid marriage_id
        {
            get
            {
                return _marriage_id;
            }
            set
            {
                Onmarriage_idChanging(value);
                ReportPropertyChanging("marriage_id");
                _marriage_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("marriage_id");
                Onmarriage_idChanged();
            }
        }
        private global::System.Guid _marriage_id;
        partial void Onmarriage_idChanging(global::System.Guid value);
        partial void Onmarriage_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearIntVal
        {
            get
            {
                return _YearIntVal;
            }
            set
            {
                OnYearIntValChanging(value);
                ReportPropertyChanging("YearIntVal");
                _YearIntVal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearIntVal");
                OnYearIntValChanged();
            }
        }
        private Nullable<global::System.Int32> _YearIntVal;
        partial void OnYearIntValChanging(Nullable<global::System.Int32> value);
        partial void OnYearIntValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarriageLocation
        {
            get
            {
                return _MarriageLocation;
            }
            set
            {
                OnMarriageLocationChanging(value);
                ReportPropertyChanging("MarriageLocation");
                _MarriageLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarriageLocation");
                OnMarriageLocationChanged();
            }
        }
        private global::System.String _MarriageLocation;
        partial void OnMarriageLocationChanging(global::System.String value);
        partial void OnMarriageLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleCName
        {
            get
            {
                return _MaleCName;
            }
            set
            {
                OnMaleCNameChanging(value);
                ReportPropertyChanging("MaleCName");
                _MaleCName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleCName");
                OnMaleCNameChanged();
            }
        }
        private global::System.String _MaleCName;
        partial void OnMaleCNameChanging(global::System.String value);
        partial void OnMaleCNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleSName
        {
            get
            {
                return _MaleSName;
            }
            set
            {
                OnMaleSNameChanging(value);
                ReportPropertyChanging("MaleSName");
                _MaleSName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleSName");
                OnMaleSNameChanged();
            }
        }
        private global::System.String _MaleSName;
        partial void OnMaleSNameChanging(global::System.String value);
        partial void OnMaleSNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleCName
        {
            get
            {
                return _FemaleCName;
            }
            set
            {
                OnFemaleCNameChanging(value);
                ReportPropertyChanging("FemaleCName");
                _FemaleCName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleCName");
                OnFemaleCNameChanged();
            }
        }
        private global::System.String _FemaleCName;
        partial void OnFemaleCNameChanging(global::System.String value);
        partial void OnFemaleCNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleSName
        {
            get
            {
                return _FemaleSName;
            }
            set
            {
                OnFemaleSNameChanging(value);
                ReportPropertyChanging("FemaleSName");
                _FemaleSName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleSName");
                OnFemaleSNameChanged();
            }
        }
        private global::System.String _FemaleSName;
        partial void OnFemaleSNameChanging(global::System.String value);
        partial void OnFemaleSNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness1
        {
            get
            {
                return _Witness1;
            }
            set
            {
                OnWitness1Changing(value);
                ReportPropertyChanging("Witness1");
                _Witness1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness1");
                OnWitness1Changed();
            }
        }
        private global::System.String _Witness1;
        partial void OnWitness1Changing(global::System.String value);
        partial void OnWitness1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String witness2
        {
            get
            {
                return _witness2;
            }
            set
            {
                Onwitness2Changing(value);
                ReportPropertyChanging("witness2");
                _witness2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("witness2");
                Onwitness2Changed();
            }
        }
        private global::System.String _witness2;
        partial void Onwitness2Changing(global::System.String value);
        partial void Onwitness2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventPriority
        {
            get
            {
                return _EventPriority;
            }
            set
            {
                OnEventPriorityChanging(value);
                ReportPropertyChanging("EventPriority");
                _EventPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventPriority");
                OnEventPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _EventPriority;
        partial void OnEventPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnEventPriorityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="MarriageSources_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class MarriageSources_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MarriageRecordId
        {
            get
            {
                return _MarriageRecordId;
            }
            set
            {
                OnMarriageRecordIdChanging(value);
                ReportPropertyChanging("MarriageRecordId");
                _MarriageRecordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarriageRecordId");
                OnMarriageRecordIdChanged();
            }
        }
        private Nullable<global::System.Guid> _MarriageRecordId;
        partial void OnMarriageRecordIdChanging(Nullable<global::System.Guid> value);
        partial void OnMarriageRecordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _SourceId;
        partial void OnSourceIdChanging(Nullable<global::System.Guid> value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceRef
        {
            get
            {
                return _SourceRef;
            }
            set
            {
                OnSourceRefChanging(value);
                ReportPropertyChanging("SourceRef");
                _SourceRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceRef");
                OnSourceRefChanged();
            }
        }
        private global::System.String _SourceRef;
        partial void OnSourceRefChanging(global::System.String value);
        partial void OnSourceRefChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="PersonSources_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class PersonSources_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PersonRecordId
        {
            get
            {
                return _PersonRecordId;
            }
            set
            {
                OnPersonRecordIdChanging(value);
                ReportPropertyChanging("PersonRecordId");
                _PersonRecordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonRecordId");
                OnPersonRecordIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PersonRecordId;
        partial void OnPersonRecordIdChanging(Nullable<global::System.Guid> value);
        partial void OnPersonRecordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _SourceId;
        partial void OnSourceIdChanging(Nullable<global::System.Guid> value);
        partial void OnSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceRef
        {
            get
            {
                return _SourceRef;
            }
            set
            {
                OnSourceRefChanging(value);
                ReportPropertyChanging("SourceRef");
                _SourceRef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceRef");
                OnSourceRefChanged();
            }
        }
        private global::System.String _SourceRef;
        partial void OnSourceRefChanging(global::System.String value);
        partial void OnSourceRefChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="ReorderMarriages_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ReorderMarriages_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Column1
        {
            get
            {
                return _Column1;
            }
            set
            {
                OnColumn1Changing(value);
                ReportPropertyChanging("Column1");
                _Column1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Column1");
                OnColumn1Changed();
            }
        }
        private Nullable<global::System.Guid> _Column1;
        partial void OnColumn1Changing(Nullable<global::System.Guid> value);
        partial void OnColumn1Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="USP_Marriages_Filtered_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class USP_Marriages_Filtered_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USP_Marriages_Filtered_Result object.
        /// </summary>
        /// <param name="marriage_Id">Initial value of the Marriage_Id property.</param>
        public static USP_Marriages_Filtered_Result CreateUSP_Marriages_Filtered_Result(global::System.Guid marriage_Id)
        {
            USP_Marriages_Filtered_Result uSP_Marriages_Filtered_Result = new USP_Marriages_Filtered_Result();
            uSP_Marriages_Filtered_Result.Marriage_Id = marriage_Id;
            return uSP_Marriages_Filtered_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Marriage_Id
        {
            get
            {
                return _Marriage_Id;
            }
            set
            {
                OnMarriage_IdChanging(value);
                ReportPropertyChanging("Marriage_Id");
                _Marriage_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Marriage_Id");
                OnMarriage_IdChanged();
            }
        }
        private global::System.Guid _Marriage_Id;
        partial void OnMarriage_IdChanging(global::System.Guid value);
        partial void OnMarriage_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleCName
        {
            get
            {
                return _MaleCName;
            }
            set
            {
                OnMaleCNameChanging(value);
                ReportPropertyChanging("MaleCName");
                _MaleCName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleCName");
                OnMaleCNameChanged();
            }
        }
        private global::System.String _MaleCName;
        partial void OnMaleCNameChanging(global::System.String value);
        partial void OnMaleCNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleSName
        {
            get
            {
                return _MaleSName;
            }
            set
            {
                OnMaleSNameChanging(value);
                ReportPropertyChanging("MaleSName");
                _MaleSName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleSName");
                OnMaleSNameChanged();
            }
        }
        private global::System.String _MaleSName;
        partial void OnMaleSNameChanging(global::System.String value);
        partial void OnMaleSNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleLocation
        {
            get
            {
                return _MaleLocation;
            }
            set
            {
                OnMaleLocationChanging(value);
                ReportPropertyChanging("MaleLocation");
                _MaleLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleLocation");
                OnMaleLocationChanged();
            }
        }
        private global::System.String _MaleLocation;
        partial void OnMaleLocationChanging(global::System.String value);
        partial void OnMaleLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleInfo
        {
            get
            {
                return _MaleInfo;
            }
            set
            {
                OnMaleInfoChanging(value);
                ReportPropertyChanging("MaleInfo");
                _MaleInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleInfo");
                OnMaleInfoChanged();
            }
        }
        private global::System.String _MaleInfo;
        partial void OnMaleInfoChanging(global::System.String value);
        partial void OnMaleInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleCName
        {
            get
            {
                return _FemaleCName;
            }
            set
            {
                OnFemaleCNameChanging(value);
                ReportPropertyChanging("FemaleCName");
                _FemaleCName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleCName");
                OnFemaleCNameChanged();
            }
        }
        private global::System.String _FemaleCName;
        partial void OnFemaleCNameChanging(global::System.String value);
        partial void OnFemaleCNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleSName
        {
            get
            {
                return _FemaleSName;
            }
            set
            {
                OnFemaleSNameChanging(value);
                ReportPropertyChanging("FemaleSName");
                _FemaleSName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleSName");
                OnFemaleSNameChanged();
            }
        }
        private global::System.String _FemaleSName;
        partial void OnFemaleSNameChanging(global::System.String value);
        partial void OnFemaleSNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleLocation
        {
            get
            {
                return _FemaleLocation;
            }
            set
            {
                OnFemaleLocationChanging(value);
                ReportPropertyChanging("FemaleLocation");
                _FemaleLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleLocation");
                OnFemaleLocationChanged();
            }
        }
        private global::System.String _FemaleLocation;
        partial void OnFemaleLocationChanging(global::System.String value);
        partial void OnFemaleLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleInfo
        {
            get
            {
                return _FemaleInfo;
            }
            set
            {
                OnFemaleInfoChanging(value);
                ReportPropertyChanging("FemaleInfo");
                _FemaleInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleInfo");
                OnFemaleInfoChanged();
            }
        }
        private global::System.String _FemaleInfo;
        partial void OnFemaleInfoChanging(global::System.String value);
        partial void OnFemaleInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarriageLocation
        {
            get
            {
                return _MarriageLocation;
            }
            set
            {
                OnMarriageLocationChanging(value);
                ReportPropertyChanging("MarriageLocation");
                _MarriageLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarriageLocation");
                OnMarriageLocationChanged();
            }
        }
        private global::System.String _MarriageLocation;
        partial void OnMarriageLocationChanging(global::System.String value);
        partial void OnMarriageLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> YearIntVal
        {
            get
            {
                return _YearIntVal;
            }
            set
            {
                OnYearIntValChanging(value);
                ReportPropertyChanging("YearIntVal");
                _YearIntVal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearIntVal");
                OnYearIntValChanged();
            }
        }
        private Nullable<global::System.Int32> _YearIntVal;
        partial void OnYearIntValChanging(Nullable<global::System.Int32> value);
        partial void OnYearIntValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MarriageCounty
        {
            get
            {
                return _MarriageCounty;
            }
            set
            {
                OnMarriageCountyChanging(value);
                ReportPropertyChanging("MarriageCounty");
                _MarriageCounty = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MarriageCounty");
                OnMarriageCountyChanged();
            }
        }
        private global::System.String _MarriageCounty;
        partial void OnMarriageCountyChanging(global::System.String value);
        partial void OnMarriageCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness1
        {
            get
            {
                return _Witness1;
            }
            set
            {
                OnWitness1Changing(value);
                ReportPropertyChanging("Witness1");
                _Witness1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness1");
                OnWitness1Changed();
            }
        }
        private global::System.String _Witness1;
        partial void OnWitness1Changing(global::System.String value);
        partial void OnWitness1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness3
        {
            get
            {
                return _Witness3;
            }
            set
            {
                OnWitness3Changing(value);
                ReportPropertyChanging("Witness3");
                _Witness3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness3");
                OnWitness3Changed();
            }
        }
        private global::System.String _Witness3;
        partial void OnWitness3Changing(global::System.String value);
        partial void OnWitness3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness2
        {
            get
            {
                return _Witness2;
            }
            set
            {
                OnWitness2Changing(value);
                ReportPropertyChanging("Witness2");
                _Witness2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness2");
                OnWitness2Changed();
            }
        }
        private global::System.String _Witness2;
        partial void OnWitness2Changing(global::System.String value);
        partial void OnWitness2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Witness4
        {
            get
            {
                return _Witness4;
            }
            set
            {
                OnWitness4Changing(value);
                ReportPropertyChanging("Witness4");
                _Witness4 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Witness4");
                OnWitness4Changed();
            }
        }
        private global::System.String _Witness4;
        partial void OnWitness4Changing(global::System.String value);
        partial void OnWitness4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAdded;
        partial void OnDateAddedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateLastEdit
        {
            get
            {
                return _DateLastEdit;
            }
            set
            {
                OnDateLastEditChanging(value);
                ReportPropertyChanging("DateLastEdit");
                _DateLastEdit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateLastEdit");
                OnDateLastEditChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateLastEdit;
        partial void OnDateLastEditChanging(Nullable<global::System.DateTime> value);
        partial void OnDateLastEditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrigMaleSurname
        {
            get
            {
                return _OrigMaleSurname;
            }
            set
            {
                OnOrigMaleSurnameChanging(value);
                ReportPropertyChanging("OrigMaleSurname");
                _OrigMaleSurname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrigMaleSurname");
                OnOrigMaleSurnameChanged();
            }
        }
        private global::System.String _OrigMaleSurname;
        partial void OnOrigMaleSurnameChanging(global::System.String value);
        partial void OnOrigMaleSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrigFemaleSurname
        {
            get
            {
                return _OrigFemaleSurname;
            }
            set
            {
                OnOrigFemaleSurnameChanging(value);
                ReportPropertyChanging("OrigFemaleSurname");
                _OrigFemaleSurname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrigFemaleSurname");
                OnOrigFemaleSurnameChanged();
            }
        }
        private global::System.String _OrigFemaleSurname;
        partial void OnOrigFemaleSurnameChanging(global::System.String value);
        partial void OnOrigFemaleSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MaleOccupation
        {
            get
            {
                return _MaleOccupation;
            }
            set
            {
                OnMaleOccupationChanging(value);
                ReportPropertyChanging("MaleOccupation");
                _MaleOccupation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MaleOccupation");
                OnMaleOccupationChanged();
            }
        }
        private global::System.String _MaleOccupation;
        partial void OnMaleOccupationChanging(global::System.String value);
        partial void OnMaleOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FemaleOccupation
        {
            get
            {
                return _FemaleOccupation;
            }
            set
            {
                OnFemaleOccupationChanging(value);
                ReportPropertyChanging("FemaleOccupation");
                _FemaleOccupation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FemaleOccupation");
                OnFemaleOccupationChanged();
            }
        }
        private global::System.String _FemaleOccupation;
        partial void OnFemaleOccupationChanging(global::System.String value);
        partial void OnFemaleOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FemaleIsKnownWidow
        {
            get
            {
                return _FemaleIsKnownWidow;
            }
            set
            {
                OnFemaleIsKnownWidowChanging(value);
                ReportPropertyChanging("FemaleIsKnownWidow");
                _FemaleIsKnownWidow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FemaleIsKnownWidow");
                OnFemaleIsKnownWidowChanged();
            }
        }
        private Nullable<global::System.Boolean> _FemaleIsKnownWidow;
        partial void OnFemaleIsKnownWidowChanging(Nullable<global::System.Boolean> value);
        partial void OnFemaleIsKnownWidowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MaleIsKnownWidower
        {
            get
            {
                return _MaleIsKnownWidower;
            }
            set
            {
                OnMaleIsKnownWidowerChanging(value);
                ReportPropertyChanging("MaleIsKnownWidower");
                _MaleIsKnownWidower = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaleIsKnownWidower");
                OnMaleIsKnownWidowerChanged();
            }
        }
        private Nullable<global::System.Boolean> _MaleIsKnownWidower;
        partial void OnMaleIsKnownWidowerChanging(Nullable<global::System.Boolean> value);
        partial void OnMaleIsKnownWidowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBanns
        {
            get
            {
                return _IsBanns;
            }
            set
            {
                OnIsBannsChanging(value);
                ReportPropertyChanging("IsBanns");
                _IsBanns = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBanns");
                OnIsBannsChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBanns;
        partial void OnIsBannsChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBannsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLicence
        {
            get
            {
                return _IsLicence;
            }
            set
            {
                OnIsLicenceChanging(value);
                ReportPropertyChanging("IsLicence");
                _IsLicence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLicence");
                OnIsLicenceChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLicence;
        partial void OnIsLicenceChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLicenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MarriageLocationId
        {
            get
            {
                return _MarriageLocationId;
            }
            set
            {
                OnMarriageLocationIdChanging(value);
                ReportPropertyChanging("MarriageLocationId");
                _MarriageLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarriageLocationId");
                OnMarriageLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _MarriageLocationId;
        partial void OnMarriageLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnMarriageLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MaleLocationId
        {
            get
            {
                return _MaleLocationId;
            }
            set
            {
                OnMaleLocationIdChanging(value);
                ReportPropertyChanging("MaleLocationId");
                _MaleLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaleLocationId");
                OnMaleLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _MaleLocationId;
        partial void OnMaleLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnMaleLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FemaleLocationId
        {
            get
            {
                return _FemaleLocationId;
            }
            set
            {
                OnFemaleLocationIdChanging(value);
                ReportPropertyChanging("FemaleLocationId");
                _FemaleLocationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FemaleLocationId");
                OnFemaleLocationIdChanged();
            }
        }
        private Nullable<global::System.Guid> _FemaleLocationId;
        partial void OnFemaleLocationIdChanging(Nullable<global::System.Guid> value);
        partial void OnFemaleLocationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaleBirthYear
        {
            get
            {
                return _MaleBirthYear;
            }
            set
            {
                OnMaleBirthYearChanging(value);
                ReportPropertyChanging("MaleBirthYear");
                _MaleBirthYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaleBirthYear");
                OnMaleBirthYearChanged();
            }
        }
        private Nullable<global::System.Int32> _MaleBirthYear;
        partial void OnMaleBirthYearChanging(Nullable<global::System.Int32> value);
        partial void OnMaleBirthYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FemaleBirthYear
        {
            get
            {
                return _FemaleBirthYear;
            }
            set
            {
                OnFemaleBirthYearChanging(value);
                ReportPropertyChanging("FemaleBirthYear");
                _FemaleBirthYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FemaleBirthYear");
                OnFemaleBirthYearChanged();
            }
        }
        private Nullable<global::System.Int32> _FemaleBirthYear;
        partial void OnFemaleBirthYearChanging(Nullable<global::System.Int32> value);
        partial void OnFemaleBirthYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalEvents
        {
            get
            {
                return _TotalEvents;
            }
            set
            {
                OnTotalEventsChanging(value);
                ReportPropertyChanging("TotalEvents");
                _TotalEvents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalEvents");
                OnTotalEventsChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalEvents;
        partial void OnTotalEventsChanging(Nullable<global::System.Int32> value);
        partial void OnTotalEventsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventPriority
        {
            get
            {
                return _EventPriority;
            }
            set
            {
                OnEventPriorityChanging(value);
                ReportPropertyChanging("EventPriority");
                _EventPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventPriority");
                OnEventPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _EventPriority;
        partial void OnEventPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnEventPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MaleId
        {
            get
            {
                return _MaleId;
            }
            set
            {
                OnMaleIdChanging(value);
                ReportPropertyChanging("MaleId");
                _MaleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaleId");
                OnMaleIdChanged();
            }
        }
        private Nullable<global::System.Guid> _MaleId;
        partial void OnMaleIdChanging(Nullable<global::System.Guid> value);
        partial void OnMaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> FemaleId
        {
            get
            {
                return _FemaleId;
            }
            set
            {
                OnFemaleIdChanging(value);
                ReportPropertyChanging("FemaleId");
                _FemaleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FemaleId");
                OnFemaleIdChanged();
            }
        }
        private Nullable<global::System.Guid> _FemaleId;
        partial void OnFemaleIdChanging(Nullable<global::System.Guid> value);
        partial void OnFemaleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeleted;
        partial void OnIsDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsComposite
        {
            get
            {
                return _IsComposite;
            }
            set
            {
                OnIsCompositeChanging(value);
                ReportPropertyChanging("IsComposite");
                _IsComposite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsComposite");
                OnIsCompositeChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsComposite;
        partial void OnIsCompositeChanging(Nullable<global::System.Boolean> value);
        partial void OnIsCompositeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UniqueRef
        {
            get
            {
                return _UniqueRef;
            }
            set
            {
                OnUniqueRefChanging(value);
                ReportPropertyChanging("UniqueRef");
                _UniqueRef = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueRef");
                OnUniqueRefChanged();
            }
        }
        private Nullable<global::System.Guid> _UniqueRef;
        partial void OnUniqueRefChanging(Nullable<global::System.Guid> value);
        partial void OnUniqueRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String links
        {
            get
            {
                return _links;
            }
            set
            {
                OnlinksChanging(value);
                ReportPropertyChanging("links");
                _links = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("links");
                OnlinksChanged();
            }
        }
        private global::System.String _links;
        partial void OnlinksChanging(global::System.String value);
        partial void OnlinksChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="USP_Persons_Filtered_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class USP_Persons_Filtered_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new USP_Persons_Filtered_Result object.
        /// </summary>
        /// <param name="person_id">Initial value of the Person_id property.</param>
        /// <param name="christianName">Initial value of the ChristianName property.</param>
        /// <param name="surname">Initial value of the Surname property.</param>
        /// <param name="birthLocation">Initial value of the BirthLocation property.</param>
        /// <param name="birthDateStr">Initial value of the BirthDateStr property.</param>
        /// <param name="baptismDateStr">Initial value of the BaptismDateStr property.</param>
        /// <param name="deathDateStr">Initial value of the DeathDateStr property.</param>
        /// <param name="deathLocation">Initial value of the DeathLocation property.</param>
        /// <param name="fatherChristianName">Initial value of the FatherChristianName property.</param>
        /// <param name="fatherSurname">Initial value of the FatherSurname property.</param>
        /// <param name="motherChristianName">Initial value of the MotherChristianName property.</param>
        /// <param name="motherSurname">Initial value of the MotherSurname property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        /// <param name="birthInt">Initial value of the BirthInt property.</param>
        /// <param name="bapInt">Initial value of the BapInt property.</param>
        /// <param name="deathInt">Initial value of the DeathInt property.</param>
        /// <param name="tree_links">Initial value of the tree_links property.</param>
        /// <param name="occupation">Initial value of the Occupation property.</param>
        /// <param name="referenceLocation">Initial value of the ReferenceLocation property.</param>
        /// <param name="referenceDateStr">Initial value of the ReferenceDateStr property.</param>
        /// <param name="referenceDateInt">Initial value of the ReferenceDateInt property.</param>
        /// <param name="spouseName">Initial value of the SpouseName property.</param>
        /// <param name="spouseSurname">Initial value of the SpouseSurname property.</param>
        /// <param name="fatherOccupation">Initial value of the FatherOccupation property.</param>
        /// <param name="totalEvents">Initial value of the TotalEvents property.</param>
        /// <param name="eventPriority">Initial value of the EventPriority property.</param>
        public static USP_Persons_Filtered_Result CreateUSP_Persons_Filtered_Result(global::System.Guid person_id, global::System.String christianName, global::System.String surname, global::System.String birthLocation, global::System.String birthDateStr, global::System.String baptismDateStr, global::System.String deathDateStr, global::System.String deathLocation, global::System.String fatherChristianName, global::System.String fatherSurname, global::System.String motherChristianName, global::System.String motherSurname, global::System.String source, global::System.Int32 birthInt, global::System.Int32 bapInt, global::System.Int32 deathInt, global::System.String tree_links, global::System.String occupation, global::System.String referenceLocation, global::System.String referenceDateStr, global::System.Int32 referenceDateInt, global::System.String spouseName, global::System.String spouseSurname, global::System.String fatherOccupation, global::System.Int32 totalEvents, global::System.Int32 eventPriority)
        {
            USP_Persons_Filtered_Result uSP_Persons_Filtered_Result = new USP_Persons_Filtered_Result();
            uSP_Persons_Filtered_Result.Person_id = person_id;
            uSP_Persons_Filtered_Result.ChristianName = christianName;
            uSP_Persons_Filtered_Result.Surname = surname;
            uSP_Persons_Filtered_Result.BirthLocation = birthLocation;
            uSP_Persons_Filtered_Result.BirthDateStr = birthDateStr;
            uSP_Persons_Filtered_Result.BaptismDateStr = baptismDateStr;
            uSP_Persons_Filtered_Result.DeathDateStr = deathDateStr;
            uSP_Persons_Filtered_Result.DeathLocation = deathLocation;
            uSP_Persons_Filtered_Result.FatherChristianName = fatherChristianName;
            uSP_Persons_Filtered_Result.FatherSurname = fatherSurname;
            uSP_Persons_Filtered_Result.MotherChristianName = motherChristianName;
            uSP_Persons_Filtered_Result.MotherSurname = motherSurname;
            uSP_Persons_Filtered_Result.Source = source;
            uSP_Persons_Filtered_Result.BirthInt = birthInt;
            uSP_Persons_Filtered_Result.BapInt = bapInt;
            uSP_Persons_Filtered_Result.DeathInt = deathInt;
            uSP_Persons_Filtered_Result.tree_links = tree_links;
            uSP_Persons_Filtered_Result.Occupation = occupation;
            uSP_Persons_Filtered_Result.ReferenceLocation = referenceLocation;
            uSP_Persons_Filtered_Result.ReferenceDateStr = referenceDateStr;
            uSP_Persons_Filtered_Result.ReferenceDateInt = referenceDateInt;
            uSP_Persons_Filtered_Result.SpouseName = spouseName;
            uSP_Persons_Filtered_Result.SpouseSurname = spouseSurname;
            uSP_Persons_Filtered_Result.FatherOccupation = fatherOccupation;
            uSP_Persons_Filtered_Result.TotalEvents = totalEvents;
            uSP_Persons_Filtered_Result.EventPriority = eventPriority;
            return uSP_Persons_Filtered_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Person_id
        {
            get
            {
                return _Person_id;
            }
            set
            {
                OnPerson_idChanging(value);
                ReportPropertyChanging("Person_id");
                _Person_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Person_id");
                OnPerson_idChanged();
            }
        }
        private global::System.Guid _Person_id;
        partial void OnPerson_idChanging(global::System.Guid value);
        partial void OnPerson_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChristianName
        {
            get
            {
                return _ChristianName;
            }
            set
            {
                OnChristianNameChanging(value);
                ReportPropertyChanging("ChristianName");
                _ChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChristianName");
                OnChristianNameChanged();
            }
        }
        private global::System.String _ChristianName;
        partial void OnChristianNameChanging(global::System.String value);
        partial void OnChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthLocation
        {
            get
            {
                return _BirthLocation;
            }
            set
            {
                OnBirthLocationChanging(value);
                ReportPropertyChanging("BirthLocation");
                _BirthLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthLocation");
                OnBirthLocationChanged();
            }
        }
        private global::System.String _BirthLocation;
        partial void OnBirthLocationChanging(global::System.String value);
        partial void OnBirthLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BirthDateStr
        {
            get
            {
                return _BirthDateStr;
            }
            set
            {
                OnBirthDateStrChanging(value);
                ReportPropertyChanging("BirthDateStr");
                _BirthDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BirthDateStr");
                OnBirthDateStrChanged();
            }
        }
        private global::System.String _BirthDateStr;
        partial void OnBirthDateStrChanging(global::System.String value);
        partial void OnBirthDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BaptismDateStr
        {
            get
            {
                return _BaptismDateStr;
            }
            set
            {
                OnBaptismDateStrChanging(value);
                ReportPropertyChanging("BaptismDateStr");
                _BaptismDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BaptismDateStr");
                OnBaptismDateStrChanged();
            }
        }
        private global::System.String _BaptismDateStr;
        partial void OnBaptismDateStrChanging(global::System.String value);
        partial void OnBaptismDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathDateStr
        {
            get
            {
                return _DeathDateStr;
            }
            set
            {
                OnDeathDateStrChanging(value);
                ReportPropertyChanging("DeathDateStr");
                _DeathDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathDateStr");
                OnDeathDateStrChanged();
            }
        }
        private global::System.String _DeathDateStr;
        partial void OnDeathDateStrChanging(global::System.String value);
        partial void OnDeathDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeathLocation
        {
            get
            {
                return _DeathLocation;
            }
            set
            {
                OnDeathLocationChanging(value);
                ReportPropertyChanging("DeathLocation");
                _DeathLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeathLocation");
                OnDeathLocationChanged();
            }
        }
        private global::System.String _DeathLocation;
        partial void OnDeathLocationChanging(global::System.String value);
        partial void OnDeathLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherChristianName
        {
            get
            {
                return _FatherChristianName;
            }
            set
            {
                OnFatherChristianNameChanging(value);
                ReportPropertyChanging("FatherChristianName");
                _FatherChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherChristianName");
                OnFatherChristianNameChanged();
            }
        }
        private global::System.String _FatherChristianName;
        partial void OnFatherChristianNameChanging(global::System.String value);
        partial void OnFatherChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherSurname
        {
            get
            {
                return _FatherSurname;
            }
            set
            {
                OnFatherSurnameChanging(value);
                ReportPropertyChanging("FatherSurname");
                _FatherSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherSurname");
                OnFatherSurnameChanged();
            }
        }
        private global::System.String _FatherSurname;
        partial void OnFatherSurnameChanging(global::System.String value);
        partial void OnFatherSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MotherChristianName
        {
            get
            {
                return _MotherChristianName;
            }
            set
            {
                OnMotherChristianNameChanging(value);
                ReportPropertyChanging("MotherChristianName");
                _MotherChristianName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MotherChristianName");
                OnMotherChristianNameChanged();
            }
        }
        private global::System.String _MotherChristianName;
        partial void OnMotherChristianNameChanging(global::System.String value);
        partial void OnMotherChristianNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MotherSurname
        {
            get
            {
                return _MotherSurname;
            }
            set
            {
                OnMotherSurnameChanging(value);
                ReportPropertyChanging("MotherSurname");
                _MotherSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MotherSurname");
                OnMotherSurnameChanged();
            }
        }
        private global::System.String _MotherSurname;
        partial void OnMotherSurnameChanging(global::System.String value);
        partial void OnMotherSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BirthInt
        {
            get
            {
                return _BirthInt;
            }
            set
            {
                OnBirthIntChanging(value);
                ReportPropertyChanging("BirthInt");
                _BirthInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthInt");
                OnBirthIntChanged();
            }
        }
        private global::System.Int32 _BirthInt;
        partial void OnBirthIntChanging(global::System.Int32 value);
        partial void OnBirthIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BapInt
        {
            get
            {
                return _BapInt;
            }
            set
            {
                OnBapIntChanging(value);
                ReportPropertyChanging("BapInt");
                _BapInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BapInt");
                OnBapIntChanged();
            }
        }
        private global::System.Int32 _BapInt;
        partial void OnBapIntChanging(global::System.Int32 value);
        partial void OnBapIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeathInt
        {
            get
            {
                return _DeathInt;
            }
            set
            {
                OnDeathIntChanging(value);
                ReportPropertyChanging("DeathInt");
                _DeathInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeathInt");
                OnDeathIntChanged();
            }
        }
        private global::System.Int32 _DeathInt;
        partial void OnDeathIntChanging(global::System.Int32 value);
        partial void OnDeathIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tree_links
        {
            get
            {
                return _tree_links;
            }
            set
            {
                Ontree_linksChanging(value);
                ReportPropertyChanging("tree_links");
                _tree_links = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("tree_links");
                Ontree_linksChanged();
            }
        }
        private global::System.String _tree_links;
        partial void Ontree_linksChanging(global::System.String value);
        partial void Ontree_linksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Occupation
        {
            get
            {
                return _Occupation;
            }
            set
            {
                OnOccupationChanging(value);
                ReportPropertyChanging("Occupation");
                _Occupation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Occupation");
                OnOccupationChanged();
            }
        }
        private global::System.String _Occupation;
        partial void OnOccupationChanging(global::System.String value);
        partial void OnOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceLocation
        {
            get
            {
                return _ReferenceLocation;
            }
            set
            {
                OnReferenceLocationChanging(value);
                ReportPropertyChanging("ReferenceLocation");
                _ReferenceLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceLocation");
                OnReferenceLocationChanged();
            }
        }
        private global::System.String _ReferenceLocation;
        partial void OnReferenceLocationChanging(global::System.String value);
        partial void OnReferenceLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReferenceDateStr
        {
            get
            {
                return _ReferenceDateStr;
            }
            set
            {
                OnReferenceDateStrChanging(value);
                ReportPropertyChanging("ReferenceDateStr");
                _ReferenceDateStr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReferenceDateStr");
                OnReferenceDateStrChanged();
            }
        }
        private global::System.String _ReferenceDateStr;
        partial void OnReferenceDateStrChanging(global::System.String value);
        partial void OnReferenceDateStrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReferenceDateInt
        {
            get
            {
                return _ReferenceDateInt;
            }
            set
            {
                OnReferenceDateIntChanging(value);
                ReportPropertyChanging("ReferenceDateInt");
                _ReferenceDateInt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceDateInt");
                OnReferenceDateIntChanged();
            }
        }
        private global::System.Int32 _ReferenceDateInt;
        partial void OnReferenceDateIntChanging(global::System.Int32 value);
        partial void OnReferenceDateIntChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpouseName
        {
            get
            {
                return _SpouseName;
            }
            set
            {
                OnSpouseNameChanging(value);
                ReportPropertyChanging("SpouseName");
                _SpouseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpouseName");
                OnSpouseNameChanged();
            }
        }
        private global::System.String _SpouseName;
        partial void OnSpouseNameChanging(global::System.String value);
        partial void OnSpouseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpouseSurname
        {
            get
            {
                return _SpouseSurname;
            }
            set
            {
                OnSpouseSurnameChanging(value);
                ReportPropertyChanging("SpouseSurname");
                _SpouseSurname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpouseSurname");
                OnSpouseSurnameChanged();
            }
        }
        private global::System.String _SpouseSurname;
        partial void OnSpouseSurnameChanging(global::System.String value);
        partial void OnSpouseSurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FatherOccupation
        {
            get
            {
                return _FatherOccupation;
            }
            set
            {
                OnFatherOccupationChanging(value);
                ReportPropertyChanging("FatherOccupation");
                _FatherOccupation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FatherOccupation");
                OnFatherOccupationChanged();
            }
        }
        private global::System.String _FatherOccupation;
        partial void OnFatherOccupationChanging(global::System.String value);
        partial void OnFatherOccupationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UniqueRef
        {
            get
            {
                return _UniqueRef;
            }
            set
            {
                OnUniqueRefChanging(value);
                ReportPropertyChanging("UniqueRef");
                _UniqueRef = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueRef");
                OnUniqueRefChanged();
            }
        }
        private Nullable<global::System.Guid> _UniqueRef;
        partial void OnUniqueRefChanging(Nullable<global::System.Guid> value);
        partial void OnUniqueRefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalEvents
        {
            get
            {
                return _TotalEvents;
            }
            set
            {
                OnTotalEventsChanging(value);
                ReportPropertyChanging("TotalEvents");
                _TotalEvents = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalEvents");
                OnTotalEventsChanged();
            }
        }
        private global::System.Int32 _TotalEvents;
        partial void OnTotalEventsChanging(global::System.Int32 value);
        partial void OnTotalEventsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventPriority
        {
            get
            {
                return _EventPriority;
            }
            set
            {
                OnEventPriorityChanging(value);
                ReportPropertyChanging("EventPriority");
                _EventPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventPriority");
                OnEventPriorityChanged();
            }
        }
        private global::System.Int32 _EventPriority;
        partial void OnEventPriorityChanging(global::System.Int32 value);
        partial void OnEventPriorityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="GeneralModel", Name="uspGetParishSources_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspGetParishSources_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SourceMappingParishId
        {
            get
            {
                return _SourceMappingParishId;
            }
            set
            {
                OnSourceMappingParishIdChanging(value);
                ReportPropertyChanging("SourceMappingParishId");
                _SourceMappingParishId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceMappingParishId");
                OnSourceMappingParishIdChanged();
            }
        }
        private Nullable<global::System.Guid> _SourceMappingParishId;
        partial void OnSourceMappingParishIdChanging(Nullable<global::System.Guid> value);
        partial void OnSourceMappingParishIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MapTypeId
        {
            get
            {
                return _MapTypeId;
            }
            set
            {
                OnMapTypeIdChanging(value);
                ReportPropertyChanging("MapTypeId");
                _MapTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MapTypeId");
                OnMapTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MapTypeId;
        partial void OnMapTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnMapTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SourceId
        {
            get
            {
                return _SourceId;
            }
            set
            {
                OnSourceIdChanging(value);
                ReportPropertyChanging("SourceId");
                _SourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceId");
                OnSourceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _SourceId;
        partial void OnSourceIdChanging(Nullable<global::System.Guid> value);
        partial void OnSourceIdChanged();

        #endregion

    }

    #endregion

    
}
