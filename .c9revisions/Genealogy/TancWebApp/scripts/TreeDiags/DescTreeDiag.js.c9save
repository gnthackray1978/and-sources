{"ts":1355084461826,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"﻿\n\n\n\nvar _tree = null;\nvar _moustQueue = new Array();\nvar _mouseDown = false;\nvar _isMobile = false;\n\n//var _screenWidth = screen.width;\n//var _screenHeight = screen.height;\n\n$(window).bind('hashchange', function() {\n  // alert('hash changed');\n   run();\n});\n\n\n\n\n\n\n$(document).ready(function () {\n\n \n\n    createLimitedHeader(run);\n});\n\n\n\n\n\n\nfunction run() {\n    var params = {};\n    var _sourceId = getParameterByName('sid', '');\n    var _personId = getParameterByName('id', '');\n\n\n    //switch css here!!!\n    //switch css here!!!\n    //switch css here!!!\n\n    //what is the plan?\n    //so we have a label\n    //and a control that we need to move\n    //depending on if we are running on a mobile or not.\n\n    //we need a new set of styling classes\n    //but we've got to keep the existing classes intact\n    //because they're used to identify stuff. \n\n    // so we should have mobile set and desktop set \n    // the existing set should be empty.\n\n\n\n    var int;\n    // this is better =>\n    //You can detect iPhone and Android devices by inspecting the navigator.userAgent property within the DOM:\n    //************\n\n    var is_touch_device = 'ontouchstart' in document.documentElement;\n\n    var mode = '';\n\n    if (is_touch_device == true) {\n        _isMobile = true;\n        mode = SwitchMode(true);\n\n        $(mode).bind('touchstart', function (evt) {\n            evt.preventDefault();\n\n            var _dir = '';\n\n            if (evt.target.id == \"up\") _dir = 'UP';\n            if (evt.target.id == \"dn\") _dir = 'DOWN';\n            if (evt.target.id == \"we\") _dir = 'WEST';\n            if (evt.target.id == \"no\") _dir = 'NORTH';\n            if (evt.target.id == \"es\") _dir = 'EAST';\n            if (evt.target.id == \"so\") _dir = 'SOUTH';\n\n            if (_tree != null) {\n                int = setInterval(function () { _tree.MoveTree(_dir); }, 100);\n            }\n        });\n\n\n        $(mode).bind('touchend', function (evt) {\n\n            evt.preventDefault();\n            clearInterval(int);\n        });\n\n    }\n    else {\n        _isMobile = false;\n        mode = SwitchMode(false);\n\n\n        $(mode).mousedown(function (evt) {\n            var _dir = '';\n\n            if (evt.target.id == \"up\") _dir = 'UP';\n            if (evt.target.id == \"dn\") _dir = 'DOWN';\n            if (evt.target.id == \"we\") _dir = 'WEST';\n            if (evt.target.id == \"no\") _dir = 'NORTH';\n            if (evt.target.id == \"es\") _dir = 'EAST';\n            if (evt.target.id == \"so\") _dir = 'SOUTH';\n\n            if (_tree != null) {\n                int = setInterval(function () { _tree.MoveTree(_dir); }, 100);\n            }\n\n        }).mouseup(function () {\n            clearInterval(int);\n        });\n\n        gLoop = setTimeout(GameLoop, 1000 / 50);\n\n        $(\"#myCanvas\").mousedown(function (evt) {\n            if (_tree != null) {\n                _mouseDown = true;\n            }\n        });\n\n\n        $(\"#myCanvas\").mouseup(function (evt) {\n\n            if (_tree != null) {\n                _mouseDown = false;\n\n                //     _tree.SetZoomStart();\n\n                var _point = new Array(1000000, 1000000);\n\n\n                _moustQueue[_moustQueue.length] = _point;\n\n            }\n        });\n\n\n        $(\"#myCanvas\").click(function (evt) {\n            if (_tree != null) {\n                //var _point = new Array(evt.clientX, evt.clientY);\n\n                _tree.PerformClick(evt.clientX, evt.clientY);\n\n                if (_tree.refreshData) {\n                    window.location.hash = _tree.qryString;\n\n\n                }\n\n\n                var _point = new Array(1000000, 1000000);\n\n\n                _moustQueue[_moustQueue.length] = _point;\n            }\n        });\n\n\n        $(\"#myCanvas\").mousemove(function (evt) {\n            if (_tree != null) {\n                var _point = new Array(evt.clientX, evt.clientY);\n\n                //  console.log(_point[0] + '-' + _point[1] + '_' + _screenWidth)\n                _tree.SetMouse(_point[0], _point[1]);\n\n                if (_mouseDown) {\n\n                    _moustQueue.push(_point);\n                }\n            }\n        });\n\n    }\n\n\n    if (_isMobile) {\n        $(\"#ml .message\").html('<span>Downloading</span>');\n    } else {\n        $(\"#ml .message\").html('<span>Downloading Descendant Tree</span>');\n    }\n\n    if(_sourceId == '' || _sourceId == '00000000-0000-0000-0000-000000000000')\n    {\n        params[0] = _sourceId;\n        params[1] = _personId;\n        twaGetJSON('/Trees/GetTreeDiagPerson', params, processData);\n    }\n    else\n    {\n        params[0] = _sourceId;\n        twaGetJSON('/Trees/GetTreeDiag', params, processData);\n    }\n}\n\n\nfunction processData(data) {\n\n\n    _tree = new Tree();\n    var _zoomLevel = getParameterByName('zoom', '');\n\n    _tree.SetInitialValues(Number(_zoomLevel), 30.0, 120.0, 70.0, 70.0, 100.0, 20.0, 40.0, 20.0, screen.width, screen.height);\n//    var _personId = '913501a6-1216-4764-be8c-ae11fd3a0a8b';\n//    var _zoomLevel = 100;\n//    var _xpos = 750.0;\n//    var _ypos = 100.0;\n\n    _tree.generations = data.Generations;\n\n    _tree.familiesPerGeneration = data.FamiliesPerGeneration;\n    _tree.familySpanLines = data.FamilySpanLines;\n    _tree.childlessMarriages = data.ChildlessMarriages;\n    _tree.sourceId = getParameterByName('sid', '');\n\n    var _personId = getParameterByName('id', '');\n\n    var _xpos = getParameterByName('xpos', '');\n    var _ypos = getParameterByName('ypos', '');\n\n\n  \n    _tree.RelocatePerson(_personId,_xpos,_ypos);\n\n\n    if (_tree.generations.length > 0) {\n        if (_tree.generations[0].length > 0) {\n            if (_isMobile) {\n                $(\"#ml .message\").html('<span>' + _tree.generations[0][0].Name + '</span>');\n            } else {\n                $(\"#ml .message\").html('<span>Descendants of ' + _tree.generations[0][0].Name + '</span>');\n            }\n        }\n    }\n\n\n    _tree.refreshData = false;\n}\n\n\nfunction GameLoop() {\n\n    while (_moustQueue.length > 0) {\n        var _point = _moustQueue.shift();\n\n\n        _tree.SetCentrePoint(_point[0], _point[1]);\n        _tree.DrawTree();\n    }\n\n    setTimeout(GameLoop, 1000 / 50);\n}\n\n\nfunction SwitchMode(ismobile) {\n\n    //false = remove\n\n    var removeoradd_desktop = false;\n    var removeoradd_mobile = false;\n    var retVal = '';\n\n    if (ismobile) {\n        retVal = '.mobile_button_box';\n        removeoradd_desktop = false;\n        removeoradd_mobile = true;\n    } else {\n        retVal = '.desktop_button_box';\n        removeoradd_desktop = true;\n        removeoradd_mobile = false;\n    }\n\n\n\n    $(\"#ml\").toggleClass('desktop_map_label', removeoradd_desktop);\n    $(\"#mc\").toggleClass('desktop_map_control', removeoradd_desktop);\n    $(\"#up\").toggleClass('desktop_u', removeoradd_desktop);\n    $(\"#up\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#dn\").toggleClass('desktop_d', removeoradd_desktop);\n    $(\"#dn\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#we\").toggleClass('desktop_w', removeoradd_desktop);\n    $(\"#we\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#no\").toggleClass('desktop_n', removeoradd_desktop);\n    $(\"#no\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#es\").toggleClass('desktop_e', removeoradd_desktop);\n    $(\"#es\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#so\").toggleClass('desktop_s', removeoradd_desktop);\n    $(\"#so\").toggleClass('desktop_button_box', removeoradd_desktop);\n\n\n    $(\"#ml\").toggleClass('mobile_map_label', removeoradd_mobile);\n    $(\"#mc\").toggleClass('mobile_map_control', removeoradd_mobile);\n    $(\"#up\").toggleClass('mobile_u', removeoradd_mobile);\n    $(\"#up\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#dn\").toggleClass('mobile_d', removeoradd_mobile);\n    $(\"#dn\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#we\").toggleClass('mobile_w', removeoradd_mobile);\n    $(\"#we\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#no\").toggleClass('mobile_n', removeoradd_mobile);\n    $(\"#no\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#es\").toggleClass('mobile_e', removeoradd_mobile);\n    $(\"#es\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#so\").toggleClass('mobile_s', removeoradd_mobile);\n    $(\"#so\").toggleClass('mobile_button_box', removeoradd_mobile);\n\n    //$(\".desktop_map_label .message\").html('<span>Downloading Descendant Tree</span>');\n\n\n    return retVal;\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":8428}]],"length":8428}
{"contributors":[],"silentsave":false,"ts":1355100540816,"patch":[[{"diffs":[[-1,"﻿\n\n\n"],[0,"\nvar "],[-1,"_tree = null;\nvar _moustQueue = new Array();\nvar _mouseDown = false;\nvar _isMobile = fals"],[1,"JSMaster, AncUtils,QryStrUtils,AncTree,Tre"],[0,"e;\n\n"],[1,"\n"],[0,"//var _"],[-1,"screenWidth = screen.width;\n//var _screenHeight = screen.height;\n\n$(window).bind('hashchange', function() {\n  // alert('hash changed');\n   run();\n});\n\n\n\n\n\n\n$(document).ready(function () {\n\n \n\n    createLimitedHeader(run);\n});\n\n\n\n\n\n\nfunction run() {\n    var params = {};\n    var _sourceId = getParameterByName('sid', '');\n    var _personId = getParameterByName('id', ''"],[1,"tree = null;\n \n//var _isMobile = false;\n \n \n \n \n$(document).ready(function () {\n    var jsMaster = new JSMaster();\n    var decTreeDiag = new DecTreeDiag("],[0,");\n"],[-1,"\n\n"],[0,"    "],[-1,"//switch css here!!!\n    //switch css here!!!\n    //switch css here!!!\n\n    //what is the plan?\n    //so we have a label\n    //and a control that we need to move\n    //depending on if we are running on a mobile or not.\n\n    //we need a new set of styling classes\n    //but we've got to keep the existing classes intact\n    //because they're used to identify stuff. \n\n    // so we should have mobile set and desktop set \n    // the existing set should be empty.\n\n\n\n    var int"],[1,"\n    jsMaster.connectfacebook(function () {        \n        decTreeDiag.run();\n    });    \n});\n\n\n \n\n\nvar DecTreeDiag = function () {\n    this.ancTree = null;\n    this.ancUtils = new AncUtils()"],[0,";\n   "],[-1," //"],[0," this"],[-1," is better =>\n    //You can detect iPhone and Android devices by inspecting the navigator.userAgent property within the DOM:\n    //************\n\n    var is_touch_device = 'ontouchstart' in document.documentElement;\n\n    var mode = '';\n\n    if (is_touch_device == true) {\n        _isMobile = true;\n        mode = SwitchMode(true);\n\n        $(mode).bind('touchstart',"],[1,".qryStrUtils = new QryStrUtils();\n    this._moustQueue = [];\n    this._mouseDown = false;\n};\n\nDecTreeDiag.prototype = {\n        run:"],[0," fun"]],"start1":0,"start2":0,"length1":1343,"length2":557},{"diffs":[[0,"   run: function"],[-1," (evt"],[1,"("],[0,") {\n            "]],"start1":546,"start2":546,"length1":37,"length2":33},{"diffs":[[0,"    "],[-1,"evt.preventDefault();\n\n            var _dir = '';\n\n            if (evt.target.id == \"up\") _dir = 'UP';\n            if (evt.target.id == \"dn\") _dir = 'DOWN';\n            if (evt.target.id == \"we\") _dir = 'WEST';\n            if (evt.target.id == \"no\") _dir = 'NORTH';\n            if (evt.target.id == \"es\") _dir = 'EAST';\n            if (evt.target.id == \"so\") _dir = 'SOUTH';\n\n            if (_tree != null) {\n                int = setInterval(function () { _tree.MoveTree(_dir); }, 100"],[1,"var params = {};\n    \n            var int;\n            var _sourceId = this.qryStrUtils.getParameterByName('sid', '');\n            var _personId = this.qryStrUtils.getParameterByName('id', ''"],[0,");\n "]],"start1":575,"start2":575,"length1":493,"length2":199},{"diffs":[[0," '');\n          "],[1,"\n"],[0," "],[-1," }"],[0,"\n        });\n\n\n "]],"start1":767,"start2":767,"length1":35,"length2":34},{"diffs":[[0,"    "],[-1,"});\n\n\n        $(mode).bind('touchend', function (evt) {\n\n            evt.preventDefault();\n            clearInterval(int);\n        });\n\n    }\n    else {\n        _isMobile = false;\n        mode = SwitchMode(false);\n\n\n        $(mode"],[1,"    $(\".button_box\""],[0,").mo"]],"start1":790,"start2":790,"length1":238,"length2":27},{"diffs":[[0,"    if (_tree !="],[-1,""],[1,"="],[0," null) {\n       "]],"start1":1203,"start2":1203,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"}).mouseup(function () {\n            clearInterval(int);\n        });\n\n        gLoop = setTimeout(GameLoop, 1000 / 50);\n\n        $(\"#myCanvas\").mousedown(function (evt) {\n            if (_tree != null) {\n                _mouseDown = true;\n            }\n        });\n\n\n        $(\"#myCanvas\").mouseup(function (evt) {\n\n            if (_tree != null) {\n                _mouseDown = false;\n\n                //     _tree.SetZoomStart();\n\n                var _point = new Array(1000000, 1000000);\n\n\n                _moustQueue[_moustQueue.length] = _point;\n\n            }\n        });\n\n\n        $(\"#myCanvas\").click(function (evt) {\n            if (_tree != null) {\n                //var _point = new Array(evt.clientX, evt.clientY);\n\n                _tree.PerformClick(evt.clientX, evt.clientY);\n\n                if (_tree.refreshData) {\n                    window.location.hash = _tree.qryString;\n\n\n                }\n\n\n                var _point = new Array(1000000, 1000000);\n\n\n                _moustQueue[_moustQueue.length] = _point;\n            }\n        });\n\n\n        $(\"#myCanvas\").mousemove(function (evt) {\n            if (_tree != null) {\n                var _point = new Array(evt.clientX, evt.clientY);\n\n                //  console.log(_point[0] + '-' + _point[1] + '_' + _screenWidth)\n                _tree.SetMouse(_point[0], _point[1]);\n\n                if (_mouseDown) {\n\n                    _moustQueue.push(_point);\n                }\n            }\n        });\n\n    }\n\n\n    if (_isMobile) {\n        $(\"#ml .message\").html('<span>Downloading</span>');\n    } else {\n        $(\"#ml .message\").html('<span>Downloading Descendant Tree</span>');\n    }\n\n    if(_sourceId == '' || _sourceId == '00000000-0000-0000-0000-000000000000')\n    {\n        params[0] = _sourceId;\n        params[1] = _personId;\n        twaGetJSON('/Trees/GetTreeDiagPerson', params, processData);\n    }\n    else\n    {\n        params[0] = _sourceId;\n        twaGetJSON('/Trees/GetTreeDiag', params, processData);\n    }\n}\n\n\nfunction processData(data) {\n\n\n    _tree = new Tree();\n    var _zoomLevel = getParameterByName('zoom', '');\n\n    _tree.SetInitialValues(Number(_zoomLevel), 30.0, 120.0, 70.0, 70.0, 100.0, 20.0, 40.0, 20.0, screen.width, screen.height);\n//    var _personId = '913501a6-1216-4764-be8c-ae11fd3a0a8b';\n//    var _zoomLevel = 100;\n//    var _xpos = 750.0;\n//    var _ypos = 100.0;\n\n    _tree.generations = data.Generations;\n\n    _tree.familiesPerGeneration = data.FamiliesPerGeneration;\n    _tree.familySpanLines = data.FamilySpanLines;\n    _tree.childlessMarriages = data.ChildlessMarriages;\n    _tree.sourceId = getParameterByName('sid', '');\n\n    var _personId = getParameterByName('id', '');\n\n    var _xpos = getParameterByName('xpos', '');\n    var _ypos = getParameterByName('ypos', '');\n\n\n  \n    _tree.RelocatePerson(_personId,_xpos,_ypos);\n\n\n    if (_tree.generations.length > 0) {\n        if (_tree.generations[0].length > 0) {\n            if (_isMobile) {\n                $(\"#ml .message\").html('<span>' + _tree.generations[0][0].Name + '</span>');\n            } else {\n                $(\"#ml .message\").html('<span>Descendants of ' + _tree.generations[0][0].Name + '</span>');\n            }\n        }\n    }\n\n\n    _tree.refreshData = false;\n}\n\n\nfunction GameLoop() {\n\n    while (_moustQueue.length > 0) {\n        var _point = _moustQueue.shift();\n\n\n        _tree.SetCentrePoint(_point[0], _point[1]);\n        _tree.DrawTree();\n    }\n\n    setTimeout(GameLoop, 1000 / 50);\n}\n\n\nfunction SwitchMode(ismobile) {\n\n    //false = remove\n\n    var removeoradd_desktop = false;\n    var removeoradd_mobile = false;\n    var retVal = '';\n\n    if (ismobile) {\n        retVal = '.mobile_button_box';\n        removeoradd_desktop = false;\n        removeoradd_mobile = true;\n    } else {\n        retVal = '.desktop_button_box';\n        removeoradd_desktop = true;\n        removeoradd_mobile = false;\n    }\n\n\n\n    $(\"#ml\").toggleClass('desktop_map_label', removeoradd_desktop);\n    $(\"#mc\").toggleClass('desktop_map_control', removeoradd_desktop);\n    $(\"#up\").toggleClass('desktop_u', removeoradd_desktop);\n    $(\"#up\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#dn\").toggleClass('desktop_d', removeoradd_desktop);\n    $(\"#dn\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#we\").toggleClass('desktop_w', removeoradd_desktop);\n    $(\"#we\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#no\").toggleClass('desktop_n', removeoradd_desktop);\n    $(\"#no\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#es\").toggleClass('desktop_e', removeoradd_desktop);\n    $(\"#es\").toggleClass('desktop_button_box', removeoradd_desktop);\n    $(\"#so\").toggleClass('desktop_s', removeoradd_desktop);\n    $(\"#so\").toggleClass('desktop_button_box', removeoradd_desktop);\n\n\n    $(\"#ml\").toggleClass('mobile_map_label', removeoradd_mobile);\n    $(\"#mc\").toggleClass('mobile_map_control', removeoradd_mobile);\n    $(\"#up\").toggleClass('mobile_u', removeoradd_mobile);\n    $(\"#up\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#dn\").toggleClass('mobile_d', removeoradd_mobile);\n    $(\"#dn\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#we\").toggleClass('mobile_w', removeoradd_mobile);\n    $(\"#we\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#no\").toggleClass('mobile_n', removeoradd_mobile);\n    $(\"#no\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#es\").toggleClass('mobile_e', removeoradd_mobile);\n    $(\"#es\").toggleClass('mobile_button_box', removeoradd_mobile);\n    $(\"#so\").toggleClass('mobile_s', removeoradd_mobile);\n    $(\"#so\").toggleClass('mobile_button_box', removeoradd_mobile);\n\n    //$(\".desktop_map_label .message\").html('<span>Downloading Descendant Tree</span>');\n\n\n    return retVal;\n}"],[1,"    }).mouseup(function () {\n                clearInterval(int);\n            });\n    \n            setTimeout(GameLoop, 1000 / 50);\n            \n            \n            \n            $(\"#myCanvas\").mousedown(function (evt) {\n                if (this.ancTree !== null) {\n                    this._mouseDown = true;\n                }\n            });\n            \n            \n            \n            $(\"#myCanvas\").mouseup(function (evt) {\n                if (this.ancTree !== null) {\n                    this._mouseDown = false;\n    \n                    var _point = new Array(1000000, 1000000);\n                    this._moustQueue[this._moustQueue.length] = _point;\n    \n                    } \n            });\n            \n            $(\"#myCanvas\").click(function (evt) {\n                if (_tree !== null) {\n                    _tree.PerformClick(evt.clientX, evt.clientY);\n                    if (_tree.refreshData) {\n                        window.location.hash = _tree.qryString;\n                    }\n                    var _point = new Array(1000000, 1000000);\n    \n    \n                    this._moustQueue[this._moustQueue.length] = _point;\n                }\n            });\n            $(\"#myCanvas\").mousemove(function (evt) {\n                if (_tree !== null) {\n                    var _point = new Array(evt.clientX, evt.clientY);\n                    _tree.SetMouse(_point[0], _point[1]);\n                    if (this._mouseDown) {\n                        this._moustQueue.push(_point);\n                    }\n                }\n            });\n            \n             $(\"#ml .message\").html('<span>Downloading Descendant Tree</span>');\n   \n\n            if(_sourceId === '' || _sourceId === '00000000-0000-0000-0000-000000000000')\n            {\n                params[0] = _sourceId;\n                params[1] = _personId;\n           \n                this.ancUtils.twaGetJSON('/Trees/GetTreeDiagPerson', params, $.proxy(this.processData, this));\n            }\n            else\n            {\n                params[0] = _sourceId;\n                this.ancUtils.twaGetJSON('/Trees/GetTreeDiag', params, $.proxy(this.processData, this));\n              \n            }\n\n\n       \n\n\n        \n            \n            \n            \n            \n            \n            \n            \n            \n            \n        },\n        processData: function (data) {\n\n\n            this.ancTree = new Tree();\n            var _zoomLevel = this.qryStrUtils.getParameterByName('zoom', '');\n\n            this.ancTree.SetInitialValues(Number(_zoomLevel), 30.0, 120.0, 70.0, 70.0, 100.0, 20.0, 40.0, 20.0, screen.width, screen.height);\n            \n//    var _personId = '913501a6-1216-4764-be8c-ae11fd3a0a8b';\n//    var _zoomLevel = 100;\n//    var _xpos = 750.0;\n//    var _ypos = 100.0;\n\n            this.ancTree.generations = data.Generations;\n        \n            this.ancTree.familiesPerGeneration = data.FamiliesPerGeneration;\n            this.ancTree.familySpanLines = data.FamilySpanLines;\n            this.ancTree.childlessMarriages = data.ChildlessMarriages;\n            this.ancTree.sourceId = this.qryStrUtils.getParameterByName('sid', '');\n\n            var _personId = this.qryStrUtils.getParameterByName('id', '');\n        \n            var _xpos = this.qryStrUtils.getParameterByName('xpos', '');\n            var _ypos = this.qryStrUtils.getParameterByName('ypos', '');\n  \n            this.ancTree.RelocatePerson(_personId,_xpos,_ypos);\n\n            if (this.ancTree.generations.length > 0) {\n                if (this.ancTree.generations[0].length > 0) {\n                    $(\"#map_label .message\").html('<span>Descendants of ' + this.ancTree.generations[0][0].Name + '</span>');\n                }\n            }\n            \n            \n            this.ancTree.refreshData = false;\n        },\n        GameLoop: function() {\n\n            while (this._moustQueue.length > 0) {\n                var _point = this._moustQueue.shift();\n        \n        \n                this.ancTree.SetCentrePoint(_point[0], _point[1]);\n                this.ancTree.DrawTree();\n            }\n\n            setTimeout($.proxy(this.GameLoop, this));\n        }\n\n};\n\n\n\n \n\n\n\n\n\n\n\n "],[0,"\n"]],"start1":1327,"start2":1327,"length1":5806,"length2":4170}]],"length":5497,"saved":false}
